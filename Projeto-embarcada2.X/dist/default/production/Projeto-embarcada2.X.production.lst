

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 15:31:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.32
    55                           ; Generated 02/02/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  002D50                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for escolheComida@F2982
    95  002D50  45                 	db	69
    96  002D51  73                 	db	115
    97  002D52  63                 	db	99
    98  002D53  6F                 	db	111
    99  002D54  6C                 	db	108
   100  002D55  68                 	db	104
   101  002D56  69                 	db	105
   102  002D57  64                 	db	100
   103  002D58  6F                 	db	111
   104  002D59  3A                 	db	58
   105  002D5A  0A                 	db	10
   106  002D5B  43                 	db	67
   107  002D5C  61                 	db	97
   108  002D5D  72                 	db	114
   109  002D5E  6E                 	db	110
   110  002D5F  65                 	db	101
   111  002D60  20                 	db	32
   112  002D61  42                 	db	66
   113  002D62  6F                 	db	111
   114  002D63  76                 	db	118
   115  002D64  69                 	db	105
   116  002D65  6E                 	db	110
   117  002D66  61                 	db	97
   118  002D67  00                 	db	0
   119                           
   120                           ;initializer for escolheComida@F2986
   121  002D68  45                 	db	69
   122  002D69  73                 	db	115
   123  002D6A  63                 	db	99
   124  002D6B  6F                 	db	111
   125  002D6C  6C                 	db	108
   126  002D6D  68                 	db	104
   127  002D6E  69                 	db	105
   128  002D6F  64                 	db	100
   129  002D70  6F                 	db	111
   130  002D71  3A                 	db	58
   131  002D72  0A                 	db	10
   132  002D73  43                 	db	67
   133  002D74  61                 	db	97
   134  002D75  72                 	db	114
   135  002D76  6E                 	db	110
   136  002D77  65                 	db	101
   137  002D78  20                 	db	32
   138  002D79  53                 	db	83
   139  002D7A  75                 	db	117
   140  002D7B  69                 	db	105
   141  002D7C  6E                 	db	110
   142  002D7D  61                 	db	97
   143  002D7E  00                 	db	0
   144                           
   145                           ;initializer for escolheComida@F2984
   146  002D7F  45                 	db	69
   147  002D80  73                 	db	115
   148  002D81  63                 	db	99
   149  002D82  6F                 	db	111
   150  002D83  6C                 	db	108
   151  002D84  68                 	db	104
   152  002D85  69                 	db	105
   153  002D86  64                 	db	100
   154  002D87  6F                 	db	111
   155  002D88  3A                 	db	58
   156  002D89  0A                 	db	10
   157  002D8A  46                 	db	70
   158  002D8B  65                 	db	101
   159  002D8C  69                 	db	105
   160  002D8D  6A                 	db	106
   161  002D8E  61                 	db	97
   162  002D8F  6F                 	db	111
   163  002D90  00                 	db	0
   164  002D91  00                 	db	0
   165                           
   166                           ;initializer for escolheComida@F2980
   167  002D92  45                 	db	69
   168  002D93  73                 	db	115
   169  002D94  63                 	db	99
   170  002D95  6F                 	db	111
   171  002D96  6C                 	db	108
   172  002D97  68                 	db	104
   173  002D98  69                 	db	105
   174  002D99  64                 	db	100
   175  002D9A  6F                 	db	111
   176  002D9B  3A                 	db	58
   177  002D9C  0A                 	db	10
   178  002D9D  46                 	db	70
   179  002D9E  72                 	db	114
   180  002D9F  61                 	db	97
   181  002DA0  6E                 	db	110
   182  002DA1  67                 	db	103
   183  002DA2  6F                 	db	111
   184  002DA3  00                 	db	0
   185  002DA4  00                 	db	0
   186                           
   187                           ;initializer for abreTampa@F2954
   188  002DA5  46                 	db	70
   189  002DA6  65                 	db	101
   190  002DA7  63                 	db	99
   191  002DA8  68                 	db	104
   192  002DA9  61                 	db	97
   193  002DAA  6E                 	db	110
   194  002DAB  64                 	db	100
   195  002DAC  6F                 	db	111
   196  002DAD  20                 	db	32
   197  002DAE  74                 	db	116
   198  002DAF  61                 	db	97
   199  002DB0  6D                 	db	109
   200  002DB1  70                 	db	112
   201  002DB2  61                 	db	97
   202                           
   203                           ;initializer for abreTampa@F2952
   204  002DB3  49                 	db	73
   205  002DB4  6E                 	db	110
   206  002DB5  73                 	db	115
   207  002DB6  69                 	db	105
   208  002DB7  72                 	db	114
   209  002DB8  61                 	db	97
   210  002DB9  20                 	db	32
   211  002DBA  61                 	db	97
   212  002DBB  20                 	db	32
   213  002DBC  61                 	db	97
   214  002DBD  67                 	db	103
   215  002DBE  75                 	db	117
   216  002DBF  61                 	db	97
   217                           
   218                           ;initializer for abreTampa@F2950
   219  002DC0  41                 	db	65
   220  002DC1  62                 	db	98
   221  002DC2  72                 	db	114
   222  002DC3  69                 	db	105
   223  002DC4  6E                 	db	110
   224  002DC5  64                 	db	100
   225  002DC6  6F                 	db	111
   226  002DC7  20                 	db	32
   227  002DC8  74                 	db	116
   228  002DC9  61                 	db	97
   229  002DCA  6D                 	db	109
   230  002DCB  70                 	db	112
   231  002DCC  61                 	db	97
   232                           
   233                           	psect	idataBANK1
   234  0030B0                     __pidataBANK1:
   235                           	callstack 0
   236                           
   237                           ;initializer for escolheTempo@F2968
   238  0030B0  34                 	db	52
   239  0030B1  2D                 	db	45
   240  0030B2  20                 	db	32
   241  0030B3  2B                 	db	43
   242  0030B4  31                 	db	49
   243  0030B5  6D                 	db	109
   244  0030B6  20                 	db	32
   245  0030B7  35                 	db	53
   246  0030B8  2D                 	db	45
   247  0030B9  20                 	db	32
   248  0030BA  2D                 	db	45
   249  0030BB  31                 	db	49
   250  0030BC  6D                 	db	109
   251  0030BD  0A                 	db	10
   252  0030BE  37                 	db	55
   253  0030BF  2D                 	db	45
   254  0030C0  20                 	db	32
   255  0030C1  2B                 	db	43
   256  0030C2  31                 	db	49
   257  0030C3  73                 	db	115
   258  0030C4  20                 	db	32
   259  0030C5  20                 	db	32
   260  0030C6  38                 	db	56
   261  0030C7  2D                 	db	45
   262  0030C8  20                 	db	32
   263  0030C9  2D                 	db	45
   264  0030CA  31                 	db	49
   265  0030CB  73                 	db	115
   266                           
   267                           ;initializer for main@F2939
   268  0030CC  44                 	db	68
   269  0030CD  65                 	db	101
   270  0030CE  73                 	db	115
   271  0030CF  65                 	db	101
   272  0030D0  6A                 	db	106
   273  0030D1  61                 	db	97
   274  0030D2  20                 	db	32
   275  0030D3  63                 	db	99
   276  0030D4  6F                 	db	111
   277  0030D5  7A                 	db	122
   278  0030D6  69                 	db	105
   279  0030D7  6E                 	db	110
   280  0030D8  68                 	db	104
   281  0030D9  61                 	db	97
   282  0030DA  72                 	db	114
   283  0030DB  0A                 	db	10
   284  0030DC  6E                 	db	110
   285  0030DD  6F                 	db	111
   286  0030DE  76                 	db	118
   287  0030DF  61                 	db	97
   288  0030E0  6D                 	db	109
   289  0030E1  65                 	db	101
   290  0030E2  6E                 	db	110
   291  0030E3  74                 	db	116
   292  0030E4  65                 	db	101
   293  0030E5  3F                 	db	63
   294                           
   295                           ;initializer for escolheTempo@F2966
   296  0030E6  44                 	db	68
   297  0030E7  69                 	db	105
   298  0030E8  67                 	db	103
   299  0030E9  69                 	db	105
   300  0030EA  74                 	db	116
   301  0030EB  65                 	db	101
   302  0030EC  20                 	db	32
   303  0030ED  2A                 	db	42
   304  0030EE  0A                 	db	10
   305  0030EF  70                 	db	112
   306  0030F0  61                 	db	97
   307  0030F1  72                 	db	114
   308  0030F2  61                 	db	97
   309  0030F3  20                 	db	32
   310  0030F4  69                 	db	105
   311  0030F5  6E                 	db	110
   312  0030F6  69                 	db	105
   313  0030F7  63                 	db	99
   314  0030F8  69                 	db	105
   315  0030F9  61                 	db	97
   316  0030FA  72                 	db	114
   317                           
   318                           ;initializer for escolheTempo@F2964
   319  0030FB  45                 	db	69
   320  0030FC  73                 	db	115
   321  0030FD  63                 	db	99
   322  0030FE  6F                 	db	111
   323  0030FF  6C                 	db	108
   324  003100  68                 	db	104
   325  003101  61                 	db	97
   326  003102  20                 	db	32
   327  003103  6F                 	db	111
   328  003104  20                 	db	32
   329  003105  74                 	db	116
   330  003106  65                 	db	101
   331  003107  6D                 	db	109
   332  003108  70                 	db	112
   333  003109  6F                 	db	111
   334                           
   335                           	psect	idataBANK2
   336  003053                     __pidataBANK2:
   337                           	callstack 0
   338                           
   339                           ;initializer for main@F2937
   340  003053  35                 	db	53
   341  003054  2D                 	db	45
   342  003055  43                 	db	67
   343  003056  61                 	db	97
   344  003057  72                 	db	114
   345  003058  6E                 	db	110
   346  003059  65                 	db	101
   347  00305A  20                 	db	32
   348  00305B  53                 	db	83
   349  00305C  75                 	db	117
   350  00305D  69                 	db	105
   351  00305E  6E                 	db	110
   352  00305F  61                 	db	97
   353  003060  20                 	db	32
   354  003061  20                 	db	32
   355  003062  20                 	db	32
   356  003063  00                 	db	0
   357                           
   358                           ;initializer for main@F2935
   359  003064  34                 	db	52
   360  003065  2D                 	db	45
   361  003066  46                 	db	70
   362  003067  65                 	db	101
   363  003068  69                 	db	105
   364  003069  6A                 	db	106
   365  00306A  61                 	db	97
   366  00306B  6F                 	db	111
   367  00306C  20                 	db	32
   368  00306D  20                 	db	32
   369  00306E  20                 	db	32
   370  00306F  20                 	db	32
   371  003070  20                 	db	32
   372  003071  20                 	db	32
   373  003072  20                 	db	32
   374  003073  20                 	db	32
   375  003074  00                 	db	0
   376                           
   377                           ;initializer for main@F2933
   378  003075  32                 	db	50
   379  003076  2D                 	db	45
   380  003077  43                 	db	67
   381  003078  61                 	db	97
   382  003079  72                 	db	114
   383  00307A  6E                 	db	110
   384  00307B  65                 	db	101
   385  00307C  20                 	db	32
   386  00307D  42                 	db	66
   387  00307E  6F                 	db	111
   388  00307F  76                 	db	118
   389  003080  69                 	db	105
   390  003081  6E                 	db	110
   391  003082  61                 	db	97
   392  003083  20                 	db	32
   393  003084  20                 	db	32
   394  003085  00                 	db	0
   395                           
   396                           ;initializer for main@F2931
   397  003086  31                 	db	49
   398  003087  2D                 	db	45
   399  003088  46                 	db	70
   400  003089  72                 	db	114
   401  00308A  61                 	db	97
   402  00308B  6E                 	db	110
   403  00308C  67                 	db	103
   404  00308D  6F                 	db	111
   405  00308E  20                 	db	32
   406  00308F  20                 	db	32
   407  003090  20                 	db	32
   408  003091  20                 	db	32
   409  003092  20                 	db	32
   410  003093  20                 	db	32
   411  003094  20                 	db	32
   412  003095  20                 	db	32
   413  003096  00                 	db	0
   414                           
   415                           ;initializer for main@F2945
   416  003097  44                 	db	68
   417  003098  65                 	db	101
   418  003099  73                 	db	115
   419  00309A  6C                 	db	108
   420  00309B  69                 	db	105
   421  00309C  67                 	db	103
   422  00309D  61                 	db	97
   423  00309E  6E                 	db	110
   424  00309F  64                 	db	100
   425  0030A0  6F                 	db	111
   426  0030A1  2E                 	db	46
   427  0030A2  2E                 	db	46
   428  0030A3  2E                 	db	46
   429                           
   430                           ;initializer for main@F2941
   431  0030A4  39                 	db	57
   432  0030A5  2D                 	db	45
   433  0030A6  53                 	db	83
   434  0030A7  69                 	db	105
   435  0030A8  6D                 	db	109
   436  0030A9  20                 	db	32
   437  0030AA  0A                 	db	10
   438  0030AB  23                 	db	35
   439  0030AC  2D                 	db	45
   440  0030AD  4E                 	db	78
   441  0030AE  61                 	db	97
   442  0030AF  6F                 	db	111
   443                           
   444                           	psect	idataBANK3
   445  002FF4                     __pidataBANK3:
   446                           	callstack 0
   447                           
   448                           ;initializer for escolheTempo@F2970
   449  002FF4  00                 	db	0
   450  002FF5  00                 	db	0
   451  002FF6  02                 	db	2
   452  002FF7  02                 	db	2
   453  002FF8  06                 	db	6
   454  002FF9  06                 	db	6
   455  002FFA  02                 	db	2
   456  002FFB  02                 	db	2
   457  002FFC  08                 	db	8
   458  002FFD  0C                 	db	12
   459  002FFE  0A                 	db	10
   460  002FFF  09                 	db	9
   461  003000  05                 	db	5
   462  003001  15                 	db	21
   463  003002  19                 	db	25
   464  003003  0A                 	db	10
   465  003004  00                 	db	0
   466  003005  08                 	db	8
   467  003006  08                 	db	8
   468  003007  08                 	db	8
   469  003008  08                 	db	8
   470  003009  00                 	db	0
   471  00300A  00                 	db	0
   472  00300B  00                 	db	0
   473  00300C  02                 	db	2
   474  00300D  02                 	db	2
   475  00300E  06                 	db	6
   476  00300F  0A                 	db	10
   477  003010  09                 	db	9
   478  003011  08                 	db	8
   479  003012  06                 	db	6
   480  003013  01                 	db	1
   481  003014  0A                 	db	10
   482  003015  0A                 	db	10
   483  003016  09                 	db	9
   484  003017  11                 	db	17
   485  003018  11                 	db	17
   486  003019  00                 	db	0
   487  00301A  00                 	db	0
   488  00301B  1F                 	db	31
   489  00301C  04                 	db	4
   490  00301D  04                 	db	4
   491  00301E  04                 	db	4
   492  00301F  0A                 	db	10
   493  003020  12                 	db	18
   494  003021  02                 	db	2
   495  003022  04                 	db	4
   496  003023  18                 	db	24
   497  003024  00                 	db	0
   498  003025  00                 	db	0
   499  003026  00                 	db	0
   500  003027  00                 	db	0
   501  003028  00                 	db	0
   502  003029  00                 	db	0
   503  00302A  00                 	db	0
   504  00302B  00                 	db	0
   505  00302C  00                 	db	0
   506  00302D  00                 	db	0
   507  00302E  00                 	db	0
   508  00302F  00                 	db	0
   509  003030  00                 	db	0
   510  003031  00                 	db	0
   511  003032  00                 	db	0
   512  003033  00                 	db	0
   513                           
   514                           ;initializer for main@F2929
   515  003034  51                 	db	81
   516  003035  75                 	db	117
   517  003036  61                 	db	97
   518  003037  6C                 	db	108
   519  003038  20                 	db	32
   520  003039  61                 	db	97
   521  00303A  6C                 	db	108
   522  00303B  69                 	db	105
   523  00303C  6D                 	db	109
   524  00303D  65                 	db	101
   525  00303E  6E                 	db	110
   526  00303F  74                 	db	116
   527  003040  6F                 	db	111
   528  003041  0A                 	db	10
   529  003042  71                 	db	113
   530  003043  75                 	db	117
   531  003044  65                 	db	101
   532  003045  72                 	db	114
   533  003046  20                 	db	32
   534  003047  63                 	db	99
   535  003048  6F                 	db	111
   536  003049  7A                 	db	122
   537  00304A  69                 	db	105
   538  00304B  6E                 	db	110
   539  00304C  68                 	db	104
   540  00304D  61                 	db	97
   541  00304E  72                 	db	114
   542  00304F  3F                 	db	63
   543  003050  00                 	db	0
   544  003051  00                 	db	0
   545  003052  00                 	db	0
   546                           
   547                           	psect	smallconst
   548  000600                     __psmallconst:
   549                           	callstack 0
   550  000600  00                 	db	0
   551  000601                     _valor@ssd$F178:
   552                           	callstack 0
   553  000601  3F                 	db	63
   554  000602  06                 	db	6
   555  000603  5B                 	db	91
   556  000604  4F                 	db	79
   557  000605  66                 	db	102
   558  000606  6D                 	db	109
   559  000607  7D                 	db	125
   560  000608  07                 	db	7
   561  000609  7F                 	db	127
   562  00060A  6F                 	db	111
   563  00060B  77                 	db	119
   564  00060C  7C                 	db	124
   565  00060D  39                 	db	57
   566  00060E  5E                 	db	94
   567  00060F  79                 	db	121
   568  000610  71                 	db	113
   569  000611                     __end_of_valor@ssd$F178:
   570                           	callstack 0
   571  0000                     _TRISE	set	3990
   572  0000                     _TRISD	set	3989
   573  0000                     _TRISC	set	3988
   574  0000                     _TRISB	set	3987
   575  0000                     _TRISA	set	3986
   576  0000                     _PORTE	set	3972
   577  0000                     _PORTD	set	3971
   578  0000                     _PORTC	set	3970
   579  0000                     _PORTB	set	3969
   580  0000                     _PORTA	set	3968
   581  000611  00                 	db	0	; dummy byte at the end
   582  0000                     
   583                           ; #config settings
   584                           
   585                           	psect	cinit
   586  002C3C                     __pcinit:
   587                           	callstack 0
   588  002C3C                     start_initialization:
   589                           	callstack 0
   590  002C3C                     __initialization:
   591                           	callstack 0
   592                           
   593                           ; Initialize objects allocated to BANK3 (95 bytes)
   594                           ; load TBLPTR registers with __pidataBANK3
   595  002C3C  0EF4               	movlw	low __pidataBANK3
   596  002C3E  6EF6               	movwf	tblptrl,c
   597  002C40  0E2F               	movlw	high __pidataBANK3
   598  002C42  6EF7               	movwf	tblptrh,c
   599  002C44  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   600  002C46  6EF8               	movwf	tblptru,c
   601  002C48  EE03  F000         	lfsr	0,__pdataBANK3
   602  002C4C  EE10 F05F          	lfsr	1,95
   603  002C50                     copy_data0:
   604  002C50  0009               	tblrd		*+
   605  002C52  CFF5 FFEE          	movff	tablat,postinc0
   606  002C56  50E5               	movf	postdec1,w,c
   607  002C58  50E1               	movf	fsr1l,w,c
   608  002C5A  E1FA               	bnz	copy_data0
   609                           
   610                           ; Initialize objects allocated to BANK2 (93 bytes)
   611                           ; load TBLPTR registers with __pidataBANK2
   612  002C5C  0E53               	movlw	low __pidataBANK2
   613  002C5E  6EF6               	movwf	tblptrl,c
   614  002C60  0E30               	movlw	high __pidataBANK2
   615  002C62  6EF7               	movwf	tblptrh,c
   616  002C64  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   617  002C66  6EF8               	movwf	tblptru,c
   618  002C68  EE02  F0A3         	lfsr	0,__pdataBANK2
   619  002C6C  EE10 F05D          	lfsr	1,93
   620  002C70                     copy_data1:
   621  002C70  0009               	tblrd		*+
   622  002C72  CFF5 FFEE          	movff	tablat,postinc0
   623  002C76  50E5               	movf	postdec1,w,c
   624  002C78  50E1               	movf	fsr1l,w,c
   625  002C7A  E1FA               	bnz	copy_data1
   626                           
   627                           ; Initialize objects allocated to BANK1 (90 bytes)
   628                           ; load TBLPTR registers with __pidataBANK1
   629  002C7C  0EB0               	movlw	low __pidataBANK1
   630  002C7E  6EF6               	movwf	tblptrl,c
   631  002C80  0E30               	movlw	high __pidataBANK1
   632  002C82  6EF7               	movwf	tblptrh,c
   633  002C84  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   634  002C86  6EF8               	movwf	tblptru,c
   635  002C88  EE01  F092         	lfsr	0,__pdataBANK1
   636  002C8C  EE10 F05A          	lfsr	1,90
   637  002C90                     copy_data2:
   638  002C90  0009               	tblrd		*+
   639  002C92  CFF5 FFEE          	movff	tablat,postinc0
   640  002C96  50E5               	movf	postdec1,w,c
   641  002C98  50E1               	movf	fsr1l,w,c
   642  002C9A  E1FA               	bnz	copy_data2
   643                           
   644                           ; Initialize objects allocated to BANK0 (125 bytes)
   645                           ; load TBLPTR registers with __pidataBANK0
   646  002C9C  0E50               	movlw	low __pidataBANK0
   647  002C9E  6EF6               	movwf	tblptrl,c
   648  002CA0  0E2D               	movlw	high __pidataBANK0
   649  002CA2  6EF7               	movwf	tblptrh,c
   650  002CA4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   651  002CA6  6EF8               	movwf	tblptru,c
   652  002CA8  EE00  F080         	lfsr	0,__pdataBANK0
   653  002CAC  EE10 F07D          	lfsr	1,125
   654  002CB0                     copy_data3:
   655  002CB0  0009               	tblrd		*+
   656  002CB2  CFF5 FFEE          	movff	tablat,postinc0
   657  002CB6  50E5               	movf	postdec1,w,c
   658  002CB8  50E1               	movf	fsr1l,w,c
   659  002CBA  E1FA               	bnz	copy_data3
   660                           
   661                           ; Clear objects allocated to COMRAM (12 bytes)
   662  002CBC  EE00  F06F         	lfsr	0,__pbssCOMRAM
   663  002CC0  0E0C               	movlw	12
   664  002CC2                     clear_0:
   665  002CC2  6AEE               	clrf	postinc0,c
   666  002CC4  06E8               	decf	wreg,f,c
   667  002CC6  E1FD               	bnz	clear_0
   668  002CC8                     end_of_initialization:
   669                           	callstack 0
   670  002CC8                     __end_of__initialization:
   671                           	callstack 0
   672  002CC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   673  002CCA  6EF8               	movwf	tblptru,c
   674  002CCC  0100               	movlb	0
   675  002CCE  EFC2  F007         	goto	_main	;jump to C main() function
   676                           
   677                           	psect	bssCOMRAM
   678  00006F                     __pbssCOMRAM:
   679                           	callstack 0
   680  00006F                     kpDebounce@valorAntigo:
   681                           	callstack 0
   682  00006F                     	ds	2
   683  000071                     kpDebounce@valorNovo:
   684                           	callstack 0
   685  000071                     	ds	2
   686  000073                     _valor:
   687                           	callstack 0
   688  000073                     	ds	2
   689  000075                     _v3:
   690                           	callstack 0
   691  000075                     	ds	1
   692  000076                     _v2:
   693                           	callstack 0
   694  000076                     	ds	1
   695  000077                     _v1:
   696                           	callstack 0
   697  000077                     	ds	1
   698  000078                     _v0:
   699                           	callstack 0
   700  000078                     	ds	1
   701  000079                     _display:
   702                           	callstack 0
   703  000079                     	ds	1
   704  00007A                     kpDebounce@tempo:
   705                           	callstack 0
   706  00007A                     	ds	1
   707                           
   708                           	psect	dataBANK0
   709  000080                     __pdataBANK0:
   710                           	callstack 0
   711  000080                     escolheComida@F2982:
   712                           	callstack 0
   713  000080                     	ds	24
   714  000098                     escolheComida@F2986:
   715                           	callstack 0
   716  000098                     	ds	23
   717  0000AF                     escolheComida@F2984:
   718                           	callstack 0
   719  0000AF                     	ds	19
   720  0000C2                     escolheComida@F2980:
   721                           	callstack 0
   722  0000C2                     	ds	19
   723  0000D5                     abreTampa@F2954:
   724                           	callstack 0
   725  0000D5                     	ds	14
   726  0000E3                     abreTampa@F2952:
   727                           	callstack 0
   728  0000E3                     	ds	13
   729  0000F0                     abreTampa@F2950:
   730                           	callstack 0
   731  0000F0                     	ds	13
   732                           
   733                           	psect	dataBANK1
   734  000192                     __pdataBANK1:
   735                           	callstack 0
   736  000192                     escolheTempo@F2968:
   737                           	callstack 0
   738  000192                     	ds	28
   739  0001AE                     main@F2939:
   740                           	callstack 0
   741  0001AE                     	ds	26
   742  0001C8                     escolheTempo@F2966:
   743                           	callstack 0
   744  0001C8                     	ds	21
   745  0001DD                     escolheTempo@F2964:
   746                           	callstack 0
   747  0001DD                     	ds	15
   748                           
   749                           	psect	dataBANK2
   750  0002A3                     __pdataBANK2:
   751                           	callstack 0
   752  0002A3                     main@F2937:
   753                           	callstack 0
   754  0002A3                     	ds	17
   755  0002B4                     main@F2935:
   756                           	callstack 0
   757  0002B4                     	ds	17
   758  0002C5                     main@F2933:
   759                           	callstack 0
   760  0002C5                     	ds	17
   761  0002D6                     main@F2931:
   762                           	callstack 0
   763  0002D6                     	ds	17
   764  0002E7                     main@F2945:
   765                           	callstack 0
   766  0002E7                     	ds	13
   767  0002F4                     main@F2941:
   768                           	callstack 0
   769  0002F4                     	ds	12
   770                           
   771                           	psect	dataBANK3
   772  000300                     __pdataBANK3:
   773                           	callstack 0
   774  000300                     escolheTempo@F2970:
   775                           	callstack 0
   776  000300                     	ds	64
   777  000340                     main@F2929:
   778                           	callstack 0
   779  000340                     	ds	31
   780                           
   781                           	psect	cstackBANK2
   782  000200                     __pcstackBANK2:
   783                           	callstack 0
   784  000200                     main@msg:
   785                           	callstack 0
   786                           
   787                           ; 31 bytes @ 0x0
   788  000200                     	ds	31
   789  00021F                     main@fr:
   790                           	callstack 0
   791                           
   792                           ; 17 bytes @ 0x1F
   793  00021F                     	ds	17
   794  000230                     main@b:
   795                           	callstack 0
   796                           
   797                           ; 17 bytes @ 0x30
   798  000230                     	ds	17
   799  000241                     main@f:
   800                           	callstack 0
   801                           
   802                           ; 17 bytes @ 0x41
   803  000241                     	ds	17
   804  000252                     main@s:
   805                           	callstack 0
   806                           
   807                           ; 17 bytes @ 0x52
   808  000252                     	ds	17
   809  000263                     main@final:
   810                           	callstack 0
   811                           
   812                           ; 26 bytes @ 0x63
   813  000263                     	ds	26
   814  00027D                     main@agradece:
   815                           	callstack 0
   816                           
   817                           ; 13 bytes @ 0x7D
   818  00027D                     	ds	13
   819  00028A                     main@final2:
   820                           	callstack 0
   821                           
   822                           ; 12 bytes @ 0x8A
   823  00028A                     	ds	12
   824  000296                     main@aux2:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x96
   828  000296                     	ds	2
   829  000298                     main@op:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x98
   833  000298                     	ds	2
   834  00029A                     main@aux3:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x9A
   838  00029A                     	ds	2
   839  00029C                     main@tecla:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x9C
   843  00029C                     	ds	2
   844  00029E                     main@k:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x9E
   848  00029E                     	ds	4
   849  0002A2                     main@i:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0xA2
   853  0002A2                     	ds	1
   854                           
   855                           	psect	cstackBANK1
   856  000100                     __pcstackBANK1:
   857                           	callstack 0
   858  000100                     escolheTempo@foguinho:
   859                           	callstack 0
   860                           
   861                           ; 64 bytes @ 0x0
   862  000100                     	ds	64
   863  000140                     escolheTempo@msg3:
   864                           	callstack 0
   865                           
   866                           ; 28 bytes @ 0x40
   867  000140                     	ds	28
   868  00015C                     escolheTempo@msg:
   869                           	callstack 0
   870                           
   871                           ; 15 bytes @ 0x5C
   872  00015C                     	ds	15
   873  00016B                     escolheTempo@msg2:
   874                           	callstack 0
   875                           
   876                           ; 21 bytes @ 0x6B
   877  00016B                     	ds	21
   878  000180                     escolheTempo@k:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x80
   882  000180                     	ds	2
   883  000182                     escolheTempo@aux:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x82
   887  000182                     	ds	2
   888  000184                     escolheTempo@flag:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x84
   892  000184                     	ds	2
   893  000186                     escolheTempo@tempo:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x86
   897  000186                     	ds	4
   898  00018A                     escolheTempo@tecla:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x8A
   902  00018A                     	ds	2
   903  00018C                     escolheTempo@cont:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x8C
   907  00018C                     	ds	4
   908  000190                     escolheTempo@i:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x90
   912  000190                     	ds	2
   913                           
   914                           	psect	cstackCOMRAM
   915  000001                     __pcstackCOMRAM:
   916                           	callstack 0
   917  000001                     ??_kpDebounce:
   918  000001                     ?_strcmp:
   919                           	callstack 0
   920  000001                     ?_kpRead:
   921                           	callstack 0
   922  000001                     ?___wmul:
   923                           	callstack 0
   924  000001                     ?___lwdiv:
   925                           	callstack 0
   926  000001                     ?___fladd:
   927                           	callstack 0
   928  000001                     ?___aldiv:
   929                           	callstack 0
   930  000001                     Delay40us@i:
   931                           	callstack 0
   932  000001                     digitalWrite@pin:
   933                           	callstack 0
   934  000001                     pinMode@pin:
   935                           	callstack 0
   936  000001                     atraso_ms@t:
   937                           	callstack 0
   938  000001                     ___wmul@multiplier:
   939                           	callstack 0
   940  000001                     ___lwdiv@dividend:
   941                           	callstack 0
   942  000001                     strcmp@l:
   943                           	callstack 0
   944  000001                     ___aldiv@dividend:
   945                           	callstack 0
   946  000001                     ___flge@ff1:
   947                           	callstack 0
   948  000001                     ___fladd@b:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x0
   952  000001                     	ds	1
   953  000002                     Delay2ms@i:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x1
   957  000002                     	ds	1
   958  000003                     digitalWrite@value:
   959                           	callstack 0
   960  000003                     pinMode@type:
   961                           	callstack 0
   962  000003                     atraso_ms@i:
   963                           	callstack 0
   964  000003                     ___wmul@multiplicand:
   965                           	callstack 0
   966  000003                     ___lwdiv@divisor:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x2
   970  000003                     	ds	1
   971  000004                     strcmp@r:
   972                           	callstack 0
   973                           
   974                           ; 3 bytes @ 0x3
   975  000004                     	ds	1
   976  000005                     ??_digitalWrite:
   977  000005                     ??_pinMode:
   978  000005                     atraso_ms@j:
   979                           	callstack 0
   980  000005                     ___wmul@product:
   981                           	callstack 0
   982  000005                     ___lwdiv@quotient:
   983                           	callstack 0
   984  000005                     ___aldiv@divisor:
   985                           	callstack 0
   986  000005                     ___flge@ff2:
   987                           	callstack 0
   988  000005                     ___fladd@a:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x4
   992  000005                     	ds	1
   993  000006                     kpDebounce@old_D:
   994                           	callstack 0
   995  000006                     atraso_ms@k:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x5
   999  000006                     	ds	1
  1000  000007                     ??_strcmp:
  1001  000007                     ??_ssdUpdate:
  1002  000007                     lcdCommand@old_D:
  1003                           	callstack 0
  1004  000007                     lcdData@valor:
  1005                           	callstack 0
  1006  000007                     ___lwdiv@counter:
  1007                           	callstack 0
  1008  000007                     kpDebounce@k:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x6
  1012  000007                     	ds	1
  1013  000008                     ??_pwmSet1:
  1014  000008                     lcdCommand@cmd:
  1015                           	callstack 0
  1016  000008                     lcdData@old_D:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x7
  1020  000008                     	ds	1
  1021  000009                     ??___fladd:
  1022  000009                     ??___flge:
  1023  000009                     kpDebounce@j:
  1024                           	callstack 0
  1025  000009                     lcdPosition@coluna:
  1026                           	callstack 0
  1027  000009                     ___aldiv@counter:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x8
  1031  000009                     	ds	1
  1032  00000A                     kpDebounce@i:
  1033                           	callstack 0
  1034  00000A                     lcdPosition@comando:
  1035                           	callstack 0
  1036  00000A                     pwmSet1@porcento:
  1037                           	callstack 0
  1038  00000A                     ___aldiv@sign:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x9
  1042  00000A                     	ds	1
  1043  00000B                     lcdPosition@linha:
  1044                           	callstack 0
  1045  00000B                     pwmSet1@val:
  1046                           	callstack 0
  1047  00000B                     ___aldiv@quotient:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0xA
  1051  00000B                     	ds	1
  1052  00000C                     ??_escolheComida:
  1053                           
  1054                           ; 1 bytes @ 0xB
  1055  00000C                     	ds	1
  1056  00000D                     ___fladd@signs:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0xC
  1060  00000D                     	ds	1
  1061  00000E                     ___fladd@aexp:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0xD
  1065  00000E                     	ds	1
  1066  00000F                     ?___almod:
  1067                           	callstack 0
  1068  00000F                     ___fladd@bexp:
  1069                           	callstack 0
  1070  00000F                     pwmFrequency@freq:
  1071                           	callstack 0
  1072  00000F                     ___almod@dividend:
  1073                           	callstack 0
  1074  00000F                     escolheComida@msg3_312:
  1075                           	callstack 0
  1076                           
  1077                           ; 24 bytes @ 0xE
  1078  00000F                     	ds	1
  1079  000010                     ___fladd@grs:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0xF
  1083  000010                     	ds	1
  1084  000011                     abreTampa@msg3:
  1085                           	callstack 0
  1086                           
  1087                           ; 14 bytes @ 0x10
  1088  000011                     	ds	2
  1089  000013                     ___almod@divisor:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x12
  1093  000013                     	ds	4
  1094  000017                     ___almod@counter:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x16
  1098  000017                     	ds	1
  1099  000018                     ___almod@sign:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x17
  1103  000018                     	ds	1
  1104  000019                     ssdDigit@pos:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x18
  1108  000019                     	ds	1
  1109  00001A                     ssdDigit@val:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x19
  1113  00001A                     	ds	1
  1114  00001B                     ??_escolheTempo:
  1115                           
  1116                           ; 1 bytes @ 0x1A
  1117  00001B                     	ds	4
  1118  00001F                     abreTampa@msg:
  1119                           	callstack 0
  1120                           
  1121                           ; 13 bytes @ 0x1E
  1122  00001F                     	ds	8
  1123  000027                     escolheComida@msg3_316:
  1124                           	callstack 0
  1125                           
  1126                           ; 23 bytes @ 0x26
  1127  000027                     	ds	5
  1128  00002C                     abreTampa@msg2:
  1129                           	callstack 0
  1130                           
  1131                           ; 13 bytes @ 0x2B
  1132  00002C                     	ds	13
  1133  000039                     abreTampa@i:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x38
  1137  000039                     	ds	5
  1138  00003E                     escolheComida@msg3:
  1139                           	callstack 0
  1140                           
  1141                           ; 19 bytes @ 0x3D
  1142  00003E                     	ds	19
  1143  000051                     escolheComida@msg3_314:
  1144                           	callstack 0
  1145                           
  1146                           ; 19 bytes @ 0x50
  1147  000051                     	ds	19
  1148  000064                     escolheComida@k:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x63
  1152  000064                     	ds	1
  1153  000065                     escolheComida@aux:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x64
  1157  000065                     	ds	2
  1158  000067                     escolheComida@flag:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x66
  1162  000067                     	ds	2
  1163  000069                     escolheComida@tecla:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x68
  1167  000069                     	ds	2
  1168  00006B                     escolheComida@i:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x6A
  1172  00006B                     	ds	1
  1173  00006C                     ??_main:
  1174                           
  1175                           ; 1 bytes @ 0x6B
  1176  00006C                     	ds	3
  1177                           
  1178 ;;
  1179 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1180 ;;
  1181 ;; *************** function _main *****************
  1182 ;; Defined at:
  1183 ;;		line 23 in file "newmain2.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  msg            31    0[BANK2 ] unsigned char [31]
  1188 ;;  final          26   99[BANK2 ] unsigned char [26]
  1189 ;;  s              17   82[BANK2 ] unsigned char [17]
  1190 ;;  f              17   65[BANK2 ] unsigned char [17]
  1191 ;;  b              17   48[BANK2 ] unsigned char [17]
  1192 ;;  fr             17   31[BANK2 ] unsigned char [17]
  1193 ;;  final2         12  138[BANK2 ] unsigned char [12]
  1194 ;;  aux3            2  154[BANK2 ] int 
  1195 ;;  aux2            2  150[BANK2 ] int 
  1196 ;;  agradece       13  125[BANK2 ] unsigned char [13]
  1197 ;;  k               4  158[BANK2 ] float 
  1198 ;;  j               4    0        float 
  1199 ;;  tecla           2  156[BANK2 ] unsigned int 
  1200 ;;  op              2  152[BANK2 ] int 
  1201 ;;  i               1  162[BANK2 ] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1211 ;;      Params:         0       0       0       0       0       0       0
  1212 ;;      Locals:         0       0       0     163       0       0       0
  1213 ;;      Temps:          3       0       0       0       0       0       0
  1214 ;;      Totals:         3       0       0     163       0       0       0
  1215 ;;Total ram usage:      166 bytes
  1216 ;; Hardware stack levels required when called: 5
  1217 ;; This function calls:
  1218 ;;		___fladd
  1219 ;;		___flge
  1220 ;;		_abreTampa
  1221 ;;		_atraso_ms
  1222 ;;		_escolheComida
  1223 ;;		_escolheTempo
  1224 ;;		_kpDebounce
  1225 ;;		_kpInit
  1226 ;;		_kpRead
  1227 ;;		_lcdCommand
  1228 ;;		_lcdData
  1229 ;;		_lcdInit
  1230 ;;		_lcdPosition
  1231 ;;		_strcmp
  1232 ;; This function is called by:
  1233 ;;		Startup code after reset
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text0
  1238  000F84                     __ptext0:
  1239                           	callstack 0
  1240  000F84                     _main:
  1241                           	callstack 26
  1242  000F84                     
  1243                           ;newmain2.c: 25:     char i;;newmain2.c: 26:     float j, k;;newmain2.c: 28:     int op 
      +                          = 1;
  1244  000F84  0E00               	movlw	0
  1245  000F86  0102               	movlb	2	; () banked
  1246  000F88  6F99               	movwf	(main@op+1)& (0+255),b
  1247  000F8A  0E01               	movlw	1
  1248  000F8C  6F98               	movwf	main@op& (0+255),b
  1249                           
  1250                           ;newmain2.c: 29:     while (op == 1) {
  1251  000F8E  EF5D  F00B         	goto	l3908
  1252  000F92                     l3698:
  1253                           
  1254                           ; BSR set to: 2
  1255                           ;newmain2.c: 32:         atraso_ms(2000);
  1256  000F92  0E07               	movlw	7
  1257  000F94  6E02               	movwf	(atraso_ms@t+1)^0,c
  1258  000F96  0ED0               	movlw	208
  1259  000F98  6E01               	movwf	atraso_ms@t^0,c
  1260  000F9A  ECC8  F017         	call	_atraso_ms	;wreg free
  1261  000F9E                     
  1262                           ;newmain2.c: 33:         char msg[31] = "Qual alimento\nquer cozinhar?";
  1263  000F9E  EE23  F040         	lfsr	2,main@F2929
  1264  000FA2  EE12  F000         	lfsr	1,main@msg
  1265  000FA6  0E1E               	movlw	30
  1266  000FA8                     u4271:
  1267  000FA8  CFDB FFE3          	movff	plusw2,plusw1
  1268  000FAC  06E8               	decf	wreg,f,c
  1269  000FAE  E2FC               	bc	u4271
  1270  000FB0                     
  1271                           ;newmain2.c: 34:         lcdInit();
  1272  000FB0  ECE7  F016         	call	_lcdInit	;wreg free
  1273  000FB4                     
  1274                           ;newmain2.c: 35:         lcdCommand(0x01);
  1275  000FB4  0E01               	movlw	1
  1276  000FB6  EC69  F016         	call	_lcdCommand
  1277  000FBA                     
  1278                           ;newmain2.c: 36:         lcdPosition(0, 0);
  1279  000FBA  0E00               	movlw	0
  1280  000FBC  6E09               	movwf	lcdPosition@coluna^0,c
  1281  000FBE  0E00               	movlw	0
  1282  000FC0  EC93  F017         	call	_lcdPosition
  1283  000FC4                     
  1284                           ;newmain2.c: 37:         for (i = 0; i < 31; i++) {
  1285  000FC4  0E00               	movlw	0
  1286  000FC6  0102               	movlb	2	; () banked
  1287  000FC8  6FA2               	movwf	main@i& (0+255),b
  1288  000FCA                     l3714:
  1289                           
  1290                           ; BSR set to: 2
  1291                           ;newmain2.c: 38:             if (strcmp(msg[i], '\n') == 0) {
  1292  000FCA  0E00               	movlw	low main@msg
  1293  000FCC  25A2               	addwf	main@i& (0+255),w,b
  1294  000FCE  6ED9               	movwf	fsr2l,c
  1295  000FD0  6ADA               	clrf	fsr2h,c
  1296  000FD2  0E02               	movlw	high main@msg
  1297  000FD4  22DA               	addwfc	fsr2h,f,c
  1298  000FD6  50DF               	movf	indf2,w,c
  1299  000FD8  6E6C               	movwf	??_main^0,c
  1300  000FDA  6A6D               	clrf	(??_main+1)^0,c
  1301  000FDC  6A6E               	clrf	(??_main+2)^0,c
  1302  000FDE  C06C  F001         	movff	??_main,strcmp@l
  1303  000FE2  C06D  F002         	movff	??_main+1,strcmp@l+1
  1304  000FE6  C06E  F003         	movff	??_main+2,strcmp@l+2
  1305  000FEA  0E0A               	movlw	10
  1306  000FEC  6E04               	movwf	strcmp@r^0,c
  1307  000FEE  0E00               	movlw	0
  1308  000FF0  6E05               	movwf	(strcmp@r+1)^0,c
  1309  000FF2  0E00               	movlw	0
  1310  000FF4  6E06               	movwf	(strcmp@r+2)^0,c
  1311  000FF6  ECD0  F015         	call	_strcmp	;wreg free
  1312  000FFA  5001               	movf	?_strcmp^0,w,c
  1313  000FFC  1002               	iorwf	(?_strcmp+1)^0,w,c
  1314  000FFE  A4D8               	btfss	status,2,c
  1315  001000  EF04  F008         	goto	u4281
  1316  001004  EF06  F008         	goto	u4280
  1317  001008                     u4281:
  1318  001008  EF09  F008         	goto	l3718
  1319  00100C                     u4280:
  1320  00100C                     
  1321                           ;newmain2.c: 39:                 lcdCommand(0xC0);
  1322  00100C  0EC0               	movlw	192
  1323  00100E  EC69  F016         	call	_lcdCommand
  1324  001012                     l3718:
  1325                           
  1326                           ;newmain2.c: 41:             lcdData(msg[i]);
  1327  001012  0E00               	movlw	low main@msg
  1328  001014  0102               	movlb	2	; () banked
  1329  001016  25A2               	addwf	main@i& (0+255),w,b
  1330  001018  6ED9               	movwf	fsr2l,c
  1331  00101A  6ADA               	clrf	fsr2h,c
  1332  00101C  0E02               	movlw	high main@msg
  1333  00101E  22DA               	addwfc	fsr2h,f,c
  1334  001020  50DF               	movf	indf2,w,c
  1335  001022  ECDC  F018         	call	_lcdData
  1336  001026                     
  1337                           ;newmain2.c: 42:             if (i == 31) {
  1338  001026  0E1F               	movlw	31
  1339  001028  0102               	movlb	2	; () banked
  1340  00102A  19A2               	xorwf	main@i& (0+255),w,b
  1341  00102C  A4D8               	btfss	status,2,c
  1342  00102E  EF1B  F008         	goto	u4291
  1343  001032  EF1D  F008         	goto	u4290
  1344  001036                     u4291:
  1345  001036  EF73  F008         	goto	l3730
  1346  00103A                     u4290:
  1347  00103A                     
  1348                           ; BSR set to: 2
  1349                           ;newmain2.c: 43:                 for (k = 0; k < 150; k++);
  1350  00103A  0E00               	movlw	0
  1351  00103C  6F9E               	movwf	main@k& (0+255),b
  1352  00103E  0E00               	movlw	0
  1353  001040  6F9F               	movwf	(main@k+1)& (0+255),b
  1354  001042  0E00               	movlw	0
  1355  001044  6FA0               	movwf	(main@k+2)& (0+255),b
  1356  001046  0E00               	movlw	0
  1357  001048  6FA1               	movwf	(main@k+3)& (0+255),b
  1358  00104A                     
  1359                           ; BSR set to: 2
  1360  00104A  C29E  F001         	movff	main@k,___flge@ff1
  1361  00104E  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1362  001052  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1363  001056  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1364  00105A  0E00               	movlw	0
  1365  00105C  6E05               	movwf	___flge@ff2^0,c
  1366  00105E  0E00               	movlw	0
  1367  001060  6E06               	movwf	(___flge@ff2+1)^0,c
  1368  001062  0E16               	movlw	22
  1369  001064  6E07               	movwf	(___flge@ff2+2)^0,c
  1370  001066  0E43               	movlw	67
  1371  001068  6E08               	movwf	(___flge@ff2+3)^0,c
  1372  00106A  ECD8  F014         	call	___flge	;wreg free
  1373  00106E  A0D8               	btfss	status,0,c
  1374  001070  EF3C  F008         	goto	u4301
  1375  001074  EF3E  F008         	goto	u4300
  1376  001078                     u4301:
  1377  001078  EF40  F008         	goto	l3728
  1378  00107C                     u4300:
  1379  00107C  EF73  F008         	goto	l3730
  1380  001080                     l3728:
  1381  001080  C29E  F001         	movff	main@k,___fladd@b
  1382  001084  C29F  F002         	movff	main@k+1,___fladd@b+1
  1383  001088  C2A0  F003         	movff	main@k+2,___fladd@b+2
  1384  00108C  C2A1  F004         	movff	main@k+3,___fladd@b+3
  1385  001090  0E00               	movlw	0
  1386  001092  6E05               	movwf	___fladd@a^0,c
  1387  001094  0E00               	movlw	0
  1388  001096  6E06               	movwf	(___fladd@a+1)^0,c
  1389  001098  0E80               	movlw	128
  1390  00109A  6E07               	movwf	(___fladd@a+2)^0,c
  1391  00109C  0E3F               	movlw	63
  1392  00109E  6E08               	movwf	(___fladd@a+3)^0,c
  1393  0010A0  ECB6  F00B         	call	___fladd	;wreg free
  1394  0010A4  C001  F29E         	movff	?___fladd,main@k
  1395  0010A8  C002  F29F         	movff	?___fladd+1,main@k+1
  1396  0010AC  C003  F2A0         	movff	?___fladd+2,main@k+2
  1397  0010B0  C004  F2A1         	movff	?___fladd+3,main@k+3
  1398  0010B4  C29E  F001         	movff	main@k,___flge@ff1
  1399  0010B8  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1400  0010BC  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1401  0010C0  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1402  0010C4  0E00               	movlw	0
  1403  0010C6  6E05               	movwf	___flge@ff2^0,c
  1404  0010C8  0E00               	movlw	0
  1405  0010CA  6E06               	movwf	(___flge@ff2+1)^0,c
  1406  0010CC  0E16               	movlw	22
  1407  0010CE  6E07               	movwf	(___flge@ff2+2)^0,c
  1408  0010D0  0E43               	movlw	67
  1409  0010D2  6E08               	movwf	(___flge@ff2+3)^0,c
  1410  0010D4  ECD8  F014         	call	___flge	;wreg free
  1411  0010D8  A0D8               	btfss	status,0,c
  1412  0010DA  EF71  F008         	goto	u4311
  1413  0010DE  EF73  F008         	goto	u4310
  1414  0010E2                     u4311:
  1415  0010E2  EF40  F008         	goto	l3728
  1416  0010E6                     u4310:
  1417  0010E6                     l3730:
  1418                           
  1419                           ;newmain2.c: 45:         }
  1420  0010E6  0102               	movlb	2	; () banked
  1421  0010E8  2BA2               	incf	main@i& (0+255),f,b
  1422  0010EA                     
  1423                           ; BSR set to: 2
  1424  0010EA  0E1E               	movlw	30
  1425  0010EC  65A2               	cpfsgt	main@i& (0+255),b
  1426  0010EE  EF7B  F008         	goto	u4321
  1427  0010F2  EF7D  F008         	goto	u4320
  1428  0010F6                     u4321:
  1429  0010F6  EFE5  F007         	goto	l3714
  1430  0010FA                     u4320:
  1431  0010FA                     
  1432                           ; BSR set to: 2
  1433                           ;newmain2.c: 48:         atraso_ms(2000);
  1434  0010FA  0E07               	movlw	7
  1435  0010FC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1436  0010FE  0ED0               	movlw	208
  1437  001100  6E01               	movwf	atraso_ms@t^0,c
  1438  001102  ECC8  F017         	call	_atraso_ms	;wreg free
  1439  001106                     
  1440                           ;newmain2.c: 49:         char fr[17] = "1-Frango        ";
  1441  001106  EE22  F0D6         	lfsr	2,main@F2931
  1442  00110A  EE12  F01F         	lfsr	1,main@fr
  1443  00110E  0E10               	movlw	16
  1444  001110                     u4331:
  1445  001110  CFDB FFE3          	movff	plusw2,plusw1
  1446  001114  06E8               	decf	wreg,f,c
  1447  001116  E2FC               	bc	u4331
  1448  001118                     
  1449                           ;newmain2.c: 50:         char b[17] = "2-Carne Bovina  ";
  1450  001118  EE22  F0C5         	lfsr	2,main@F2933
  1451  00111C  EE12  F030         	lfsr	1,main@b
  1452  001120  0E10               	movlw	16
  1453  001122                     u4341:
  1454  001122  CFDB FFE3          	movff	plusw2,plusw1
  1455  001126  06E8               	decf	wreg,f,c
  1456  001128  E2FC               	bc	u4341
  1457  00112A                     
  1458                           ;newmain2.c: 51:         char f[17] = "4-Feijao        ";
  1459  00112A  EE22  F0B4         	lfsr	2,main@F2935
  1460  00112E  EE12  F041         	lfsr	1,main@f
  1461  001132  0E10               	movlw	16
  1462  001134                     u4351:
  1463  001134  CFDB FFE3          	movff	plusw2,plusw1
  1464  001138  06E8               	decf	wreg,f,c
  1465  00113A  E2FC               	bc	u4351
  1466  00113C                     
  1467                           ;newmain2.c: 52:         char s[17] = "5-Carne Suina   ";
  1468  00113C  EE22  F0A3         	lfsr	2,main@F2937
  1469  001140  EE12  F052         	lfsr	1,main@s
  1470  001144  0E10               	movlw	16
  1471  001146                     u4361:
  1472  001146  CFDB FFE3          	movff	plusw2,plusw1
  1473  00114A  06E8               	decf	wreg,f,c
  1474  00114C  E2FC               	bc	u4361
  1475  00114E                     
  1476                           ;newmain2.c: 54:         for (k = 0; k < 3000; k++);
  1477  00114E  0E00               	movlw	0
  1478  001150  0102               	movlb	2	; () banked
  1479  001152  6F9E               	movwf	main@k& (0+255),b
  1480  001154  0E00               	movlw	0
  1481  001156  6F9F               	movwf	(main@k+1)& (0+255),b
  1482  001158  0E00               	movlw	0
  1483  00115A  6FA0               	movwf	(main@k+2)& (0+255),b
  1484  00115C  0E00               	movlw	0
  1485  00115E  6FA1               	movwf	(main@k+3)& (0+255),b
  1486  001160                     
  1487                           ; BSR set to: 2
  1488  001160  C29E  F001         	movff	main@k,___flge@ff1
  1489  001164  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1490  001168  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1491  00116C  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1492  001170  0E00               	movlw	0
  1493  001172  6E05               	movwf	___flge@ff2^0,c
  1494  001174  0E80               	movlw	128
  1495  001176  6E06               	movwf	(___flge@ff2+1)^0,c
  1496  001178  0E3B               	movlw	59
  1497  00117A  6E07               	movwf	(___flge@ff2+2)^0,c
  1498  00117C  0E45               	movlw	69
  1499  00117E  6E08               	movwf	(___flge@ff2+3)^0,c
  1500  001180  ECD8  F014         	call	___flge	;wreg free
  1501  001184  A0D8               	btfss	status,0,c
  1502  001186  EFC7  F008         	goto	u4371
  1503  00118A  EFC9  F008         	goto	u4370
  1504  00118E                     u4371:
  1505  00118E  EFCB  F008         	goto	l3750
  1506  001192                     u4370:
  1507  001192  EFFE  F008         	goto	l3752
  1508  001196                     l3750:
  1509  001196  C29E  F001         	movff	main@k,___fladd@b
  1510  00119A  C29F  F002         	movff	main@k+1,___fladd@b+1
  1511  00119E  C2A0  F003         	movff	main@k+2,___fladd@b+2
  1512  0011A2  C2A1  F004         	movff	main@k+3,___fladd@b+3
  1513  0011A6  0E00               	movlw	0
  1514  0011A8  6E05               	movwf	___fladd@a^0,c
  1515  0011AA  0E00               	movlw	0
  1516  0011AC  6E06               	movwf	(___fladd@a+1)^0,c
  1517  0011AE  0E80               	movlw	128
  1518  0011B0  6E07               	movwf	(___fladd@a+2)^0,c
  1519  0011B2  0E3F               	movlw	63
  1520  0011B4  6E08               	movwf	(___fladd@a+3)^0,c
  1521  0011B6  ECB6  F00B         	call	___fladd	;wreg free
  1522  0011BA  C001  F29E         	movff	?___fladd,main@k
  1523  0011BE  C002  F29F         	movff	?___fladd+1,main@k+1
  1524  0011C2  C003  F2A0         	movff	?___fladd+2,main@k+2
  1525  0011C6  C004  F2A1         	movff	?___fladd+3,main@k+3
  1526  0011CA  C29E  F001         	movff	main@k,___flge@ff1
  1527  0011CE  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1528  0011D2  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1529  0011D6  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1530  0011DA  0E00               	movlw	0
  1531  0011DC  6E05               	movwf	___flge@ff2^0,c
  1532  0011DE  0E80               	movlw	128
  1533  0011E0  6E06               	movwf	(___flge@ff2+1)^0,c
  1534  0011E2  0E3B               	movlw	59
  1535  0011E4  6E07               	movwf	(___flge@ff2+2)^0,c
  1536  0011E6  0E45               	movlw	69
  1537  0011E8  6E08               	movwf	(___flge@ff2+3)^0,c
  1538  0011EA  ECD8  F014         	call	___flge	;wreg free
  1539  0011EE  A0D8               	btfss	status,0,c
  1540  0011F0  EFFC  F008         	goto	u4381
  1541  0011F4  EFFE  F008         	goto	u4380
  1542  0011F8                     u4381:
  1543  0011F8  EFCB  F008         	goto	l3750
  1544  0011FC                     u4380:
  1545  0011FC                     l3752:
  1546                           
  1547                           ;newmain2.c: 55:         lcdCommand(0xF0);
  1548  0011FC  0EF0               	movlw	240
  1549  0011FE  EC69  F016         	call	_lcdCommand
  1550  001202                     
  1551                           ;newmain2.c: 56:         for (i = 0; i < 17; i++) {
  1552  001202  0E00               	movlw	0
  1553  001204  0102               	movlb	2	; () banked
  1554  001206  6FA2               	movwf	main@i& (0+255),b
  1555  001208                     l3760:
  1556                           
  1557                           ; BSR set to: 2
  1558                           ;newmain2.c: 57:             lcdData(fr[i]);
  1559  001208  0E1F               	movlw	low main@fr
  1560  00120A  25A2               	addwf	main@i& (0+255),w,b
  1561  00120C  6ED9               	movwf	fsr2l,c
  1562  00120E  6ADA               	clrf	fsr2h,c
  1563  001210  0E02               	movlw	high main@fr
  1564  001212  22DA               	addwfc	fsr2h,f,c
  1565  001214  50DF               	movf	indf2,w,c
  1566  001216  ECDC  F018         	call	_lcdData
  1567  00121A                     
  1568                           ;newmain2.c: 58:         }
  1569  00121A  0102               	movlb	2	; () banked
  1570  00121C  2BA2               	incf	main@i& (0+255),f,b
  1571  00121E                     
  1572                           ; BSR set to: 2
  1573  00121E  0E10               	movlw	16
  1574  001220  65A2               	cpfsgt	main@i& (0+255),b
  1575  001222  EF15  F009         	goto	u4391
  1576  001226  EF17  F009         	goto	u4390
  1577  00122A                     u4391:
  1578  00122A  EF04  F009         	goto	l3760
  1579  00122E                     u4390:
  1580  00122E                     
  1581                           ; BSR set to: 2
  1582                           ;newmain2.c: 60:         for (k = 0; k < 250; k++);
  1583  00122E  0E00               	movlw	0
  1584  001230  6F9E               	movwf	main@k& (0+255),b
  1585  001232  0E00               	movlw	0
  1586  001234  6F9F               	movwf	(main@k+1)& (0+255),b
  1587  001236  0E00               	movlw	0
  1588  001238  6FA0               	movwf	(main@k+2)& (0+255),b
  1589  00123A  0E00               	movlw	0
  1590  00123C  6FA1               	movwf	(main@k+3)& (0+255),b
  1591  00123E                     
  1592                           ; BSR set to: 2
  1593  00123E  C29E  F001         	movff	main@k,___flge@ff1
  1594  001242  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1595  001246  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1596  00124A  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1597  00124E  0E00               	movlw	0
  1598  001250  6E05               	movwf	___flge@ff2^0,c
  1599  001252  0E00               	movlw	0
  1600  001254  6E06               	movwf	(___flge@ff2+1)^0,c
  1601  001256  0E7A               	movlw	122
  1602  001258  6E07               	movwf	(___flge@ff2+2)^0,c
  1603  00125A  0E43               	movlw	67
  1604  00125C  6E08               	movwf	(___flge@ff2+3)^0,c
  1605  00125E  ECD8  F014         	call	___flge	;wreg free
  1606  001262  A0D8               	btfss	status,0,c
  1607  001264  EF36  F009         	goto	u4401
  1608  001268  EF38  F009         	goto	u4400
  1609  00126C                     u4401:
  1610  00126C  EF3A  F009         	goto	l3772
  1611  001270                     u4400:
  1612  001270  EF6D  F009         	goto	l3774
  1613  001274                     l3772:
  1614  001274  C29E  F001         	movff	main@k,___fladd@b
  1615  001278  C29F  F002         	movff	main@k+1,___fladd@b+1
  1616  00127C  C2A0  F003         	movff	main@k+2,___fladd@b+2
  1617  001280  C2A1  F004         	movff	main@k+3,___fladd@b+3
  1618  001284  0E00               	movlw	0
  1619  001286  6E05               	movwf	___fladd@a^0,c
  1620  001288  0E00               	movlw	0
  1621  00128A  6E06               	movwf	(___fladd@a+1)^0,c
  1622  00128C  0E80               	movlw	128
  1623  00128E  6E07               	movwf	(___fladd@a+2)^0,c
  1624  001290  0E3F               	movlw	63
  1625  001292  6E08               	movwf	(___fladd@a+3)^0,c
  1626  001294  ECB6  F00B         	call	___fladd	;wreg free
  1627  001298  C001  F29E         	movff	?___fladd,main@k
  1628  00129C  C002  F29F         	movff	?___fladd+1,main@k+1
  1629  0012A0  C003  F2A0         	movff	?___fladd+2,main@k+2
  1630  0012A4  C004  F2A1         	movff	?___fladd+3,main@k+3
  1631  0012A8  C29E  F001         	movff	main@k,___flge@ff1
  1632  0012AC  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1633  0012B0  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1634  0012B4  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1635  0012B8  0E00               	movlw	0
  1636  0012BA  6E05               	movwf	___flge@ff2^0,c
  1637  0012BC  0E00               	movlw	0
  1638  0012BE  6E06               	movwf	(___flge@ff2+1)^0,c
  1639  0012C0  0E7A               	movlw	122
  1640  0012C2  6E07               	movwf	(___flge@ff2+2)^0,c
  1641  0012C4  0E43               	movlw	67
  1642  0012C6  6E08               	movwf	(___flge@ff2+3)^0,c
  1643  0012C8  ECD8  F014         	call	___flge	;wreg free
  1644  0012CC  A0D8               	btfss	status,0,c
  1645  0012CE  EF6B  F009         	goto	u4411
  1646  0012D2  EF6D  F009         	goto	u4410
  1647  0012D6                     u4411:
  1648  0012D6  EF3A  F009         	goto	l3772
  1649  0012DA                     u4410:
  1650  0012DA                     l3774:
  1651                           
  1652                           ;newmain2.c: 61:         lcdCommand(0xC0);
  1653  0012DA  0EC0               	movlw	192
  1654  0012DC  EC69  F016         	call	_lcdCommand
  1655  0012E0                     
  1656                           ;newmain2.c: 62:         for (i = 0; i < 17; i++) {
  1657  0012E0  0E00               	movlw	0
  1658  0012E2  0102               	movlb	2	; () banked
  1659  0012E4  6FA2               	movwf	main@i& (0+255),b
  1660  0012E6                     l3782:
  1661                           
  1662                           ; BSR set to: 2
  1663                           ;newmain2.c: 63:             lcdData(b[i]);
  1664  0012E6  0E30               	movlw	low main@b
  1665  0012E8  25A2               	addwf	main@i& (0+255),w,b
  1666  0012EA  6ED9               	movwf	fsr2l,c
  1667  0012EC  6ADA               	clrf	fsr2h,c
  1668  0012EE  0E02               	movlw	high main@b
  1669  0012F0  22DA               	addwfc	fsr2h,f,c
  1670  0012F2  50DF               	movf	indf2,w,c
  1671  0012F4  ECDC  F018         	call	_lcdData
  1672  0012F8                     
  1673                           ;newmain2.c: 64:         }
  1674  0012F8  0102               	movlb	2	; () banked
  1675  0012FA  2BA2               	incf	main@i& (0+255),f,b
  1676  0012FC                     
  1677                           ; BSR set to: 2
  1678  0012FC  0E10               	movlw	16
  1679  0012FE  65A2               	cpfsgt	main@i& (0+255),b
  1680  001300  EF84  F009         	goto	u4421
  1681  001304  EF86  F009         	goto	u4420
  1682  001308                     u4421:
  1683  001308  EF73  F009         	goto	l3782
  1684  00130C                     u4420:
  1685  00130C                     
  1686                           ; BSR set to: 2
  1687                           ;newmain2.c: 66:         for (k = 0; k < 250; k++);
  1688  00130C  0E00               	movlw	0
  1689  00130E  6F9E               	movwf	main@k& (0+255),b
  1690  001310  0E00               	movlw	0
  1691  001312  6F9F               	movwf	(main@k+1)& (0+255),b
  1692  001314  0E00               	movlw	0
  1693  001316  6FA0               	movwf	(main@k+2)& (0+255),b
  1694  001318  0E00               	movlw	0
  1695  00131A  6FA1               	movwf	(main@k+3)& (0+255),b
  1696  00131C                     
  1697                           ; BSR set to: 2
  1698  00131C  C29E  F001         	movff	main@k,___flge@ff1
  1699  001320  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1700  001324  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1701  001328  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1702  00132C  0E00               	movlw	0
  1703  00132E  6E05               	movwf	___flge@ff2^0,c
  1704  001330  0E00               	movlw	0
  1705  001332  6E06               	movwf	(___flge@ff2+1)^0,c
  1706  001334  0E7A               	movlw	122
  1707  001336  6E07               	movwf	(___flge@ff2+2)^0,c
  1708  001338  0E43               	movlw	67
  1709  00133A  6E08               	movwf	(___flge@ff2+3)^0,c
  1710  00133C  ECD8  F014         	call	___flge	;wreg free
  1711  001340  A0D8               	btfss	status,0,c
  1712  001342  EFA5  F009         	goto	u4431
  1713  001346  EFA7  F009         	goto	u4430
  1714  00134A                     u4431:
  1715  00134A  EFA9  F009         	goto	l3794
  1716  00134E                     u4430:
  1717  00134E  EFDC  F009         	goto	l3796
  1718  001352                     l3794:
  1719  001352  C29E  F001         	movff	main@k,___fladd@b
  1720  001356  C29F  F002         	movff	main@k+1,___fladd@b+1
  1721  00135A  C2A0  F003         	movff	main@k+2,___fladd@b+2
  1722  00135E  C2A1  F004         	movff	main@k+3,___fladd@b+3
  1723  001362  0E00               	movlw	0
  1724  001364  6E05               	movwf	___fladd@a^0,c
  1725  001366  0E00               	movlw	0
  1726  001368  6E06               	movwf	(___fladd@a+1)^0,c
  1727  00136A  0E80               	movlw	128
  1728  00136C  6E07               	movwf	(___fladd@a+2)^0,c
  1729  00136E  0E3F               	movlw	63
  1730  001370  6E08               	movwf	(___fladd@a+3)^0,c
  1731  001372  ECB6  F00B         	call	___fladd	;wreg free
  1732  001376  C001  F29E         	movff	?___fladd,main@k
  1733  00137A  C002  F29F         	movff	?___fladd+1,main@k+1
  1734  00137E  C003  F2A0         	movff	?___fladd+2,main@k+2
  1735  001382  C004  F2A1         	movff	?___fladd+3,main@k+3
  1736  001386  C29E  F001         	movff	main@k,___flge@ff1
  1737  00138A  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1738  00138E  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1739  001392  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1740  001396  0E00               	movlw	0
  1741  001398  6E05               	movwf	___flge@ff2^0,c
  1742  00139A  0E00               	movlw	0
  1743  00139C  6E06               	movwf	(___flge@ff2+1)^0,c
  1744  00139E  0E7A               	movlw	122
  1745  0013A0  6E07               	movwf	(___flge@ff2+2)^0,c
  1746  0013A2  0E43               	movlw	67
  1747  0013A4  6E08               	movwf	(___flge@ff2+3)^0,c
  1748  0013A6  ECD8  F014         	call	___flge	;wreg free
  1749  0013AA  A0D8               	btfss	status,0,c
  1750  0013AC  EFDA  F009         	goto	u4441
  1751  0013B0  EFDC  F009         	goto	u4440
  1752  0013B4                     u4441:
  1753  0013B4  EFA9  F009         	goto	l3794
  1754  0013B8                     u4440:
  1755  0013B8                     l3796:
  1756                           
  1757                           ;newmain2.c: 67:         lcdCommand(0x90);
  1758  0013B8  0E90               	movlw	144
  1759  0013BA  EC69  F016         	call	_lcdCommand
  1760  0013BE                     
  1761                           ;newmain2.c: 68:         for (i = 0; i < 17; i++) {
  1762  0013BE  0E00               	movlw	0
  1763  0013C0  0102               	movlb	2	; () banked
  1764  0013C2  6FA2               	movwf	main@i& (0+255),b
  1765  0013C4                     l3804:
  1766                           
  1767                           ; BSR set to: 2
  1768                           ;newmain2.c: 69:             lcdData(f[i]);
  1769  0013C4  0E41               	movlw	low main@f
  1770  0013C6  25A2               	addwf	main@i& (0+255),w,b
  1771  0013C8  6ED9               	movwf	fsr2l,c
  1772  0013CA  6ADA               	clrf	fsr2h,c
  1773  0013CC  0E02               	movlw	high main@f
  1774  0013CE  22DA               	addwfc	fsr2h,f,c
  1775  0013D0  50DF               	movf	indf2,w,c
  1776  0013D2  ECDC  F018         	call	_lcdData
  1777  0013D6                     
  1778                           ;newmain2.c: 70:         }
  1779  0013D6  0102               	movlb	2	; () banked
  1780  0013D8  2BA2               	incf	main@i& (0+255),f,b
  1781  0013DA                     
  1782                           ; BSR set to: 2
  1783  0013DA  0E10               	movlw	16
  1784  0013DC  65A2               	cpfsgt	main@i& (0+255),b
  1785  0013DE  EFF3  F009         	goto	u4451
  1786  0013E2  EFF5  F009         	goto	u4450
  1787  0013E6                     u4451:
  1788  0013E6  EFE2  F009         	goto	l3804
  1789  0013EA                     u4450:
  1790  0013EA                     
  1791                           ; BSR set to: 2
  1792                           ;newmain2.c: 72:         for (k = 0; k < 250; k++);
  1793  0013EA  0E00               	movlw	0
  1794  0013EC  6F9E               	movwf	main@k& (0+255),b
  1795  0013EE  0E00               	movlw	0
  1796  0013F0  6F9F               	movwf	(main@k+1)& (0+255),b
  1797  0013F2  0E00               	movlw	0
  1798  0013F4  6FA0               	movwf	(main@k+2)& (0+255),b
  1799  0013F6  0E00               	movlw	0
  1800  0013F8  6FA1               	movwf	(main@k+3)& (0+255),b
  1801  0013FA                     
  1802                           ; BSR set to: 2
  1803  0013FA  C29E  F001         	movff	main@k,___flge@ff1
  1804  0013FE  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1805  001402  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1806  001406  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1807  00140A  0E00               	movlw	0
  1808  00140C  6E05               	movwf	___flge@ff2^0,c
  1809  00140E  0E00               	movlw	0
  1810  001410  6E06               	movwf	(___flge@ff2+1)^0,c
  1811  001412  0E7A               	movlw	122
  1812  001414  6E07               	movwf	(___flge@ff2+2)^0,c
  1813  001416  0E43               	movlw	67
  1814  001418  6E08               	movwf	(___flge@ff2+3)^0,c
  1815  00141A  ECD8  F014         	call	___flge	;wreg free
  1816  00141E  A0D8               	btfss	status,0,c
  1817  001420  EF14  F00A         	goto	u4461
  1818  001424  EF16  F00A         	goto	u4460
  1819  001428                     u4461:
  1820  001428  EF18  F00A         	goto	l3816
  1821  00142C                     u4460:
  1822  00142C  EF4B  F00A         	goto	l3818
  1823  001430                     l3816:
  1824  001430  C29E  F001         	movff	main@k,___fladd@b
  1825  001434  C29F  F002         	movff	main@k+1,___fladd@b+1
  1826  001438  C2A0  F003         	movff	main@k+2,___fladd@b+2
  1827  00143C  C2A1  F004         	movff	main@k+3,___fladd@b+3
  1828  001440  0E00               	movlw	0
  1829  001442  6E05               	movwf	___fladd@a^0,c
  1830  001444  0E00               	movlw	0
  1831  001446  6E06               	movwf	(___fladd@a+1)^0,c
  1832  001448  0E80               	movlw	128
  1833  00144A  6E07               	movwf	(___fladd@a+2)^0,c
  1834  00144C  0E3F               	movlw	63
  1835  00144E  6E08               	movwf	(___fladd@a+3)^0,c
  1836  001450  ECB6  F00B         	call	___fladd	;wreg free
  1837  001454  C001  F29E         	movff	?___fladd,main@k
  1838  001458  C002  F29F         	movff	?___fladd+1,main@k+1
  1839  00145C  C003  F2A0         	movff	?___fladd+2,main@k+2
  1840  001460  C004  F2A1         	movff	?___fladd+3,main@k+3
  1841  001464  C29E  F001         	movff	main@k,___flge@ff1
  1842  001468  C29F  F002         	movff	main@k+1,___flge@ff1+1
  1843  00146C  C2A0  F003         	movff	main@k+2,___flge@ff1+2
  1844  001470  C2A1  F004         	movff	main@k+3,___flge@ff1+3
  1845  001474  0E00               	movlw	0
  1846  001476  6E05               	movwf	___flge@ff2^0,c
  1847  001478  0E00               	movlw	0
  1848  00147A  6E06               	movwf	(___flge@ff2+1)^0,c
  1849  00147C  0E7A               	movlw	122
  1850  00147E  6E07               	movwf	(___flge@ff2+2)^0,c
  1851  001480  0E43               	movlw	67
  1852  001482  6E08               	movwf	(___flge@ff2+3)^0,c
  1853  001484  ECD8  F014         	call	___flge	;wreg free
  1854  001488  A0D8               	btfss	status,0,c
  1855  00148A  EF49  F00A         	goto	u4471
  1856  00148E  EF4B  F00A         	goto	u4470
  1857  001492                     u4471:
  1858  001492  EF18  F00A         	goto	l3816
  1859  001496                     u4470:
  1860  001496                     l3818:
  1861                           
  1862                           ;newmain2.c: 73:         lcdCommand(0xD0);
  1863  001496  0ED0               	movlw	208
  1864  001498  EC69  F016         	call	_lcdCommand
  1865  00149C                     
  1866                           ;newmain2.c: 74:         for (i = 0; i < 17; i++) {
  1867  00149C  0E00               	movlw	0
  1868  00149E  0102               	movlb	2	; () banked
  1869  0014A0  6FA2               	movwf	main@i& (0+255),b
  1870  0014A2                     l3826:
  1871                           
  1872                           ; BSR set to: 2
  1873                           ;newmain2.c: 75:             lcdData(s[i]);
  1874  0014A2  0E52               	movlw	low main@s
  1875  0014A4  25A2               	addwf	main@i& (0+255),w,b
  1876  0014A6  6ED9               	movwf	fsr2l,c
  1877  0014A8  6ADA               	clrf	fsr2h,c
  1878  0014AA  0E02               	movlw	high main@s
  1879  0014AC  22DA               	addwfc	fsr2h,f,c
  1880  0014AE  50DF               	movf	indf2,w,c
  1881  0014B0  ECDC  F018         	call	_lcdData
  1882  0014B4                     
  1883                           ;newmain2.c: 76:         }
  1884  0014B4  0102               	movlb	2	; () banked
  1885  0014B6  2BA2               	incf	main@i& (0+255),f,b
  1886  0014B8                     
  1887                           ; BSR set to: 2
  1888  0014B8  0E10               	movlw	16
  1889  0014BA  65A2               	cpfsgt	main@i& (0+255),b
  1890  0014BC  EF62  F00A         	goto	u4481
  1891  0014C0  EF64  F00A         	goto	u4480
  1892  0014C4                     u4481:
  1893  0014C4  EF51  F00A         	goto	l3826
  1894  0014C8                     u4480:
  1895  0014C8                     
  1896                           ; BSR set to: 2
  1897                           ;newmain2.c: 79:         escolheComida();
  1898  0014C8  EC16  F00E         	call	_escolheComida	;wreg free
  1899  0014CC                     
  1900                           ;newmain2.c: 80:         abreTampa();
  1901  0014CC  ECFD  F012         	call	_abreTampa	;wreg free
  1902  0014D0                     
  1903                           ;newmain2.c: 81:         escolheTempo();
  1904  0014D0  EC09  F003         	call	_escolheTempo	;wreg free
  1905  0014D4                     
  1906                           ;newmain2.c: 82:         lcdCommand(0x01);
  1907  0014D4  0E01               	movlw	1
  1908  0014D6  EC69  F016         	call	_lcdCommand
  1909  0014DA                     
  1910                           ;newmain2.c: 84:         lcdCommand(0x01);
  1911  0014DA  0E01               	movlw	1
  1912  0014DC  EC69  F016         	call	_lcdCommand
  1913  0014E0                     
  1914                           ;newmain2.c: 87:         char final[26] = "Deseja cozinhar\nnovamente?";
  1915  0014E0  EE21  F0AE         	lfsr	2,main@F2939
  1916  0014E4  EE12  F063         	lfsr	1,main@final
  1917  0014E8  0E19               	movlw	25
  1918  0014EA                     u4491:
  1919  0014EA  CFDB FFE3          	movff	plusw2,plusw1
  1920  0014EE  06E8               	decf	wreg,f,c
  1921  0014F0  E2FC               	bc	u4491
  1922  0014F2                     
  1923                           ;newmain2.c: 88:         lcdPosition(0, 0);
  1924  0014F2  0E00               	movlw	0
  1925  0014F4  6E09               	movwf	lcdPosition@coluna^0,c
  1926  0014F6  0E00               	movlw	0
  1927  0014F8  EC93  F017         	call	_lcdPosition
  1928  0014FC                     
  1929                           ;newmain2.c: 89:         for (i = 0; i < 26; i++) {
  1930  0014FC  0E00               	movlw	0
  1931  0014FE  0102               	movlb	2	; () banked
  1932  001500  6FA2               	movwf	main@i& (0+255),b
  1933  001502                     l3852:
  1934                           
  1935                           ; BSR set to: 2
  1936                           ;newmain2.c: 90:             lcdData(final[i]);
  1937  001502  0E63               	movlw	low main@final
  1938  001504  25A2               	addwf	main@i& (0+255),w,b
  1939  001506  6ED9               	movwf	fsr2l,c
  1940  001508  6ADA               	clrf	fsr2h,c
  1941  00150A  0E02               	movlw	high main@final
  1942  00150C  22DA               	addwfc	fsr2h,f,c
  1943  00150E  50DF               	movf	indf2,w,c
  1944  001510  ECDC  F018         	call	_lcdData
  1945  001514                     
  1946                           ;newmain2.c: 91:             if (strcmp(final[i], '\n') == 0) {
  1947  001514  0E63               	movlw	low main@final
  1948  001516  0102               	movlb	2	; () banked
  1949  001518  25A2               	addwf	main@i& (0+255),w,b
  1950  00151A  6ED9               	movwf	fsr2l,c
  1951  00151C  6ADA               	clrf	fsr2h,c
  1952  00151E  0E02               	movlw	high main@final
  1953  001520  22DA               	addwfc	fsr2h,f,c
  1954  001522  50DF               	movf	indf2,w,c
  1955  001524  6E6C               	movwf	??_main^0,c
  1956  001526  6A6D               	clrf	(??_main+1)^0,c
  1957  001528  6A6E               	clrf	(??_main+2)^0,c
  1958  00152A  C06C  F001         	movff	??_main,strcmp@l
  1959  00152E  C06D  F002         	movff	??_main+1,strcmp@l+1
  1960  001532  C06E  F003         	movff	??_main+2,strcmp@l+2
  1961  001536  0E0A               	movlw	10
  1962  001538  6E04               	movwf	strcmp@r^0,c
  1963  00153A  0E00               	movlw	0
  1964  00153C  6E05               	movwf	(strcmp@r+1)^0,c
  1965  00153E  0E00               	movlw	0
  1966  001540  6E06               	movwf	(strcmp@r+2)^0,c
  1967  001542  ECD0  F015         	call	_strcmp	;wreg free
  1968  001546  5001               	movf	?_strcmp^0,w,c
  1969  001548  1002               	iorwf	(?_strcmp+1)^0,w,c
  1970  00154A  A4D8               	btfss	status,2,c
  1971  00154C  EFAA  F00A         	goto	u4501
  1972  001550  EFAC  F00A         	goto	u4500
  1973  001554                     u4501:
  1974  001554  EFAF  F00A         	goto	l3858
  1975  001558                     u4500:
  1976  001558                     
  1977                           ;newmain2.c: 92:                 lcdCommand(0xC0);
  1978  001558  0EC0               	movlw	192
  1979  00155A  EC69  F016         	call	_lcdCommand
  1980  00155E                     l3858:
  1981                           
  1982                           ;newmain2.c: 94:         }
  1983  00155E  0102               	movlb	2	; () banked
  1984  001560  2BA2               	incf	main@i& (0+255),f,b
  1985  001562                     
  1986                           ; BSR set to: 2
  1987  001562  0E19               	movlw	25
  1988  001564  65A2               	cpfsgt	main@i& (0+255),b
  1989  001566  EFB7  F00A         	goto	u4511
  1990  00156A  EFB9  F00A         	goto	u4510
  1991  00156E                     u4511:
  1992  00156E  EF81  F00A         	goto	l3852
  1993  001572                     u4510:
  1994  001572                     
  1995                           ; BSR set to: 2
  1996                           ;newmain2.c: 95:         atraso_ms(2000);
  1997  001572  0E07               	movlw	7
  1998  001574  6E02               	movwf	(atraso_ms@t+1)^0,c
  1999  001576  0ED0               	movlw	208
  2000  001578  6E01               	movwf	atraso_ms@t^0,c
  2001  00157A  ECC8  F017         	call	_atraso_ms	;wreg free
  2002                           
  2003                           ;newmain2.c: 96:         lcdCommand(0x01);
  2004  00157E  0E01               	movlw	1
  2005  001580  EC69  F016         	call	_lcdCommand
  2006  001584                     
  2007                           ;newmain2.c: 97:         char final2[12] = "9-Sim \n#-Nao";
  2008  001584  EE22  F0F4         	lfsr	2,main@F2941
  2009  001588  EE12  F08A         	lfsr	1,main@final2
  2010  00158C  0E0B               	movlw	11
  2011  00158E                     u4521:
  2012  00158E  CFDB FFE3          	movff	plusw2,plusw1
  2013  001592  06E8               	decf	wreg,f,c
  2014  001594  E2FC               	bc	u4521
  2015  001596                     
  2016                           ;newmain2.c: 98:         lcdPosition(0, 0);
  2017  001596  0E00               	movlw	0
  2018  001598  6E09               	movwf	lcdPosition@coluna^0,c
  2019  00159A  0E00               	movlw	0
  2020  00159C  EC93  F017         	call	_lcdPosition
  2021  0015A0                     
  2022                           ;newmain2.c: 99:         for (i = 0; i < 12; i++) {
  2023  0015A0  0E00               	movlw	0
  2024  0015A2  0102               	movlb	2	; () banked
  2025  0015A4  6FA2               	movwf	main@i& (0+255),b
  2026  0015A6                     l3874:
  2027                           
  2028                           ; BSR set to: 2
  2029                           ;newmain2.c: 100:             lcdData(final2[i]);
  2030  0015A6  0E8A               	movlw	low main@final2
  2031  0015A8  25A2               	addwf	main@i& (0+255),w,b
  2032  0015AA  6ED9               	movwf	fsr2l,c
  2033  0015AC  6ADA               	clrf	fsr2h,c
  2034  0015AE  0E02               	movlw	high main@final2
  2035  0015B0  22DA               	addwfc	fsr2h,f,c
  2036  0015B2  50DF               	movf	indf2,w,c
  2037  0015B4  ECDC  F018         	call	_lcdData
  2038  0015B8                     
  2039                           ;newmain2.c: 101:             if (strcmp(final2[i], '\n') == 0) {
  2040  0015B8  0E8A               	movlw	low main@final2
  2041  0015BA  0102               	movlb	2	; () banked
  2042  0015BC  25A2               	addwf	main@i& (0+255),w,b
  2043  0015BE  6ED9               	movwf	fsr2l,c
  2044  0015C0  6ADA               	clrf	fsr2h,c
  2045  0015C2  0E02               	movlw	high main@final2
  2046  0015C4  22DA               	addwfc	fsr2h,f,c
  2047  0015C6  50DF               	movf	indf2,w,c
  2048  0015C8  6E6C               	movwf	??_main^0,c
  2049  0015CA  6A6D               	clrf	(??_main+1)^0,c
  2050  0015CC  6A6E               	clrf	(??_main+2)^0,c
  2051  0015CE  C06C  F001         	movff	??_main,strcmp@l
  2052  0015D2  C06D  F002         	movff	??_main+1,strcmp@l+1
  2053  0015D6  C06E  F003         	movff	??_main+2,strcmp@l+2
  2054  0015DA  0E0A               	movlw	10
  2055  0015DC  6E04               	movwf	strcmp@r^0,c
  2056  0015DE  0E00               	movlw	0
  2057  0015E0  6E05               	movwf	(strcmp@r+1)^0,c
  2058  0015E2  0E00               	movlw	0
  2059  0015E4  6E06               	movwf	(strcmp@r+2)^0,c
  2060  0015E6  ECD0  F015         	call	_strcmp	;wreg free
  2061  0015EA  5001               	movf	?_strcmp^0,w,c
  2062  0015EC  1002               	iorwf	(?_strcmp+1)^0,w,c
  2063  0015EE  A4D8               	btfss	status,2,c
  2064  0015F0  EFFC  F00A         	goto	u4531
  2065  0015F4  EFFE  F00A         	goto	u4530
  2066  0015F8                     u4531:
  2067  0015F8  EF01  F00B         	goto	l3880
  2068  0015FC                     u4530:
  2069  0015FC                     
  2070                           ;newmain2.c: 102:                 lcdCommand(0xC0);
  2071  0015FC  0EC0               	movlw	192
  2072  0015FE  EC69  F016         	call	_lcdCommand
  2073  001602                     l3880:
  2074                           
  2075                           ;newmain2.c: 104:         }
  2076  001602  0102               	movlb	2	; () banked
  2077  001604  2BA2               	incf	main@i& (0+255),f,b
  2078  001606                     
  2079                           ; BSR set to: 2
  2080  001606  0E0B               	movlw	11
  2081  001608  65A2               	cpfsgt	main@i& (0+255),b
  2082  00160A  EF09  F00B         	goto	u4541
  2083  00160E  EF0B  F00B         	goto	u4540
  2084  001612                     u4541:
  2085  001612  EFD3  F00A         	goto	l3874
  2086  001616                     u4540:
  2087  001616                     
  2088                           ; BSR set to: 2
  2089                           ;newmain2.c: 106:         kpInit();
  2090  001616  EC55  F019         	call	_kpInit	;wreg free
  2091  00161A                     
  2092                           ;newmain2.c: 107:         tecla = kpRead();
  2093  00161A  EC50  F019         	call	_kpRead	;wreg free
  2094  00161E  C001  F29C         	movff	?_kpRead,main@tecla
  2095  001622  C002  F29D         	movff	?_kpRead+1,main@tecla+1
  2096  001626                     
  2097                           ;newmain2.c: 108:         int aux2 = 1, aux3 = 1;
  2098  001626  0E00               	movlw	0
  2099  001628  0102               	movlb	2	; () banked
  2100  00162A  6F97               	movwf	(main@aux2+1)& (0+255),b
  2101  00162C  0E01               	movlw	1
  2102  00162E  6F96               	movwf	main@aux2& (0+255),b
  2103  001630                     
  2104                           ; BSR set to: 2
  2105  001630  0E00               	movlw	0
  2106  001632  6F9B               	movwf	(main@aux3+1)& (0+255),b
  2107  001634  0E01               	movlw	1
  2108  001636  6F9A               	movwf	main@aux3& (0+255),b
  2109                           
  2110                           ;newmain2.c: 109:         while (aux3 == 1) {
  2111  001638  EF54  F00B         	goto	l3906
  2112  00163C                     l3892:
  2113                           
  2114                           ; BSR set to: 2
  2115                           ;newmain2.c: 110:             kpDebounce();
  2116  00163C  EC40  F012         	call	_kpDebounce	;wreg free
  2117  001640                     
  2118                           ;newmain2.c: 111:             if (kpRead() != tecla) {
  2119  001640  EC50  F019         	call	_kpRead	;wreg free
  2120  001644  0102               	movlb	2	; () banked
  2121  001646  519C               	movf	main@tecla& (0+255),w,b
  2122  001648  1801               	xorwf	?_kpRead^0,w,c
  2123  00164A  E109               	bnz	u4550
  2124  00164C  519D               	movf	(main@tecla+1)& (0+255),w,b
  2125  00164E  1802               	xorwf	(?_kpRead+1)^0,w,c
  2126  001650  B4D8               	btfsc	status,2,c
  2127  001652  EF2D  F00B         	goto	u4551
  2128  001656  EF2F  F00B         	goto	u4550
  2129  00165A                     u4551:
  2130  00165A  EF54  F00B         	goto	l3906
  2131  00165E                     u4550:
  2132  00165E                     
  2133                           ; BSR set to: 2
  2134                           ;newmain2.c: 112:                 tecla = kpRead();
  2135  00165E  EC50  F019         	call	_kpRead	;wreg free
  2136  001662  C001  F29C         	movff	?_kpRead,main@tecla
  2137  001666  C002  F29D         	movff	?_kpRead+1,main@tecla+1
  2138  00166A                     
  2139                           ;newmain2.c: 114:                 if (((tecla) & (1<<(9)))) {
  2140  00166A  0102               	movlb	2	; () banked
  2141  00166C  A39D               	btfss	(main@tecla+1)& (0+255),1,b
  2142  00166E  EF3B  F00B         	goto	u4561
  2143  001672  EF3D  F00B         	goto	u4560
  2144  001676                     u4561:
  2145  001676  EF45  F00B         	goto	l3902
  2146  00167A                     u4560:
  2147  00167A                     
  2148                           ; BSR set to: 2
  2149                           ;newmain2.c: 115:                     op = 1;
  2150  00167A  0E00               	movlw	0
  2151  00167C  6F99               	movwf	(main@op+1)& (0+255),b
  2152  00167E  0E01               	movlw	1
  2153  001680  6F98               	movwf	main@op& (0+255),b
  2154                           
  2155                           ;newmain2.c: 116:                     aux3 = 0;
  2156  001682  0E00               	movlw	0
  2157  001684  6F9B               	movwf	(main@aux3+1)& (0+255),b
  2158  001686  0E00               	movlw	0
  2159  001688  6F9A               	movwf	main@aux3& (0+255),b
  2160  00168A                     l3902:
  2161                           
  2162                           ; BSR set to: 2
  2163                           ;newmain2.c: 119:                 if (((tecla) & (1<<(8)))) {
  2164  00168A  A19D               	btfss	(main@tecla+1)& (0+255),0,b
  2165  00168C  EF4A  F00B         	goto	u4571
  2166  001690  EF4C  F00B         	goto	u4570
  2167  001694                     u4571:
  2168  001694  EF54  F00B         	goto	l3906
  2169  001698                     u4570:
  2170  001698                     
  2171                           ; BSR set to: 2
  2172                           ;newmain2.c: 120:                     op = 0;
  2173  001698  0E00               	movlw	0
  2174  00169A  6F99               	movwf	(main@op+1)& (0+255),b
  2175  00169C  0E00               	movlw	0
  2176  00169E  6F98               	movwf	main@op& (0+255),b
  2177                           
  2178                           ;newmain2.c: 121:                     aux3 = 0;
  2179  0016A0  0E00               	movlw	0
  2180  0016A2  6F9B               	movwf	(main@aux3+1)& (0+255),b
  2181  0016A4  0E00               	movlw	0
  2182  0016A6  6F9A               	movwf	main@aux3& (0+255),b
  2183  0016A8                     l3906:
  2184                           
  2185                           ; BSR set to: 2
  2186                           ;newmain2.c: 109:         while (aux3 == 1) {
  2187  0016A8  059A               	decf	main@aux3& (0+255),w,b
  2188  0016AA  119B               	iorwf	(main@aux3+1)& (0+255),w,b
  2189  0016AC  B4D8               	btfsc	status,2,c
  2190  0016AE  EF5B  F00B         	goto	u4581
  2191  0016B2  EF5D  F00B         	goto	u4580
  2192  0016B6                     u4581:
  2193  0016B6  EF1E  F00B         	goto	l3892
  2194  0016BA                     u4580:
  2195  0016BA                     l3908:
  2196                           
  2197                           ; BSR set to: 2
  2198                           ;newmain2.c: 29:     while (op == 1) {
  2199  0016BA  0598               	decf	main@op& (0+255),w,b
  2200  0016BC  1199               	iorwf	(main@op+1)& (0+255),w,b
  2201  0016BE  B4D8               	btfsc	status,2,c
  2202  0016C0  EF64  F00B         	goto	u4591
  2203  0016C4  EF66  F00B         	goto	u4590
  2204  0016C8                     u4591:
  2205  0016C8  EFC9  F007         	goto	l3698
  2206  0016CC                     u4590:
  2207  0016CC                     
  2208                           ; BSR set to: 2
  2209                           ;newmain2.c: 128:     char agradece[13] = "Desligando...";
  2210  0016CC  EE22  F0E7         	lfsr	2,main@F2945
  2211  0016D0  EE12  F07D         	lfsr	1,main@agradece
  2212  0016D4  0E0C               	movlw	12
  2213  0016D6                     u4601:
  2214  0016D6  CFDB FFE3          	movff	plusw2,plusw1
  2215  0016DA  06E8               	decf	wreg,f,c
  2216  0016DC  E2FC               	bc	u4601
  2217  0016DE                     
  2218                           ; BSR set to: 2
  2219                           ;newmain2.c: 129:     lcdCommand(0x01);
  2220  0016DE  0E01               	movlw	1
  2221  0016E0  EC69  F016         	call	_lcdCommand
  2222  0016E4                     
  2223                           ;newmain2.c: 130:     lcdPosition(0, 0);
  2224  0016E4  0E00               	movlw	0
  2225  0016E6  6E09               	movwf	lcdPosition@coluna^0,c
  2226  0016E8  0E00               	movlw	0
  2227  0016EA  EC93  F017         	call	_lcdPosition
  2228  0016EE                     
  2229                           ;newmain2.c: 131:     for (i = 0; i < 13; i++) {
  2230  0016EE  0E00               	movlw	0
  2231  0016F0  0102               	movlb	2	; () banked
  2232  0016F2  6FA2               	movwf	main@i& (0+255),b
  2233  0016F4                     l3922:
  2234                           
  2235                           ; BSR set to: 2
  2236                           ;newmain2.c: 132:         lcdData(agradece[i]);
  2237  0016F4  0E7D               	movlw	low main@agradece
  2238  0016F6  25A2               	addwf	main@i& (0+255),w,b
  2239  0016F8  6ED9               	movwf	fsr2l,c
  2240  0016FA  6ADA               	clrf	fsr2h,c
  2241  0016FC  0E02               	movlw	high main@agradece
  2242  0016FE  22DA               	addwfc	fsr2h,f,c
  2243  001700  50DF               	movf	indf2,w,c
  2244  001702  ECDC  F018         	call	_lcdData
  2245  001706                     
  2246                           ;newmain2.c: 133:         if (strcmp(agradece[i], '\n') == 0) {
  2247  001706  0E7D               	movlw	low main@agradece
  2248  001708  0102               	movlb	2	; () banked
  2249  00170A  25A2               	addwf	main@i& (0+255),w,b
  2250  00170C  6ED9               	movwf	fsr2l,c
  2251  00170E  6ADA               	clrf	fsr2h,c
  2252  001710  0E02               	movlw	high main@agradece
  2253  001712  22DA               	addwfc	fsr2h,f,c
  2254  001714  50DF               	movf	indf2,w,c
  2255  001716  6E6C               	movwf	??_main^0,c
  2256  001718  6A6D               	clrf	(??_main+1)^0,c
  2257  00171A  6A6E               	clrf	(??_main+2)^0,c
  2258  00171C  C06C  F001         	movff	??_main,strcmp@l
  2259  001720  C06D  F002         	movff	??_main+1,strcmp@l+1
  2260  001724  C06E  F003         	movff	??_main+2,strcmp@l+2
  2261  001728  0E0A               	movlw	10
  2262  00172A  6E04               	movwf	strcmp@r^0,c
  2263  00172C  0E00               	movlw	0
  2264  00172E  6E05               	movwf	(strcmp@r+1)^0,c
  2265  001730  0E00               	movlw	0
  2266  001732  6E06               	movwf	(strcmp@r+2)^0,c
  2267  001734  ECD0  F015         	call	_strcmp	;wreg free
  2268  001738  5001               	movf	?_strcmp^0,w,c
  2269  00173A  1002               	iorwf	(?_strcmp+1)^0,w,c
  2270  00173C  A4D8               	btfss	status,2,c
  2271  00173E  EFA3  F00B         	goto	u4611
  2272  001742  EFA5  F00B         	goto	u4610
  2273  001746                     u4611:
  2274  001746  EFA8  F00B         	goto	l3928
  2275  00174A                     u4610:
  2276  00174A                     
  2277                           ;newmain2.c: 134:             lcdCommand(0xC0);
  2278  00174A  0EC0               	movlw	192
  2279  00174C  EC69  F016         	call	_lcdCommand
  2280  001750                     l3928:
  2281                           
  2282                           ;newmain2.c: 136:     }
  2283  001750  0102               	movlb	2	; () banked
  2284  001752  2BA2               	incf	main@i& (0+255),f,b
  2285  001754                     
  2286                           ; BSR set to: 2
  2287  001754  0E0C               	movlw	12
  2288  001756  65A2               	cpfsgt	main@i& (0+255),b
  2289  001758  EFB0  F00B         	goto	u4621
  2290  00175C  EFB2  F00B         	goto	u4620
  2291  001760                     u4621:
  2292  001760  EF7A  F00B         	goto	l3922
  2293  001764                     u4620:
  2294  001764                     l301:
  2295  001764  EFB2  F00B         	goto	l301
  2296  001768  EF00  F000         	goto	start
  2297  00176C                     __end_of_main:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _escolheTempo *****************
  2301 ;; Defined at:
  2302 ;;		line 180 in file "newmain2.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  foguinho       64    0[BANK1 ] unsigned char [64]
  2307 ;;  msg3           28   64[BANK1 ] unsigned char [28]
  2308 ;;  msg2           21  107[BANK1 ] unsigned char [21]
  2309 ;;  msg            15   92[BANK1 ] unsigned char [15]
  2310 ;;  cont            4  140[BANK1 ] long 
  2311 ;;  tempo           4  134[BANK1 ] float 
  2312 ;;  i               2  144[BANK1 ] int 
  2313 ;;  tecla           2  138[BANK1 ] unsigned int 
  2314 ;;  flag            2  132[BANK1 ] unsigned int 
  2315 ;;  aux             2  130[BANK1 ] int 
  2316 ;;  k               2  128[BANK1 ] int 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2326 ;;      Params:         0       0       0       0       0       0       0
  2327 ;;      Locals:         0       0     146       0       0       0       0
  2328 ;;      Temps:          3       0       0       0       0       0       0
  2329 ;;      Totals:         3       0     146       0       0       0       0
  2330 ;;Total ram usage:      149 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 4
  2333 ;; This function calls:
  2334 ;;		___aldiv
  2335 ;;		___almod
  2336 ;;		___fladd
  2337 ;;		___flge
  2338 ;;		_atraso_ms
  2339 ;;		_kpDebounce
  2340 ;;		_kpInit
  2341 ;;		_kpRead
  2342 ;;		_lcdCommand
  2343 ;;		_lcdData
  2344 ;;		_lcdInit
  2345 ;;		_lcdPosition
  2346 ;;		_pwmFrequency
  2347 ;;		_pwmSet1
  2348 ;;		_ssdDigit
  2349 ;;		_ssdInit
  2350 ;;		_ssdUpdate
  2351 ;;		_strcmp
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text1
  2358  000612                     __ptext1:
  2359                           	callstack 0
  2360  000612                     _escolheTempo:
  2361                           	callstack 26
  2362  000612                     
  2363                           ;newmain2.c: 181:     unsigned int flag = 1;
  2364  000612  0E00               	movlw	0
  2365  000614  0101               	movlb	1	; () banked
  2366  000616  6F85               	movwf	(escolheTempo@flag+1)& (0+255),b
  2367  000618  0E01               	movlw	1
  2368  00061A  6F84               	movwf	escolheTempo@flag& (0+255),b
  2369  00061C  0E00               	movlw	0
  2370  00061E  6F81               	movwf	(escolheTempo@k+1)& (0+255),b
  2371  000620  0E00               	movlw	0
  2372  000622  6F80               	movwf	escolheTempo@k& (0+255),b
  2373                           
  2374                           ;newmain2.c: 183:     unsigned int tecla = 16;
  2375  000624  0E00               	movlw	0
  2376  000626  6F8B               	movwf	(escolheTempo@tecla+1)& (0+255),b
  2377  000628  0E10               	movlw	16
  2378  00062A  6F8A               	movwf	escolheTempo@tecla& (0+255),b
  2379                           
  2380                           ;newmain2.c: 184:     long int cont = 0;
  2381  00062C  0E00               	movlw	0
  2382  00062E  6F8C               	movwf	escolheTempo@cont& (0+255),b
  2383  000630  0E00               	movlw	0
  2384  000632  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  2385  000634  0E00               	movlw	0
  2386  000636  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  2387  000638  0E00               	movlw	0
  2388  00063A  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  2389                           
  2390                           ;newmain2.c: 185:     float tempo = 0;
  2391  00063C  0E00               	movlw	0
  2392  00063E  6F86               	movwf	escolheTempo@tempo& (0+255),b
  2393  000640  0E00               	movlw	0
  2394  000642  6F87               	movwf	(escolheTempo@tempo+1)& (0+255),b
  2395  000644  0E00               	movlw	0
  2396  000646  6F88               	movwf	(escolheTempo@tempo+2)& (0+255),b
  2397  000648  0E00               	movlw	0
  2398  00064A  6F89               	movwf	(escolheTempo@tempo+3)& (0+255),b
  2399                           
  2400                           ;newmain2.c: 186:     int aux = 0;
  2401  00064C  0E00               	movlw	0
  2402  00064E  6F83               	movwf	(escolheTempo@aux+1)& (0+255),b
  2403  000650  0E00               	movlw	0
  2404  000652  6F82               	movwf	escolheTempo@aux& (0+255),b
  2405  000654                     
  2406                           ; BSR set to: 1
  2407                           ;newmain2.c: 187:     ssdInit();
  2408  000654  ECB1  F018         	call	_ssdInit	;wreg free
  2409  000658                     
  2410                           ;newmain2.c: 188:     lcdInit();
  2411  000658  ECE7  F016         	call	_lcdInit	;wreg free
  2412  00065C                     
  2413                           ;newmain2.c: 190:     char msg[15] = "Escolha o tempo";
  2414  00065C  EE21  F0DD         	lfsr	2,escolheTempo@F2964
  2415  000660  EE11  F05C         	lfsr	1,escolheTempo@msg
  2416  000664  0E0E               	movlw	14
  2417  000666                     u3931:
  2418  000666  CFDB FFE3          	movff	plusw2,plusw1
  2419  00066A  06E8               	decf	wreg,f,c
  2420  00066C  E2FC               	bc	u3931
  2421  00066E                     
  2422                           ;newmain2.c: 191:     for (i = 0; i < 15; i++) {
  2423  00066E  0E00               	movlw	0
  2424  000670  0101               	movlb	1	; () banked
  2425  000672  6F91               	movwf	(escolheTempo@i+1)& (0+255),b
  2426  000674  0E00               	movlw	0
  2427  000676  6F90               	movwf	escolheTempo@i& (0+255),b
  2428  000678                     l3480:
  2429                           
  2430                           ; BSR set to: 1
  2431                           ;newmain2.c: 192:         lcdData(msg[i]);
  2432  000678  0E5C               	movlw	low escolheTempo@msg
  2433  00067A  2590               	addwf	escolheTempo@i& (0+255),w,b
  2434  00067C  6ED9               	movwf	fsr2l,c
  2435  00067E  0E01               	movlw	high escolheTempo@msg
  2436  000680  2191               	addwfc	(escolheTempo@i+1)& (0+255),w,b
  2437  000682  6EDA               	movwf	fsr2h,c
  2438  000684  50DF               	movf	indf2,w,c
  2439  000686  ECDC  F018         	call	_lcdData
  2440  00068A                     
  2441                           ;newmain2.c: 193:     }
  2442  00068A  0101               	movlb	1	; () banked
  2443  00068C  4B90               	infsnz	escolheTempo@i& (0+255),f,b
  2444  00068E  2B91               	incf	(escolheTempo@i+1)& (0+255),f,b
  2445  000690                     
  2446                           ; BSR set to: 1
  2447  000690  BF91               	btfsc	(escolheTempo@i+1)& (0+255),7,b
  2448  000692  EF54  F003         	goto	u3941
  2449  000696  5191               	movf	(escolheTempo@i+1)& (0+255),w,b
  2450  000698  E109               	bnz	u3940
  2451  00069A  0E0F               	movlw	15
  2452  00069C  5D90               	subwf	escolheTempo@i& (0+255),w,b
  2453  00069E  A0D8               	btfss	status,0,c
  2454  0006A0  EF54  F003         	goto	u3941
  2455  0006A4  EF56  F003         	goto	u3940
  2456  0006A8                     u3941:
  2457  0006A8  EF3C  F003         	goto	l3480
  2458  0006AC                     u3940:
  2459  0006AC                     
  2460                           ; BSR set to: 1
  2461                           ;newmain2.c: 194:     atraso_ms(2000);
  2462  0006AC  0E07               	movlw	7
  2463  0006AE  6E02               	movwf	(atraso_ms@t+1)^0,c
  2464  0006B0  0ED0               	movlw	208
  2465  0006B2  6E01               	movwf	atraso_ms@t^0,c
  2466  0006B4  ECC8  F017         	call	_atraso_ms	;wreg free
  2467                           
  2468                           ;newmain2.c: 195:     lcdCommand(0x01);
  2469  0006B8  0E01               	movlw	1
  2470  0006BA  EC69  F016         	call	_lcdCommand
  2471                           
  2472                           ;newmain2.c: 196:     lcdPosition(0, 0);
  2473  0006BE  0E00               	movlw	0
  2474  0006C0  6E09               	movwf	lcdPosition@coluna^0,c
  2475  0006C2  0E00               	movlw	0
  2476  0006C4  EC93  F017         	call	_lcdPosition
  2477  0006C8                     
  2478                           ;newmain2.c: 198:     char msg2[21] = "Digite *\npara iniciar";
  2479  0006C8  EE21  F0C8         	lfsr	2,escolheTempo@F2966
  2480  0006CC  EE11  F06B         	lfsr	1,escolheTempo@msg2
  2481  0006D0  0E14               	movlw	20
  2482  0006D2                     u3951:
  2483  0006D2  CFDB FFE3          	movff	plusw2,plusw1
  2484  0006D6  06E8               	decf	wreg,f,c
  2485  0006D8  E2FC               	bc	u3951
  2486  0006DA                     
  2487                           ;newmain2.c: 199:     for (i = 0; i < 21; i++) {
  2488  0006DA  0E00               	movlw	0
  2489  0006DC  0101               	movlb	1	; () banked
  2490  0006DE  6F91               	movwf	(escolheTempo@i+1)& (0+255),b
  2491  0006E0  0E00               	movlw	0
  2492  0006E2  6F90               	movwf	escolheTempo@i& (0+255),b
  2493  0006E4                     l3496:
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;newmain2.c: 200:         lcdData(msg2[i]);
  2497  0006E4  0E6B               	movlw	low escolheTempo@msg2
  2498  0006E6  2590               	addwf	escolheTempo@i& (0+255),w,b
  2499  0006E8  6ED9               	movwf	fsr2l,c
  2500  0006EA  0E01               	movlw	high escolheTempo@msg2
  2501  0006EC  2191               	addwfc	(escolheTempo@i+1)& (0+255),w,b
  2502  0006EE  6EDA               	movwf	fsr2h,c
  2503  0006F0  50DF               	movf	indf2,w,c
  2504  0006F2  ECDC  F018         	call	_lcdData
  2505  0006F6                     
  2506                           ;newmain2.c: 201:         if (strcmp(msg2[i], '\n') == 0) {
  2507  0006F6  0E6B               	movlw	low escolheTempo@msg2
  2508  0006F8  0101               	movlb	1	; () banked
  2509  0006FA  2590               	addwf	escolheTempo@i& (0+255),w,b
  2510  0006FC  6ED9               	movwf	fsr2l,c
  2511  0006FE  0E01               	movlw	high escolheTempo@msg2
  2512  000700  2191               	addwfc	(escolheTempo@i+1)& (0+255),w,b
  2513  000702  6EDA               	movwf	fsr2h,c
  2514  000704  50DF               	movf	indf2,w,c
  2515  000706  6E1B               	movwf	??_escolheTempo^0,c
  2516  000708  6A1C               	clrf	(??_escolheTempo+1)^0,c
  2517  00070A  6A1D               	clrf	(??_escolheTempo+2)^0,c
  2518  00070C  C01B  F001         	movff	??_escolheTempo,strcmp@l
  2519  000710  C01C  F002         	movff	??_escolheTempo+1,strcmp@l+1
  2520  000714  C01D  F003         	movff	??_escolheTempo+2,strcmp@l+2
  2521  000718  0E0A               	movlw	10
  2522  00071A  6E04               	movwf	strcmp@r^0,c
  2523  00071C  0E00               	movlw	0
  2524  00071E  6E05               	movwf	(strcmp@r+1)^0,c
  2525  000720  0E00               	movlw	0
  2526  000722  6E06               	movwf	(strcmp@r+2)^0,c
  2527  000724  ECD0  F015         	call	_strcmp	;wreg free
  2528  000728  5001               	movf	?_strcmp^0,w,c
  2529  00072A  1002               	iorwf	(?_strcmp+1)^0,w,c
  2530  00072C  A4D8               	btfss	status,2,c
  2531  00072E  EF9B  F003         	goto	u3961
  2532  000732  EF9D  F003         	goto	u3960
  2533  000736                     u3961:
  2534  000736  EFA0  F003         	goto	l3502
  2535  00073A                     u3960:
  2536  00073A                     
  2537                           ;newmain2.c: 202:             lcdCommand(0xC0);
  2538  00073A  0EC0               	movlw	192
  2539  00073C  EC69  F016         	call	_lcdCommand
  2540  000740                     l3502:
  2541                           
  2542                           ;newmain2.c: 204:     }
  2543  000740  0101               	movlb	1	; () banked
  2544  000742  4B90               	infsnz	escolheTempo@i& (0+255),f,b
  2545  000744  2B91               	incf	(escolheTempo@i+1)& (0+255),f,b
  2546  000746                     
  2547                           ; BSR set to: 1
  2548  000746  BF91               	btfsc	(escolheTempo@i+1)& (0+255),7,b
  2549  000748  EFAF  F003         	goto	u3971
  2550  00074C  5191               	movf	(escolheTempo@i+1)& (0+255),w,b
  2551  00074E  E109               	bnz	u3970
  2552  000750  0E15               	movlw	21
  2553  000752  5D90               	subwf	escolheTempo@i& (0+255),w,b
  2554  000754  A0D8               	btfss	status,0,c
  2555  000756  EFAF  F003         	goto	u3971
  2556  00075A  EFB1  F003         	goto	u3970
  2557  00075E                     u3971:
  2558  00075E  EF72  F003         	goto	l3496
  2559  000762                     u3970:
  2560  000762                     
  2561                           ; BSR set to: 1
  2562                           ;newmain2.c: 205:     lcdPosition(2, 0);
  2563  000762  0E00               	movlw	0
  2564  000764  6E09               	movwf	lcdPosition@coluna^0,c
  2565  000766  0E02               	movlw	2
  2566  000768  EC93  F017         	call	_lcdPosition
  2567  00076C                     
  2568                           ;newmain2.c: 207:     char msg3[28] = "4- +1m 5- -1m\n7- +1s  8- -1s";
  2569  00076C  EE21  F092         	lfsr	2,escolheTempo@F2968
  2570  000770  EE11  F040         	lfsr	1,escolheTempo@msg3
  2571  000774  0E1B               	movlw	27
  2572  000776                     u3981:
  2573  000776  CFDB FFE3          	movff	plusw2,plusw1
  2574  00077A  06E8               	decf	wreg,f,c
  2575  00077C  E2FC               	bc	u3981
  2576  00077E                     
  2577                           ;newmain2.c: 208:     for (i = 0; i < 28; i++) {
  2578  00077E  0E00               	movlw	0
  2579  000780  0101               	movlb	1	; () banked
  2580  000782  6F91               	movwf	(escolheTempo@i+1)& (0+255),b
  2581  000784  0E00               	movlw	0
  2582  000786  6F90               	movwf	escolheTempo@i& (0+255),b
  2583  000788                     l3516:
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;newmain2.c: 209:         lcdData(msg3[i]);
  2587  000788  0E40               	movlw	low escolheTempo@msg3
  2588  00078A  2590               	addwf	escolheTempo@i& (0+255),w,b
  2589  00078C  6ED9               	movwf	fsr2l,c
  2590  00078E  0E01               	movlw	high escolheTempo@msg3
  2591  000790  2191               	addwfc	(escolheTempo@i+1)& (0+255),w,b
  2592  000792  6EDA               	movwf	fsr2h,c
  2593  000794  50DF               	movf	indf2,w,c
  2594  000796  ECDC  F018         	call	_lcdData
  2595  00079A                     
  2596                           ;newmain2.c: 210:         if (strcmp(msg3[i], '\n') == 0) {
  2597  00079A  0E40               	movlw	low escolheTempo@msg3
  2598  00079C  0101               	movlb	1	; () banked
  2599  00079E  2590               	addwf	escolheTempo@i& (0+255),w,b
  2600  0007A0  6ED9               	movwf	fsr2l,c
  2601  0007A2  0E01               	movlw	high escolheTempo@msg3
  2602  0007A4  2191               	addwfc	(escolheTempo@i+1)& (0+255),w,b
  2603  0007A6  6EDA               	movwf	fsr2h,c
  2604  0007A8  50DF               	movf	indf2,w,c
  2605  0007AA  6E1B               	movwf	??_escolheTempo^0,c
  2606  0007AC  6A1C               	clrf	(??_escolheTempo+1)^0,c
  2607  0007AE  6A1D               	clrf	(??_escolheTempo+2)^0,c
  2608  0007B0  C01B  F001         	movff	??_escolheTempo,strcmp@l
  2609  0007B4  C01C  F002         	movff	??_escolheTempo+1,strcmp@l+1
  2610  0007B8  C01D  F003         	movff	??_escolheTempo+2,strcmp@l+2
  2611  0007BC  0E0A               	movlw	10
  2612  0007BE  6E04               	movwf	strcmp@r^0,c
  2613  0007C0  0E00               	movlw	0
  2614  0007C2  6E05               	movwf	(strcmp@r+1)^0,c
  2615  0007C4  0E00               	movlw	0
  2616  0007C6  6E06               	movwf	(strcmp@r+2)^0,c
  2617  0007C8  ECD0  F015         	call	_strcmp	;wreg free
  2618  0007CC  5001               	movf	?_strcmp^0,w,c
  2619  0007CE  1002               	iorwf	(?_strcmp+1)^0,w,c
  2620  0007D0  A4D8               	btfss	status,2,c
  2621  0007D2  EFED  F003         	goto	u3991
  2622  0007D6  EFEF  F003         	goto	u3990
  2623  0007DA                     u3991:
  2624  0007DA  EFF4  F003         	goto	l3522
  2625  0007DE                     u3990:
  2626  0007DE                     
  2627                           ;newmain2.c: 211:             lcdPosition(3, 0);
  2628  0007DE  0E00               	movlw	0
  2629  0007E0  6E09               	movwf	lcdPosition@coluna^0,c
  2630  0007E2  0E03               	movlw	3
  2631  0007E4  EC93  F017         	call	_lcdPosition
  2632  0007E8                     l3522:
  2633                           
  2634                           ;newmain2.c: 213:     }
  2635  0007E8  0101               	movlb	1	; () banked
  2636  0007EA  4B90               	infsnz	escolheTempo@i& (0+255),f,b
  2637  0007EC  2B91               	incf	(escolheTempo@i+1)& (0+255),f,b
  2638  0007EE                     
  2639                           ; BSR set to: 1
  2640  0007EE  BF91               	btfsc	(escolheTempo@i+1)& (0+255),7,b
  2641  0007F0  EF03  F004         	goto	u4001
  2642  0007F4  5191               	movf	(escolheTempo@i+1)& (0+255),w,b
  2643  0007F6  E109               	bnz	u4000
  2644  0007F8  0E1C               	movlw	28
  2645  0007FA  5D90               	subwf	escolheTempo@i& (0+255),w,b
  2646  0007FC  A0D8               	btfss	status,0,c
  2647  0007FE  EF03  F004         	goto	u4001
  2648  000802  EF05  F004         	goto	u4000
  2649  000806                     u4001:
  2650  000806  EFC4  F003         	goto	l3516
  2651  00080A                     u4000:
  2652  00080A  EFF4  F005         	goto	l3600
  2653  00080E                     l3526:
  2654                           
  2655                           ; BSR set to: 1
  2656                           ;newmain2.c: 217:         ssdDigit(((cont / 60000) % 6), 0);
  2657  00080E  0E00               	movlw	0
  2658  000810  6E19               	movwf	ssdDigit@pos^0,c
  2659  000812  0E60               	movlw	96
  2660  000814  6E05               	movwf	___aldiv@divisor^0,c
  2661  000816  0EEA               	movlw	234
  2662  000818  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2663  00081A  0E00               	movlw	0
  2664  00081C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2665  00081E  0E00               	movlw	0
  2666  000820  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2667  000822  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  2668  000826  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  2669  00082A  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  2670  00082E  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  2671  000832  EC52  F014         	call	___aldiv	;wreg free
  2672  000836  C001  F00F         	movff	?___aldiv,___almod@dividend
  2673  00083A  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  2674  00083E  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  2675  000842  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  2676  000846  0E06               	movlw	6
  2677  000848  6E13               	movwf	___almod@divisor^0,c
  2678  00084A  0E00               	movlw	0
  2679  00084C  6E14               	movwf	(___almod@divisor+1)^0,c
  2680  00084E  0E00               	movlw	0
  2681  000850  6E15               	movwf	(___almod@divisor+2)^0,c
  2682  000852  0E00               	movlw	0
  2683  000854  6E16               	movwf	(___almod@divisor+3)^0,c
  2684  000856  EC5A  F015         	call	___almod	;wreg free
  2685  00085A  500F               	movf	?___almod^0,w,c
  2686  00085C  EC85  F018         	call	_ssdDigit
  2687                           
  2688                           ;newmain2.c: 218:         ssdDigit(((cont / 6000) % 10), 1);
  2689  000860  0E01               	movlw	1
  2690  000862  6E19               	movwf	ssdDigit@pos^0,c
  2691  000864  0E70               	movlw	112
  2692  000866  6E05               	movwf	___aldiv@divisor^0,c
  2693  000868  0E17               	movlw	23
  2694  00086A  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2695  00086C  0E00               	movlw	0
  2696  00086E  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2697  000870  0E00               	movlw	0
  2698  000872  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2699  000874  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  2700  000878  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  2701  00087C  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  2702  000880  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  2703  000884  EC52  F014         	call	___aldiv	;wreg free
  2704  000888  C001  F00F         	movff	?___aldiv,___almod@dividend
  2705  00088C  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  2706  000890  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  2707  000894  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  2708  000898  0E0A               	movlw	10
  2709  00089A  6E13               	movwf	___almod@divisor^0,c
  2710  00089C  0E00               	movlw	0
  2711  00089E  6E14               	movwf	(___almod@divisor+1)^0,c
  2712  0008A0  0E00               	movlw	0
  2713  0008A2  6E15               	movwf	(___almod@divisor+2)^0,c
  2714  0008A4  0E00               	movlw	0
  2715  0008A6  6E16               	movwf	(___almod@divisor+3)^0,c
  2716  0008A8  EC5A  F015         	call	___almod	;wreg free
  2717  0008AC  500F               	movf	?___almod^0,w,c
  2718  0008AE  EC85  F018         	call	_ssdDigit
  2719                           
  2720                           ;newmain2.c: 219:         ssdDigit(((cont / 1000) % 6), 2);
  2721  0008B2  0E02               	movlw	2
  2722  0008B4  6E19               	movwf	ssdDigit@pos^0,c
  2723  0008B6  0EE8               	movlw	232
  2724  0008B8  6E05               	movwf	___aldiv@divisor^0,c
  2725  0008BA  0E03               	movlw	3
  2726  0008BC  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2727  0008BE  0E00               	movlw	0
  2728  0008C0  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2729  0008C2  0E00               	movlw	0
  2730  0008C4  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2731  0008C6  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  2732  0008CA  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  2733  0008CE  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  2734  0008D2  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  2735  0008D6  EC52  F014         	call	___aldiv	;wreg free
  2736  0008DA  C001  F00F         	movff	?___aldiv,___almod@dividend
  2737  0008DE  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  2738  0008E2  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  2739  0008E6  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  2740  0008EA  0E06               	movlw	6
  2741  0008EC  6E13               	movwf	___almod@divisor^0,c
  2742  0008EE  0E00               	movlw	0
  2743  0008F0  6E14               	movwf	(___almod@divisor+1)^0,c
  2744  0008F2  0E00               	movlw	0
  2745  0008F4  6E15               	movwf	(___almod@divisor+2)^0,c
  2746  0008F6  0E00               	movlw	0
  2747  0008F8  6E16               	movwf	(___almod@divisor+3)^0,c
  2748  0008FA  EC5A  F015         	call	___almod	;wreg free
  2749  0008FE  500F               	movf	?___almod^0,w,c
  2750  000900  EC85  F018         	call	_ssdDigit
  2751                           
  2752                           ;newmain2.c: 220:         ssdDigit(((cont / 100) % 10), 3);
  2753  000904  0E03               	movlw	3
  2754  000906  6E19               	movwf	ssdDigit@pos^0,c
  2755  000908  0E64               	movlw	100
  2756  00090A  6E05               	movwf	___aldiv@divisor^0,c
  2757  00090C  0E00               	movlw	0
  2758  00090E  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2759  000910  0E00               	movlw	0
  2760  000912  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2761  000914  0E00               	movlw	0
  2762  000916  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2763  000918  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  2764  00091C  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  2765  000920  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  2766  000924  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  2767  000928  EC52  F014         	call	___aldiv	;wreg free
  2768  00092C  C001  F00F         	movff	?___aldiv,___almod@dividend
  2769  000930  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  2770  000934  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  2771  000938  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  2772  00093C  0E0A               	movlw	10
  2773  00093E  6E13               	movwf	___almod@divisor^0,c
  2774  000940  0E00               	movlw	0
  2775  000942  6E14               	movwf	(___almod@divisor+1)^0,c
  2776  000944  0E00               	movlw	0
  2777  000946  6E15               	movwf	(___almod@divisor+2)^0,c
  2778  000948  0E00               	movlw	0
  2779  00094A  6E16               	movwf	(___almod@divisor+3)^0,c
  2780  00094C  EC5A  F015         	call	___almod	;wreg free
  2781  000950  500F               	movf	?___almod^0,w,c
  2782  000952  EC85  F018         	call	_ssdDigit
  2783  000956                     
  2784                           ;newmain2.c: 221:         ssdUpdate();
  2785  000956  ECAA  F013         	call	_ssdUpdate	;wreg free
  2786  00095A                     
  2787                           ;newmain2.c: 222:         for (tempo = 0; tempo < 3; tempo++);
  2788  00095A  0E00               	movlw	0
  2789  00095C  0101               	movlb	1	; () banked
  2790  00095E  6F86               	movwf	escolheTempo@tempo& (0+255),b
  2791  000960  0E00               	movlw	0
  2792  000962  6F87               	movwf	(escolheTempo@tempo+1)& (0+255),b
  2793  000964  0E00               	movlw	0
  2794  000966  6F88               	movwf	(escolheTempo@tempo+2)& (0+255),b
  2795  000968  0E00               	movlw	0
  2796  00096A  6F89               	movwf	(escolheTempo@tempo+3)& (0+255),b
  2797  00096C                     
  2798                           ; BSR set to: 1
  2799  00096C  C186  F001         	movff	escolheTempo@tempo,___flge@ff1
  2800  000970  C187  F002         	movff	escolheTempo@tempo+1,___flge@ff1+1
  2801  000974  C188  F003         	movff	escolheTempo@tempo+2,___flge@ff1+2
  2802  000978  C189  F004         	movff	escolheTempo@tempo+3,___flge@ff1+3
  2803  00097C  0E00               	movlw	0
  2804  00097E  6E05               	movwf	___flge@ff2^0,c
  2805  000980  0E00               	movlw	0
  2806  000982  6E06               	movwf	(___flge@ff2+1)^0,c
  2807  000984  0E40               	movlw	64
  2808  000986  6E07               	movwf	(___flge@ff2+2)^0,c
  2809  000988  0E40               	movlw	64
  2810  00098A  6E08               	movwf	(___flge@ff2+3)^0,c
  2811  00098C  ECD8  F014         	call	___flge	;wreg free
  2812  000990  A0D8               	btfss	status,0,c
  2813  000992  EFCD  F004         	goto	u4011
  2814  000996  EFCF  F004         	goto	u4010
  2815  00099A                     u4011:
  2816  00099A  EFD1  F004         	goto	l3536
  2817  00099E                     u4010:
  2818  00099E  EF04  F005         	goto	l3538
  2819  0009A2                     l3536:
  2820  0009A2  C186  F001         	movff	escolheTempo@tempo,___fladd@b
  2821  0009A6  C187  F002         	movff	escolheTempo@tempo+1,___fladd@b+1
  2822  0009AA  C188  F003         	movff	escolheTempo@tempo+2,___fladd@b+2
  2823  0009AE  C189  F004         	movff	escolheTempo@tempo+3,___fladd@b+3
  2824  0009B2  0E00               	movlw	0
  2825  0009B4  6E05               	movwf	___fladd@a^0,c
  2826  0009B6  0E00               	movlw	0
  2827  0009B8  6E06               	movwf	(___fladd@a+1)^0,c
  2828  0009BA  0E80               	movlw	128
  2829  0009BC  6E07               	movwf	(___fladd@a+2)^0,c
  2830  0009BE  0E3F               	movlw	63
  2831  0009C0  6E08               	movwf	(___fladd@a+3)^0,c
  2832  0009C2  ECB6  F00B         	call	___fladd	;wreg free
  2833  0009C6  C001  F186         	movff	?___fladd,escolheTempo@tempo
  2834  0009CA  C002  F187         	movff	?___fladd+1,escolheTempo@tempo+1
  2835  0009CE  C003  F188         	movff	?___fladd+2,escolheTempo@tempo+2
  2836  0009D2  C004  F189         	movff	?___fladd+3,escolheTempo@tempo+3
  2837  0009D6  C186  F001         	movff	escolheTempo@tempo,___flge@ff1
  2838  0009DA  C187  F002         	movff	escolheTempo@tempo+1,___flge@ff1+1
  2839  0009DE  C188  F003         	movff	escolheTempo@tempo+2,___flge@ff1+2
  2840  0009E2  C189  F004         	movff	escolheTempo@tempo+3,___flge@ff1+3
  2841  0009E6  0E00               	movlw	0
  2842  0009E8  6E05               	movwf	___flge@ff2^0,c
  2843  0009EA  0E00               	movlw	0
  2844  0009EC  6E06               	movwf	(___flge@ff2+1)^0,c
  2845  0009EE  0E40               	movlw	64
  2846  0009F0  6E07               	movwf	(___flge@ff2+2)^0,c
  2847  0009F2  0E40               	movlw	64
  2848  0009F4  6E08               	movwf	(___flge@ff2+3)^0,c
  2849  0009F6  ECD8  F014         	call	___flge	;wreg free
  2850  0009FA  A0D8               	btfss	status,0,c
  2851  0009FC  EF02  F005         	goto	u4021
  2852  000A00  EF04  F005         	goto	u4020
  2853  000A04                     u4021:
  2854  000A04  EFD1  F004         	goto	l3536
  2855  000A08                     u4020:
  2856  000A08                     l3538:
  2857                           
  2858                           ;newmain2.c: 224:         kpInit();
  2859  000A08  EC55  F019         	call	_kpInit	;wreg free
  2860  000A0C                     
  2861                           ;newmain2.c: 225:         kpDebounce();
  2862  000A0C  EC40  F012         	call	_kpDebounce	;wreg free
  2863  000A10                     
  2864                           ;newmain2.c: 227:         if (kpRead() != tecla) {
  2865  000A10  EC50  F019         	call	_kpRead	;wreg free
  2866  000A14  0101               	movlb	1	; () banked
  2867  000A16  518A               	movf	escolheTempo@tecla& (0+255),w,b
  2868  000A18  1801               	xorwf	?_kpRead^0,w,c
  2869  000A1A  E109               	bnz	u4030
  2870  000A1C  518B               	movf	(escolheTempo@tecla+1)& (0+255),w,b
  2871  000A1E  1802               	xorwf	(?_kpRead+1)^0,w,c
  2872  000A20  B4D8               	btfsc	status,2,c
  2873  000A22  EF15  F005         	goto	u4031
  2874  000A26  EF17  F005         	goto	u4030
  2875  000A2A                     u4031:
  2876  000A2A  EFEF  F005         	goto	l3598
  2877  000A2E                     u4030:
  2878  000A2E                     
  2879                           ; BSR set to: 1
  2880                           ;newmain2.c: 228:             tecla = kpRead();
  2881  000A2E  EC50  F019         	call	_kpRead	;wreg free
  2882  000A32  C001  F18A         	movff	?_kpRead,escolheTempo@tecla
  2883  000A36  C002  F18B         	movff	?_kpRead+1,escolheTempo@tecla+1
  2884  000A3A                     
  2885                           ;newmain2.c: 230:             if (((tecla) & (1<<(2)))&& (flag == 0)) {
  2886  000A3A  0101               	movlb	1	; () banked
  2887  000A3C  A58A               	btfss	escolheTempo@tecla& (0+255),2,b
  2888  000A3E  EF23  F005         	goto	u4041
  2889  000A42  EF25  F005         	goto	u4040
  2890  000A46                     u4041:
  2891  000A46  EF3A  F005         	goto	l3552
  2892  000A4A                     u4040:
  2893  000A4A                     
  2894                           ; BSR set to: 1
  2895  000A4A  5184               	movf	escolheTempo@flag& (0+255),w,b
  2896  000A4C  1185               	iorwf	(escolheTempo@flag+1)& (0+255),w,b
  2897  000A4E  A4D8               	btfss	status,2,c
  2898  000A50  EF2C  F005         	goto	u4051
  2899  000A54  EF2E  F005         	goto	u4050
  2900  000A58                     u4051:
  2901  000A58  EF3A  F005         	goto	l3552
  2902  000A5C                     u4050:
  2903  000A5C                     
  2904                           ; BSR set to: 1
  2905                           ;newmain2.c: 231:                 cont = cont + 6000;
  2906  000A5C  0E70               	movlw	112
  2907  000A5E  258C               	addwf	escolheTempo@cont& (0+255),w,b
  2908  000A60  6F8C               	movwf	escolheTempo@cont& (0+255),b
  2909  000A62  0E17               	movlw	23
  2910  000A64  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  2911  000A66  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  2912  000A68  0E00               	movlw	0
  2913  000A6A  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  2914  000A6C  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  2915  000A6E  0E00               	movlw	0
  2916  000A70  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  2917  000A72  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  2918  000A74                     l3552:
  2919                           
  2920                           ; BSR set to: 1
  2921                           ;newmain2.c: 234:             if (((tecla) & (1<<(6)))&& (flag == 0)) {
  2922  000A74  AD8A               	btfss	escolheTempo@tecla& (0+255),6,b
  2923  000A76  EF3F  F005         	goto	u4061
  2924  000A7A  EF41  F005         	goto	u4060
  2925  000A7E                     u4061:
  2926  000A7E  EF56  F005         	goto	l3558
  2927  000A82                     u4060:
  2928  000A82                     
  2929                           ; BSR set to: 1
  2930  000A82  5184               	movf	escolheTempo@flag& (0+255),w,b
  2931  000A84  1185               	iorwf	(escolheTempo@flag+1)& (0+255),w,b
  2932  000A86  A4D8               	btfss	status,2,c
  2933  000A88  EF48  F005         	goto	u4071
  2934  000A8C  EF4A  F005         	goto	u4070
  2935  000A90                     u4071:
  2936  000A90  EF56  F005         	goto	l3558
  2937  000A94                     u4070:
  2938  000A94                     
  2939                           ; BSR set to: 1
  2940                           ;newmain2.c: 235:                 cont = cont - 6000;
  2941  000A94  0E90               	movlw	144
  2942  000A96  258C               	addwf	escolheTempo@cont& (0+255),w,b
  2943  000A98  6F8C               	movwf	escolheTempo@cont& (0+255),b
  2944  000A9A  0EE8               	movlw	232
  2945  000A9C  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  2946  000A9E  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  2947  000AA0  0EFF               	movlw	255
  2948  000AA2  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  2949  000AA4  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  2950  000AA6  0EFF               	movlw	255
  2951  000AA8  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  2952  000AAA  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  2953  000AAC                     l3558:
  2954                           
  2955                           ; BSR set to: 1
  2956                           ;newmain2.c: 238:             if (((tecla) & (1<<(1)))&& (flag == 0)) {
  2957  000AAC  A38A               	btfss	escolheTempo@tecla& (0+255),1,b
  2958  000AAE  EF5B  F005         	goto	u4081
  2959  000AB2  EF5D  F005         	goto	u4080
  2960  000AB6                     u4081:
  2961  000AB6  EF72  F005         	goto	l3564
  2962  000ABA                     u4080:
  2963  000ABA                     
  2964                           ; BSR set to: 1
  2965  000ABA  5184               	movf	escolheTempo@flag& (0+255),w,b
  2966  000ABC  1185               	iorwf	(escolheTempo@flag+1)& (0+255),w,b
  2967  000ABE  A4D8               	btfss	status,2,c
  2968  000AC0  EF64  F005         	goto	u4091
  2969  000AC4  EF66  F005         	goto	u4090
  2970  000AC8                     u4091:
  2971  000AC8  EF72  F005         	goto	l3564
  2972  000ACC                     u4090:
  2973  000ACC                     
  2974                           ; BSR set to: 1
  2975                           ;newmain2.c: 239:                 cont = cont + 100;
  2976  000ACC  0E64               	movlw	100
  2977  000ACE  258C               	addwf	escolheTempo@cont& (0+255),w,b
  2978  000AD0  6F8C               	movwf	escolheTempo@cont& (0+255),b
  2979  000AD2  0E00               	movlw	0
  2980  000AD4  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  2981  000AD6  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  2982  000AD8  0E00               	movlw	0
  2983  000ADA  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  2984  000ADC  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  2985  000ADE  0E00               	movlw	0
  2986  000AE0  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  2987  000AE2  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  2988  000AE4                     l3564:
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;newmain2.c: 242:             if (((tecla) & (1<<(5)))&& (flag == 0)) {
  2992  000AE4  AB8A               	btfss	escolheTempo@tecla& (0+255),5,b
  2993  000AE6  EF77  F005         	goto	u4101
  2994  000AEA  EF79  F005         	goto	u4100
  2995  000AEE                     u4101:
  2996  000AEE  EF8E  F005         	goto	l3570
  2997  000AF2                     u4100:
  2998  000AF2                     
  2999                           ; BSR set to: 1
  3000  000AF2  5184               	movf	escolheTempo@flag& (0+255),w,b
  3001  000AF4  1185               	iorwf	(escolheTempo@flag+1)& (0+255),w,b
  3002  000AF6  A4D8               	btfss	status,2,c
  3003  000AF8  EF80  F005         	goto	u4111
  3004  000AFC  EF82  F005         	goto	u4110
  3005  000B00                     u4111:
  3006  000B00  EF8E  F005         	goto	l3570
  3007  000B04                     u4110:
  3008  000B04                     
  3009                           ; BSR set to: 1
  3010                           ;newmain2.c: 243:                 cont = cont - 100;
  3011  000B04  0E9C               	movlw	156
  3012  000B06  258C               	addwf	escolheTempo@cont& (0+255),w,b
  3013  000B08  6F8C               	movwf	escolheTempo@cont& (0+255),b
  3014  000B0A  0EFF               	movlw	255
  3015  000B0C  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  3016  000B0E  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  3017  000B10  0EFF               	movlw	255
  3018  000B12  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  3019  000B14  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  3020  000B16  0EFF               	movlw	255
  3021  000B18  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  3022  000B1A  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  3023  000B1C                     l3570:
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;newmain2.c: 246:             if (((tecla) & (1<<(0)))&& (flag == 0)) {
  3027  000B1C  A18A               	btfss	escolheTempo@tecla& (0+255),0,b
  3028  000B1E  EF93  F005         	goto	u4121
  3029  000B22  EF95  F005         	goto	u4120
  3030  000B26                     u4121:
  3031  000B26  EFEF  F005         	goto	l3598
  3032  000B2A                     u4120:
  3033  000B2A                     
  3034                           ; BSR set to: 1
  3035  000B2A  5184               	movf	escolheTempo@flag& (0+255),w,b
  3036  000B2C  1185               	iorwf	(escolheTempo@flag+1)& (0+255),w,b
  3037  000B2E  A4D8               	btfss	status,2,c
  3038  000B30  EF9C  F005         	goto	u4131
  3039  000B34  EF9E  F005         	goto	u4130
  3040  000B38                     u4131:
  3041  000B38  EFEF  F005         	goto	l3598
  3042  000B3C                     u4130:
  3043  000B3C                     
  3044                           ; BSR set to: 1
  3045                           ;newmain2.c: 247:                 aux = 1;
  3046  000B3C  0E00               	movlw	0
  3047  000B3E  6F83               	movwf	(escolheTempo@aux+1)& (0+255),b
  3048  000B40  0E01               	movlw	1
  3049  000B42  6F82               	movwf	escolheTempo@aux& (0+255),b
  3050  000B44                     
  3051                           ; BSR set to: 1
  3052                           ;newmain2.c: 248:                 lcdCommand(0x01);
  3053  000B44  0E01               	movlw	1
  3054  000B46  EC69  F016         	call	_lcdCommand
  3055  000B4A                     
  3056                           ;newmain2.c: 249:                 unsigned char foguinho[64] = {
  3057  000B4A  EE23  F000         	lfsr	2,escolheTempo@F2970
  3058  000B4E  EE11  F000         	lfsr	1,escolheTempo@foguinho
  3059  000B52  0E3F               	movlw	63
  3060  000B54                     u4141:
  3061  000B54  CFDB FFE3          	movff	plusw2,plusw1
  3062  000B58  06E8               	decf	wreg,f,c
  3063  000B5A  E2FC               	bc	u4141
  3064  000B5C                     
  3065                           ;newmain2.c: 259:                 lcdCommand(0x01);
  3066  000B5C  0E01               	movlw	1
  3067  000B5E  EC69  F016         	call	_lcdCommand
  3068  000B62                     
  3069                           ;newmain2.c: 260:                 lcdCommand(0x40);
  3070  000B62  0E40               	movlw	64
  3071  000B64  EC69  F016         	call	_lcdCommand
  3072  000B68                     
  3073                           ;newmain2.c: 261:                 for (i = 0; i <= 64; i++) {
  3074  000B68  0E00               	movlw	0
  3075  000B6A  0101               	movlb	1	; () banked
  3076  000B6C  6F91               	movwf	(escolheTempo@i+1)& (0+255),b
  3077  000B6E  0E00               	movlw	0
  3078  000B70  6F90               	movwf	escolheTempo@i& (0+255),b
  3079  000B72                     l3590:
  3080                           
  3081                           ; BSR set to: 1
  3082                           ;newmain2.c: 262:                     lcdData(foguinho[i]);
  3083  000B72  0E00               	movlw	low escolheTempo@foguinho
  3084  000B74  2590               	addwf	escolheTempo@i& (0+255),w,b
  3085  000B76  6ED9               	movwf	fsr2l,c
  3086  000B78  0E01               	movlw	high escolheTempo@foguinho
  3087  000B7A  2191               	addwfc	(escolheTempo@i+1)& (0+255),w,b
  3088  000B7C  6EDA               	movwf	fsr2h,c
  3089  000B7E  50DF               	movf	indf2,w,c
  3090  000B80  ECDC  F018         	call	_lcdData
  3091  000B84                     
  3092                           ;newmain2.c: 263:                 }
  3093  000B84  0101               	movlb	1	; () banked
  3094  000B86  4B90               	infsnz	escolheTempo@i& (0+255),f,b
  3095  000B88  2B91               	incf	(escolheTempo@i+1)& (0+255),f,b
  3096  000B8A                     
  3097                           ; BSR set to: 1
  3098  000B8A  BF91               	btfsc	(escolheTempo@i+1)& (0+255),7,b
  3099  000B8C  EFD1  F005         	goto	u4151
  3100  000B90  5191               	movf	(escolheTempo@i+1)& (0+255),w,b
  3101  000B92  E109               	bnz	u4150
  3102  000B94  0E41               	movlw	65
  3103  000B96  5D90               	subwf	escolheTempo@i& (0+255),w,b
  3104  000B98  A0D8               	btfss	status,0,c
  3105  000B9A  EFD1  F005         	goto	u4151
  3106  000B9E  EFD3  F005         	goto	u4150
  3107  000BA2                     u4151:
  3108  000BA2  EFB9  F005         	goto	l3590
  3109  000BA6                     u4150:
  3110  000BA6                     
  3111                           ; BSR set to: 1
  3112                           ;newmain2.c: 264:                 lcdPosition(1, 6);
  3113  000BA6  0E06               	movlw	6
  3114  000BA8  6E09               	movwf	lcdPosition@coluna^0,c
  3115  000BAA  0E01               	movlw	1
  3116  000BAC  EC93  F017         	call	_lcdPosition
  3117                           
  3118                           ;newmain2.c: 265:                 lcdData(0);
  3119  000BB0  0E00               	movlw	0
  3120  000BB2  ECDC  F018         	call	_lcdData
  3121                           
  3122                           ;newmain2.c: 266:                 lcdData(1);
  3123  000BB6  0E01               	movlw	1
  3124  000BB8  ECDC  F018         	call	_lcdData
  3125                           
  3126                           ;newmain2.c: 267:                 lcdData(2);
  3127  000BBC  0E02               	movlw	2
  3128  000BBE  ECDC  F018         	call	_lcdData
  3129                           
  3130                           ;newmain2.c: 268:                 lcdPosition(2, 6);
  3131  000BC2  0E06               	movlw	6
  3132  000BC4  6E09               	movwf	lcdPosition@coluna^0,c
  3133  000BC6  0E02               	movlw	2
  3134  000BC8  EC93  F017         	call	_lcdPosition
  3135                           
  3136                           ;newmain2.c: 269:                 lcdData(3);
  3137  000BCC  0E03               	movlw	3
  3138  000BCE  ECDC  F018         	call	_lcdData
  3139                           
  3140                           ;newmain2.c: 270:                 lcdData(4);
  3141  000BD2  0E04               	movlw	4
  3142  000BD4  ECDC  F018         	call	_lcdData
  3143                           
  3144                           ;newmain2.c: 271:                 lcdData(5);
  3145  000BD8  0E05               	movlw	5
  3146  000BDA  ECDC  F018         	call	_lcdData
  3147  000BDE                     l3598:
  3148                           
  3149                           ;newmain2.c: 274:         flag = 0;
  3150  000BDE  0E00               	movlw	0
  3151  000BE0  0101               	movlb	1	; () banked
  3152  000BE2  6F85               	movwf	(escolheTempo@flag+1)& (0+255),b
  3153  000BE4  0E00               	movlw	0
  3154  000BE6  6F84               	movwf	escolheTempo@flag& (0+255),b
  3155  000BE8                     l3600:
  3156                           
  3157                           ; BSR set to: 1
  3158                           ;newmain2.c: 215:     while (aux != 1) {
  3159  000BE8  0582               	decf	escolheTempo@aux& (0+255),w,b
  3160  000BEA  1183               	iorwf	(escolheTempo@aux+1)& (0+255),w,b
  3161  000BEC  A4D8               	btfss	status,2,c
  3162  000BEE  EFFB  F005         	goto	u4161
  3163  000BF2  EFFD  F005         	goto	u4160
  3164  000BF6                     u4161:
  3165  000BF6  EF07  F004         	goto	l3526
  3166  000BFA                     u4160:
  3167  000BFA  EF72  F007         	goto	l352
  3168  000BFE                     l3602:
  3169                           
  3170                           ; BSR set to: 1
  3171                           ;newmain2.c: 280:         pwmSet1(32);
  3172  000BFE  0E20               	movlw	32
  3173  000C00  EC5D  F017         	call	_pwmSet1
  3174  000C04                     
  3175                           ;newmain2.c: 281:         pwmFrequency(10000);
  3176  000C04  0E27               	movlw	39
  3177  000C06  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  3178  000C08  0E10               	movlw	16
  3179  000C0A  6E0F               	movwf	pwmFrequency@freq^0,c
  3180  000C0C  EC19  F019         	call	_pwmFrequency	;wreg free
  3181  000C10                     
  3182                           ;newmain2.c: 284:         kpDebounce();
  3183  000C10  EC40  F012         	call	_kpDebounce	;wreg free
  3184  000C14                     
  3185                           ;newmain2.c: 285:         cont--;
  3186  000C14  0EFF               	movlw	255
  3187  000C16  0101               	movlb	1	; () banked
  3188  000C18  278C               	addwf	escolheTempo@cont& (0+255),f,b
  3189  000C1A  0EFF               	movlw	255
  3190  000C1C  238D               	addwfc	(escolheTempo@cont+1)& (0+255),f,b
  3191  000C1E  0EFF               	movlw	255
  3192  000C20  238E               	addwfc	(escolheTempo@cont+2)& (0+255),f,b
  3193  000C22  0EFF               	movlw	255
  3194  000C24  238F               	addwfc	(escolheTempo@cont+3)& (0+255),f,b
  3195  000C26                     
  3196                           ; BSR set to: 1
  3197                           ;newmain2.c: 286:         ssdDigit(((cont / 60000) % 6), 0);
  3198  000C26  0E00               	movlw	0
  3199  000C28  6E19               	movwf	ssdDigit@pos^0,c
  3200  000C2A  0E60               	movlw	96
  3201  000C2C  6E05               	movwf	___aldiv@divisor^0,c
  3202  000C2E  0EEA               	movlw	234
  3203  000C30  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3204  000C32  0E00               	movlw	0
  3205  000C34  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3206  000C36  0E00               	movlw	0
  3207  000C38  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3208  000C3A  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  3209  000C3E  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  3210  000C42  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  3211  000C46  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  3212  000C4A  EC52  F014         	call	___aldiv	;wreg free
  3213  000C4E  C001  F00F         	movff	?___aldiv,___almod@dividend
  3214  000C52  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  3215  000C56  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  3216  000C5A  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  3217  000C5E  0E06               	movlw	6
  3218  000C60  6E13               	movwf	___almod@divisor^0,c
  3219  000C62  0E00               	movlw	0
  3220  000C64  6E14               	movwf	(___almod@divisor+1)^0,c
  3221  000C66  0E00               	movlw	0
  3222  000C68  6E15               	movwf	(___almod@divisor+2)^0,c
  3223  000C6A  0E00               	movlw	0
  3224  000C6C  6E16               	movwf	(___almod@divisor+3)^0,c
  3225  000C6E  EC5A  F015         	call	___almod	;wreg free
  3226  000C72  500F               	movf	?___almod^0,w,c
  3227  000C74  EC85  F018         	call	_ssdDigit
  3228  000C78                     
  3229                           ;newmain2.c: 287:         ssdDigit(((cont / 6000) % 10), 1);
  3230  000C78  0E01               	movlw	1
  3231  000C7A  6E19               	movwf	ssdDigit@pos^0,c
  3232  000C7C  0E70               	movlw	112
  3233  000C7E  6E05               	movwf	___aldiv@divisor^0,c
  3234  000C80  0E17               	movlw	23
  3235  000C82  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3236  000C84  0E00               	movlw	0
  3237  000C86  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3238  000C88  0E00               	movlw	0
  3239  000C8A  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3240  000C8C  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  3241  000C90  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  3242  000C94  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  3243  000C98  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  3244  000C9C  EC52  F014         	call	___aldiv	;wreg free
  3245  000CA0  C001  F00F         	movff	?___aldiv,___almod@dividend
  3246  000CA4  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  3247  000CA8  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  3248  000CAC  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  3249  000CB0  0E0A               	movlw	10
  3250  000CB2  6E13               	movwf	___almod@divisor^0,c
  3251  000CB4  0E00               	movlw	0
  3252  000CB6  6E14               	movwf	(___almod@divisor+1)^0,c
  3253  000CB8  0E00               	movlw	0
  3254  000CBA  6E15               	movwf	(___almod@divisor+2)^0,c
  3255  000CBC  0E00               	movlw	0
  3256  000CBE  6E16               	movwf	(___almod@divisor+3)^0,c
  3257  000CC0  EC5A  F015         	call	___almod	;wreg free
  3258  000CC4  500F               	movf	?___almod^0,w,c
  3259  000CC6  EC85  F018         	call	_ssdDigit
  3260  000CCA                     
  3261                           ;newmain2.c: 288:         ssdDigit(((cont / 1000) % 6), 2);
  3262  000CCA  0E02               	movlw	2
  3263  000CCC  6E19               	movwf	ssdDigit@pos^0,c
  3264  000CCE  0EE8               	movlw	232
  3265  000CD0  6E05               	movwf	___aldiv@divisor^0,c
  3266  000CD2  0E03               	movlw	3
  3267  000CD4  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3268  000CD6  0E00               	movlw	0
  3269  000CD8  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3270  000CDA  0E00               	movlw	0
  3271  000CDC  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3272  000CDE  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  3273  000CE2  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  3274  000CE6  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  3275  000CEA  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  3276  000CEE  EC52  F014         	call	___aldiv	;wreg free
  3277  000CF2  C001  F00F         	movff	?___aldiv,___almod@dividend
  3278  000CF6  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  3279  000CFA  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  3280  000CFE  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  3281  000D02  0E06               	movlw	6
  3282  000D04  6E13               	movwf	___almod@divisor^0,c
  3283  000D06  0E00               	movlw	0
  3284  000D08  6E14               	movwf	(___almod@divisor+1)^0,c
  3285  000D0A  0E00               	movlw	0
  3286  000D0C  6E15               	movwf	(___almod@divisor+2)^0,c
  3287  000D0E  0E00               	movlw	0
  3288  000D10  6E16               	movwf	(___almod@divisor+3)^0,c
  3289  000D12  EC5A  F015         	call	___almod	;wreg free
  3290  000D16  500F               	movf	?___almod^0,w,c
  3291  000D18  EC85  F018         	call	_ssdDigit
  3292  000D1C                     
  3293                           ;newmain2.c: 289:         ssdDigit(((cont / 100) % 10), 3);
  3294  000D1C  0E03               	movlw	3
  3295  000D1E  6E19               	movwf	ssdDigit@pos^0,c
  3296  000D20  0E64               	movlw	100
  3297  000D22  6E05               	movwf	___aldiv@divisor^0,c
  3298  000D24  0E00               	movlw	0
  3299  000D26  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3300  000D28  0E00               	movlw	0
  3301  000D2A  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3302  000D2C  0E00               	movlw	0
  3303  000D2E  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3304  000D30  C18C  F001         	movff	escolheTempo@cont,___aldiv@dividend
  3305  000D34  C18D  F002         	movff	escolheTempo@cont+1,___aldiv@dividend+1
  3306  000D38  C18E  F003         	movff	escolheTempo@cont+2,___aldiv@dividend+2
  3307  000D3C  C18F  F004         	movff	escolheTempo@cont+3,___aldiv@dividend+3
  3308  000D40  EC52  F014         	call	___aldiv	;wreg free
  3309  000D44  C001  F00F         	movff	?___aldiv,___almod@dividend
  3310  000D48  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  3311  000D4C  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  3312  000D50  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  3313  000D54  0E0A               	movlw	10
  3314  000D56  6E13               	movwf	___almod@divisor^0,c
  3315  000D58  0E00               	movlw	0
  3316  000D5A  6E14               	movwf	(___almod@divisor+1)^0,c
  3317  000D5C  0E00               	movlw	0
  3318  000D5E  6E15               	movwf	(___almod@divisor+2)^0,c
  3319  000D60  0E00               	movlw	0
  3320  000D62  6E16               	movwf	(___almod@divisor+3)^0,c
  3321  000D64  EC5A  F015         	call	___almod	;wreg free
  3322  000D68  500F               	movf	?___almod^0,w,c
  3323  000D6A  EC85  F018         	call	_ssdDigit
  3324  000D6E                     
  3325                           ;newmain2.c: 290:         ssdUpdate();
  3326  000D6E  ECAA  F013         	call	_ssdUpdate	;wreg free
  3327  000D72                     
  3328                           ;newmain2.c: 291:         for (tempo = 0; tempo < 15; tempo++);
  3329  000D72  0E00               	movlw	0
  3330  000D74  0101               	movlb	1	; () banked
  3331  000D76  6F86               	movwf	escolheTempo@tempo& (0+255),b
  3332  000D78  0E00               	movlw	0
  3333  000D7A  6F87               	movwf	(escolheTempo@tempo+1)& (0+255),b
  3334  000D7C  0E00               	movlw	0
  3335  000D7E  6F88               	movwf	(escolheTempo@tempo+2)& (0+255),b
  3336  000D80  0E00               	movlw	0
  3337  000D82  6F89               	movwf	(escolheTempo@tempo+3)& (0+255),b
  3338  000D84                     
  3339                           ; BSR set to: 1
  3340  000D84  C186  F001         	movff	escolheTempo@tempo,___flge@ff1
  3341  000D88  C187  F002         	movff	escolheTempo@tempo+1,___flge@ff1+1
  3342  000D8C  C188  F003         	movff	escolheTempo@tempo+2,___flge@ff1+2
  3343  000D90  C189  F004         	movff	escolheTempo@tempo+3,___flge@ff1+3
  3344  000D94  0E00               	movlw	0
  3345  000D96  6E05               	movwf	___flge@ff2^0,c
  3346  000D98  0E00               	movlw	0
  3347  000D9A  6E06               	movwf	(___flge@ff2+1)^0,c
  3348  000D9C  0E70               	movlw	112
  3349  000D9E  6E07               	movwf	(___flge@ff2+2)^0,c
  3350  000DA0  0E41               	movlw	65
  3351  000DA2  6E08               	movwf	(___flge@ff2+3)^0,c
  3352  000DA4  ECD8  F014         	call	___flge	;wreg free
  3353  000DA8  A0D8               	btfss	status,0,c
  3354  000DAA  EFD9  F006         	goto	u4171
  3355  000DAE  EFDB  F006         	goto	u4170
  3356  000DB2                     u4171:
  3357  000DB2  EFDD  F006         	goto	l3626
  3358  000DB6                     u4170:
  3359  000DB6  EF10  F007         	goto	l3628
  3360  000DBA                     l3626:
  3361  000DBA  C186  F001         	movff	escolheTempo@tempo,___fladd@b
  3362  000DBE  C187  F002         	movff	escolheTempo@tempo+1,___fladd@b+1
  3363  000DC2  C188  F003         	movff	escolheTempo@tempo+2,___fladd@b+2
  3364  000DC6  C189  F004         	movff	escolheTempo@tempo+3,___fladd@b+3
  3365  000DCA  0E00               	movlw	0
  3366  000DCC  6E05               	movwf	___fladd@a^0,c
  3367  000DCE  0E00               	movlw	0
  3368  000DD0  6E06               	movwf	(___fladd@a+1)^0,c
  3369  000DD2  0E80               	movlw	128
  3370  000DD4  6E07               	movwf	(___fladd@a+2)^0,c
  3371  000DD6  0E3F               	movlw	63
  3372  000DD8  6E08               	movwf	(___fladd@a+3)^0,c
  3373  000DDA  ECB6  F00B         	call	___fladd	;wreg free
  3374  000DDE  C001  F186         	movff	?___fladd,escolheTempo@tempo
  3375  000DE2  C002  F187         	movff	?___fladd+1,escolheTempo@tempo+1
  3376  000DE6  C003  F188         	movff	?___fladd+2,escolheTempo@tempo+2
  3377  000DEA  C004  F189         	movff	?___fladd+3,escolheTempo@tempo+3
  3378  000DEE  C186  F001         	movff	escolheTempo@tempo,___flge@ff1
  3379  000DF2  C187  F002         	movff	escolheTempo@tempo+1,___flge@ff1+1
  3380  000DF6  C188  F003         	movff	escolheTempo@tempo+2,___flge@ff1+2
  3381  000DFA  C189  F004         	movff	escolheTempo@tempo+3,___flge@ff1+3
  3382  000DFE  0E00               	movlw	0
  3383  000E00  6E05               	movwf	___flge@ff2^0,c
  3384  000E02  0E00               	movlw	0
  3385  000E04  6E06               	movwf	(___flge@ff2+1)^0,c
  3386  000E06  0E70               	movlw	112
  3387  000E08  6E07               	movwf	(___flge@ff2+2)^0,c
  3388  000E0A  0E41               	movlw	65
  3389  000E0C  6E08               	movwf	(___flge@ff2+3)^0,c
  3390  000E0E  ECD8  F014         	call	___flge	;wreg free
  3391  000E12  A0D8               	btfss	status,0,c
  3392  000E14  EF0E  F007         	goto	u4181
  3393  000E18  EF10  F007         	goto	u4180
  3394  000E1C                     u4181:
  3395  000E1C  EFDD  F006         	goto	l3626
  3396  000E20                     u4180:
  3397  000E20                     l3628:
  3398                           
  3399                           ;newmain2.c: 294:         if (kpRead() != tecla) {
  3400  000E20  EC50  F019         	call	_kpRead	;wreg free
  3401  000E24  0101               	movlb	1	; () banked
  3402  000E26  518A               	movf	escolheTempo@tecla& (0+255),w,b
  3403  000E28  1801               	xorwf	?_kpRead^0,w,c
  3404  000E2A  E109               	bnz	u4190
  3405  000E2C  518B               	movf	(escolheTempo@tecla+1)& (0+255),w,b
  3406  000E2E  1802               	xorwf	(?_kpRead+1)^0,w,c
  3407  000E30  B4D8               	btfsc	status,2,c
  3408  000E32  EF1D  F007         	goto	u4191
  3409  000E36  EF1F  F007         	goto	u4190
  3410  000E3A                     u4191:
  3411  000E3A  EF72  F007         	goto	l352
  3412  000E3E                     u4190:
  3413  000E3E                     
  3414                           ; BSR set to: 1
  3415                           ;newmain2.c: 295:             tecla = kpRead();
  3416  000E3E  EC50  F019         	call	_kpRead	;wreg free
  3417  000E42  C001  F18A         	movff	?_kpRead,escolheTempo@tecla
  3418  000E46  C002  F18B         	movff	?_kpRead+1,escolheTempo@tecla+1
  3419  000E4A                     
  3420                           ;newmain2.c: 297:             if (((tecla) & (1<<(2)))) {
  3421  000E4A  0101               	movlb	1	; () banked
  3422  000E4C  A58A               	btfss	escolheTempo@tecla& (0+255),2,b
  3423  000E4E  EF2B  F007         	goto	u4201
  3424  000E52  EF2D  F007         	goto	u4200
  3425  000E56                     u4201:
  3426  000E56  EF39  F007         	goto	l3636
  3427  000E5A                     u4200:
  3428  000E5A                     
  3429                           ; BSR set to: 1
  3430                           ;newmain2.c: 298:                 cont = cont + 6000;
  3431  000E5A  0E70               	movlw	112
  3432  000E5C  258C               	addwf	escolheTempo@cont& (0+255),w,b
  3433  000E5E  6F8C               	movwf	escolheTempo@cont& (0+255),b
  3434  000E60  0E17               	movlw	23
  3435  000E62  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  3436  000E64  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  3437  000E66  0E00               	movlw	0
  3438  000E68  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  3439  000E6A  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  3440  000E6C  0E00               	movlw	0
  3441  000E6E  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  3442  000E70  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  3443  000E72                     l3636:
  3444                           
  3445                           ; BSR set to: 1
  3446                           ;newmain2.c: 300:             if (((tecla) & (1<<(6)))) {
  3447  000E72  AD8A               	btfss	escolheTempo@tecla& (0+255),6,b
  3448  000E74  EF3E  F007         	goto	u4211
  3449  000E78  EF40  F007         	goto	u4210
  3450  000E7C                     u4211:
  3451  000E7C  EF4C  F007         	goto	l3640
  3452  000E80                     u4210:
  3453  000E80                     
  3454                           ; BSR set to: 1
  3455                           ;newmain2.c: 301:                 cont = cont - 6000;
  3456  000E80  0E90               	movlw	144
  3457  000E82  258C               	addwf	escolheTempo@cont& (0+255),w,b
  3458  000E84  6F8C               	movwf	escolheTempo@cont& (0+255),b
  3459  000E86  0EE8               	movlw	232
  3460  000E88  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  3461  000E8A  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  3462  000E8C  0EFF               	movlw	255
  3463  000E8E  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  3464  000E90  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  3465  000E92  0EFF               	movlw	255
  3466  000E94  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  3467  000E96  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  3468  000E98                     l3640:
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;newmain2.c: 303:             if (((tecla) & (1<<(1)))) {
  3472  000E98  A38A               	btfss	escolheTempo@tecla& (0+255),1,b
  3473  000E9A  EF51  F007         	goto	u4221
  3474  000E9E  EF53  F007         	goto	u4220
  3475  000EA2                     u4221:
  3476  000EA2  EF5F  F007         	goto	l3644
  3477  000EA6                     u4220:
  3478  000EA6                     
  3479                           ; BSR set to: 1
  3480                           ;newmain2.c: 304:                 cont = cont + 100;
  3481  000EA6  0E64               	movlw	100
  3482  000EA8  258C               	addwf	escolheTempo@cont& (0+255),w,b
  3483  000EAA  6F8C               	movwf	escolheTempo@cont& (0+255),b
  3484  000EAC  0E00               	movlw	0
  3485  000EAE  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  3486  000EB0  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  3487  000EB2  0E00               	movlw	0
  3488  000EB4  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  3489  000EB6  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  3490  000EB8  0E00               	movlw	0
  3491  000EBA  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  3492  000EBC  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  3493  000EBE                     l3644:
  3494                           
  3495                           ; BSR set to: 1
  3496                           ;newmain2.c: 306:             if (((tecla) & (1<<(5)))) {
  3497  000EBE  AB8A               	btfss	escolheTempo@tecla& (0+255),5,b
  3498  000EC0  EF64  F007         	goto	u4231
  3499  000EC4  EF66  F007         	goto	u4230
  3500  000EC8                     u4231:
  3501  000EC8  EF72  F007         	goto	l352
  3502  000ECC                     u4230:
  3503  000ECC                     
  3504                           ; BSR set to: 1
  3505                           ;newmain2.c: 307:                 cont = cont - 100;
  3506  000ECC  0E9C               	movlw	156
  3507  000ECE  258C               	addwf	escolheTempo@cont& (0+255),w,b
  3508  000ED0  6F8C               	movwf	escolheTempo@cont& (0+255),b
  3509  000ED2  0EFF               	movlw	255
  3510  000ED4  218D               	addwfc	(escolheTempo@cont+1)& (0+255),w,b
  3511  000ED6  6F8D               	movwf	(escolheTempo@cont+1)& (0+255),b
  3512  000ED8  0EFF               	movlw	255
  3513  000EDA  218E               	addwfc	(escolheTempo@cont+2)& (0+255),w,b
  3514  000EDC  6F8E               	movwf	(escolheTempo@cont+2)& (0+255),b
  3515  000EDE  0EFF               	movlw	255
  3516  000EE0  218F               	addwfc	(escolheTempo@cont+3)& (0+255),w,b
  3517  000EE2  6F8F               	movwf	(escolheTempo@cont+3)& (0+255),b
  3518  000EE4                     l352:
  3519                           
  3520                           ; BSR set to: 1
  3521                           ;newmain2.c: 278:     while (cont > 0) {
  3522  000EE4  BF8F               	btfsc	(escolheTempo@cont+3)& (0+255),7,b
  3523  000EE6  EF81  F007         	goto	u4240
  3524  000EEA  518F               	movf	(escolheTempo@cont+3)& (0+255),w,b
  3525  000EEC  118E               	iorwf	(escolheTempo@cont+2)& (0+255),w,b
  3526  000EEE  118D               	iorwf	(escolheTempo@cont+1)& (0+255),w,b
  3527  000EF0  E106               	bnz	u4241
  3528  000EF2  058C               	decf	escolheTempo@cont& (0+255),w,b
  3529  000EF4  B0D8               	btfsc	status,0,c
  3530  000EF6  EF7F  F007         	goto	u4241
  3531  000EFA  EF81  F007         	goto	u4240
  3532  000EFE                     u4241:
  3533  000EFE  EFFF  F005         	goto	l3602
  3534  000F02                     u4240:
  3535  000F02                     
  3536                           ; BSR set to: 1
  3537                           ;newmain2.c: 313:     if (cont == 0) {
  3538  000F02  518C               	movf	escolheTempo@cont& (0+255),w,b
  3539  000F04  118D               	iorwf	(escolheTempo@cont+1)& (0+255),w,b
  3540  000F06  118E               	iorwf	(escolheTempo@cont+2)& (0+255),w,b
  3541  000F08  118F               	iorwf	(escolheTempo@cont+3)& (0+255),w,b
  3542  000F0A  A4D8               	btfss	status,2,c
  3543  000F0C  EF8A  F007         	goto	u4251
  3544  000F10  EF8C  F007         	goto	u4250
  3545  000F14                     u4251:
  3546  000F14  EFC1  F007         	goto	l365
  3547  000F18                     u4250:
  3548  000F18                     
  3549                           ; BSR set to: 1
  3550                           ;newmain2.c: 315:         lcdCommand(0x01);
  3551  000F18  0E01               	movlw	1
  3552  000F1A  EC69  F016         	call	_lcdCommand
  3553  000F1E                     
  3554                           ;newmain2.c: 316:         pwmSet1(0);
  3555  000F1E  0E00               	movlw	0
  3556  000F20  EC5D  F017         	call	_pwmSet1
  3557  000F24                     
  3558                           ;newmain2.c: 317:         pwmFrequency(0);
  3559  000F24  0E00               	movlw	0
  3560  000F26  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  3561  000F28  0E00               	movlw	0
  3562  000F2A  6E0F               	movwf	pwmFrequency@freq^0,c
  3563  000F2C  EC19  F019         	call	_pwmFrequency	;wreg free
  3564  000F30                     
  3565                           ;newmain2.c: 320:         for (i = 0; i < 10; i++) {
  3566  000F30  0E00               	movlw	0
  3567  000F32  0101               	movlb	1	; () banked
  3568  000F34  6F91               	movwf	(escolheTempo@i+1)& (0+255),b
  3569  000F36  0E00               	movlw	0
  3570  000F38  6F90               	movwf	escolheTempo@i& (0+255),b
  3571  000F3A                     l3662:
  3572                           
  3573                           ; BSR set to: 1
  3574                           ;newmain2.c: 321:             ((TRISC) |= (1<<(1)));
  3575  000F3A  8294               	bsf	148,1,c	;volatile
  3576  000F3C                     
  3577                           ; BSR set to: 1
  3578                           ;newmain2.c: 322:             PORTB = i;
  3579  000F3C  C190  FF81         	movff	escolheTempo@i,3969	;volatile
  3580  000F40                     
  3581                           ; BSR set to: 1
  3582                           ;newmain2.c: 323:             PORTD = i;
  3583  000F40  C190  FF83         	movff	escolheTempo@i,3971	;volatile
  3584  000F44                     
  3585                           ; BSR set to: 1
  3586                           ;newmain2.c: 324:             atraso_ms(50);
  3587  000F44  0E00               	movlw	0
  3588  000F46  6E02               	movwf	(atraso_ms@t+1)^0,c
  3589  000F48  0E32               	movlw	50
  3590  000F4A  6E01               	movwf	atraso_ms@t^0,c
  3591  000F4C  ECC8  F017         	call	_atraso_ms	;wreg free
  3592  000F50                     
  3593                           ;newmain2.c: 325:         }
  3594  000F50  0101               	movlb	1	; () banked
  3595  000F52  4B90               	infsnz	escolheTempo@i& (0+255),f,b
  3596  000F54  2B91               	incf	(escolheTempo@i+1)& (0+255),f,b
  3597  000F56                     
  3598                           ; BSR set to: 1
  3599  000F56  BF91               	btfsc	(escolheTempo@i+1)& (0+255),7,b
  3600  000F58  EFB7  F007         	goto	u4261
  3601  000F5C  5191               	movf	(escolheTempo@i+1)& (0+255),w,b
  3602  000F5E  E109               	bnz	u4260
  3603  000F60  0E0A               	movlw	10
  3604  000F62  5D90               	subwf	escolheTempo@i& (0+255),w,b
  3605  000F64  A0D8               	btfss	status,0,c
  3606  000F66  EFB7  F007         	goto	u4261
  3607  000F6A  EFB9  F007         	goto	u4260
  3608  000F6E                     u4261:
  3609  000F6E  EF9D  F007         	goto	l3662
  3610  000F72                     u4260:
  3611  000F72                     
  3612                           ; BSR set to: 1
  3613                           ;newmain2.c: 326:         ((TRISC) &= ~(1<<(1)));
  3614  000F72  9294               	bcf	148,1,c	;volatile
  3615  000F74                     
  3616                           ; BSR set to: 1
  3617                           ;newmain2.c: 329:         PORTB = 0;
  3618  000F74  0E00               	movlw	0
  3619  000F76  6E81               	movwf	129,c	;volatile
  3620  000F78                     
  3621                           ; BSR set to: 1
  3622                           ;newmain2.c: 330:         PORTD = 0;
  3623  000F78  0E00               	movlw	0
  3624  000F7A  6E83               	movwf	131,c	;volatile
  3625  000F7C                     
  3626                           ; BSR set to: 1
  3627                           ;newmain2.c: 331:         lcdCommand(0x01);
  3628  000F7C  0E01               	movlw	1
  3629  000F7E  EC69  F016         	call	_lcdCommand
  3630  000F82                     l365:
  3631  000F82  0012               	return		;funcret
  3632  000F84                     __end_of_escolheTempo:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _ssdUpdate *****************
  3636 ;; Defined at:
  3637 ;;		line 54 in file "ssd.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3651 ;;      Params:         0       0       0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0
  3653 ;;      Temps:          2       0       0       0       0       0       0
  3654 ;;      Totals:         2       0       0       0       0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 1
  3658 ;; This function calls:
  3659 ;;		_digitalWrite
  3660 ;; This function is called by:
  3661 ;;		_escolheTempo
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text2
  3666  002754                     __ptext2:
  3667                           	callstack 0
  3668  002754                     _ssdUpdate:
  3669                           	callstack 28
  3670  002754                     
  3671                           ;ssd.c: 58:     TRISD= 0x00;
  3672  002754  0E00               	movlw	0
  3673  002756  6E95               	movwf	149,c	;volatile
  3674  002758                     
  3675                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  3676  002758  0E00               	movlw	0
  3677  00275A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3678  00275C  0E02               	movlw	2
  3679  00275E  6E01               	movwf	digitalWrite@pin^0,c
  3680  002760  0E00               	movlw	0
  3681  002762  6E04               	movwf	(digitalWrite@value+1)^0,c
  3682  002764  0E00               	movlw	0
  3683  002766  6E03               	movwf	digitalWrite@value^0,c
  3684  002768  EC19  F011         	call	_digitalWrite	;wreg free
  3685  00276C                     
  3686                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  3687  00276C  0E00               	movlw	0
  3688  00276E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3689  002770  0E03               	movlw	3
  3690  002772  6E01               	movwf	digitalWrite@pin^0,c
  3691  002774  0E00               	movlw	0
  3692  002776  6E04               	movwf	(digitalWrite@value+1)^0,c
  3693  002778  0E00               	movlw	0
  3694  00277A  6E03               	movwf	digitalWrite@value^0,c
  3695  00277C  EC19  F011         	call	_digitalWrite	;wreg free
  3696  002780                     
  3697                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  3698  002780  0E00               	movlw	0
  3699  002782  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3700  002784  0E04               	movlw	4
  3701  002786  6E01               	movwf	digitalWrite@pin^0,c
  3702  002788  0E00               	movlw	0
  3703  00278A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3704  00278C  0E00               	movlw	0
  3705  00278E  6E03               	movwf	digitalWrite@value^0,c
  3706  002790  EC19  F011         	call	_digitalWrite	;wreg free
  3707  002794                     
  3708                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  3709  002794  0E00               	movlw	0
  3710  002796  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3711  002798  0E05               	movlw	5
  3712  00279A  6E01               	movwf	digitalWrite@pin^0,c
  3713  00279C  0E00               	movlw	0
  3714  00279E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3715  0027A0  0E00               	movlw	0
  3716  0027A2  6E03               	movwf	digitalWrite@value^0,c
  3717  0027A4  EC19  F011         	call	_digitalWrite	;wreg free
  3718                           
  3719                           ;ssd.c: 66:     PORTD = 0x00;
  3720  0027A8  0E00               	movlw	0
  3721  0027AA  6E83               	movwf	131,c	;volatile
  3722                           
  3723                           ;ssd.c: 69:     switch (display)
  3724  0027AC  EF34  F014         	goto	l2968
  3725  0027B0                     l2940:
  3726                           
  3727                           ;ssd.c: 72:             PORTD = valor[v0];
  3728  0027B0  0E01               	movlw	low _valor@ssd$F178
  3729  0027B2  2478               	addwf	_v0^0,w,c
  3730  0027B4  6EF6               	movwf	tblptrl,c
  3731  0027B6  6AF7               	clrf	tblptrh,c
  3732  0027B8  0E06               	movlw	high _valor@ssd$F178
  3733  0027BA  22F7               	addwfc	tblptrh,f,c
  3734  0027BC                     	if	0	;There are less than 3 active tblptr bytes
  3735  0027BC                     	endif
  3736  0027BC  0008               	tblrd		*
  3737  0027BE  CFF5 FF83          	movff	tablat,3971	;volatile
  3738  0027C2                     
  3739                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  3740  0027C2  0E00               	movlw	0
  3741  0027C4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3742  0027C6  0E02               	movlw	2
  3743  0027C8  6E01               	movwf	digitalWrite@pin^0,c
  3744  0027CA  0E00               	movlw	0
  3745  0027CC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3746  0027CE  0E01               	movlw	1
  3747  0027D0  6E03               	movwf	digitalWrite@value^0,c
  3748  0027D2  EC19  F011         	call	_digitalWrite	;wreg free
  3749  0027D6                     
  3750                           ;ssd.c: 74:             display = 1;
  3751  0027D6  0E01               	movlw	1
  3752  0027D8  6E79               	movwf	_display^0,c
  3753                           
  3754                           ;ssd.c: 75:             break;
  3755  0027DA  EF51  F014         	goto	l197
  3756  0027DE                     l2946:
  3757                           
  3758                           ;ssd.c: 78:             PORTD = valor[v1];
  3759  0027DE  0E01               	movlw	low _valor@ssd$F178
  3760  0027E0  2477               	addwf	_v1^0,w,c
  3761  0027E2  6EF6               	movwf	tblptrl,c
  3762  0027E4  6AF7               	clrf	tblptrh,c
  3763  0027E6  0E06               	movlw	high _valor@ssd$F178
  3764  0027E8  22F7               	addwfc	tblptrh,f,c
  3765  0027EA                     	if	0	;There are less than 3 active tblptr bytes
  3766  0027EA                     	endif
  3767  0027EA  0008               	tblrd		*
  3768  0027EC  CFF5 FF83          	movff	tablat,3971	;volatile
  3769  0027F0                     
  3770                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  3771  0027F0  0E00               	movlw	0
  3772  0027F2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3773  0027F4  0E03               	movlw	3
  3774  0027F6  6E01               	movwf	digitalWrite@pin^0,c
  3775  0027F8  0E00               	movlw	0
  3776  0027FA  6E04               	movwf	(digitalWrite@value+1)^0,c
  3777  0027FC  0E01               	movlw	1
  3778  0027FE  6E03               	movwf	digitalWrite@value^0,c
  3779  002800  EC19  F011         	call	_digitalWrite	;wreg free
  3780  002804                     
  3781                           ;ssd.c: 80:             display = 2;
  3782  002804  0E02               	movlw	2
  3783  002806  6E79               	movwf	_display^0,c
  3784                           
  3785                           ;ssd.c: 81:             break;
  3786  002808  EF51  F014         	goto	l197
  3787  00280C                     l2952:
  3788                           
  3789                           ;ssd.c: 84:             PORTD = valor[v2];
  3790  00280C  0E01               	movlw	low _valor@ssd$F178
  3791  00280E  2476               	addwf	_v2^0,w,c
  3792  002810  6EF6               	movwf	tblptrl,c
  3793  002812  6AF7               	clrf	tblptrh,c
  3794  002814  0E06               	movlw	high _valor@ssd$F178
  3795  002816  22F7               	addwfc	tblptrh,f,c
  3796  002818                     	if	0	;There are less than 3 active tblptr bytes
  3797  002818                     	endif
  3798  002818  0008               	tblrd		*
  3799  00281A  CFF5 FF83          	movff	tablat,3971	;volatile
  3800  00281E                     
  3801                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  3802  00281E  0E00               	movlw	0
  3803  002820  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3804  002822  0E04               	movlw	4
  3805  002824  6E01               	movwf	digitalWrite@pin^0,c
  3806  002826  0E00               	movlw	0
  3807  002828  6E04               	movwf	(digitalWrite@value+1)^0,c
  3808  00282A  0E01               	movlw	1
  3809  00282C  6E03               	movwf	digitalWrite@value^0,c
  3810  00282E  EC19  F011         	call	_digitalWrite	;wreg free
  3811  002832                     
  3812                           ;ssd.c: 86:             display = 3;
  3813  002832  0E03               	movlw	3
  3814  002834  6E79               	movwf	_display^0,c
  3815                           
  3816                           ;ssd.c: 87:             break;
  3817  002836  EF51  F014         	goto	l197
  3818  00283A                     l2958:
  3819                           
  3820                           ;ssd.c: 90:             PORTD = valor[v3];
  3821  00283A  0E01               	movlw	low _valor@ssd$F178
  3822  00283C  2475               	addwf	_v3^0,w,c
  3823  00283E  6EF6               	movwf	tblptrl,c
  3824  002840  6AF7               	clrf	tblptrh,c
  3825  002842  0E06               	movlw	high _valor@ssd$F178
  3826  002844  22F7               	addwfc	tblptrh,f,c
  3827  002846                     	if	0	;There are less than 3 active tblptr bytes
  3828  002846                     	endif
  3829  002846  0008               	tblrd		*
  3830  002848  CFF5 FF83          	movff	tablat,3971	;volatile
  3831  00284C                     
  3832                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  3833  00284C  0E00               	movlw	0
  3834  00284E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3835  002850  0E05               	movlw	5
  3836  002852  6E01               	movwf	digitalWrite@pin^0,c
  3837  002854  0E00               	movlw	0
  3838  002856  6E04               	movwf	(digitalWrite@value+1)^0,c
  3839  002858  0E01               	movlw	1
  3840  00285A  6E03               	movwf	digitalWrite@value^0,c
  3841  00285C  EC19  F011         	call	_digitalWrite	;wreg free
  3842  002860                     l2962:
  3843                           
  3844                           ;ssd.c: 92:             display = 0;
  3845  002860  0E00               	movlw	0
  3846  002862  6E79               	movwf	_display^0,c
  3847                           
  3848                           ;ssd.c: 93:             break;
  3849  002864  EF51  F014         	goto	l197
  3850  002868                     l2968:
  3851  002868  5079               	movf	_display^0,w,c
  3852  00286A  6E07               	movwf	??_ssdUpdate^0,c
  3853  00286C  6A08               	clrf	(??_ssdUpdate+1)^0,c
  3854                           
  3855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3856                           ; Switch size 1, requested type "simple"
  3857                           ; Number of cases is 1, Range of values is 0 to 0
  3858                           ; switch strategies available:
  3859                           ; Name         Instructions Cycles
  3860                           ; simple_byte            4     3 (average)
  3861                           ;	Chosen strategy is simple_byte
  3862  00286E  5008               	movf	(??_ssdUpdate+1)^0,w,c
  3863  002870  0A00               	xorlw	0	; case 0
  3864  002872  B4D8               	btfsc	status,2,c
  3865  002874  EF3E  F014         	goto	l3988
  3866  002878  EF30  F014         	goto	l2962
  3867  00287C                     l3988:
  3868                           
  3869                           ; Switch size 1, requested type "simple"
  3870                           ; Number of cases is 4, Range of values is 0 to 3
  3871                           ; switch strategies available:
  3872                           ; Name         Instructions Cycles
  3873                           ; simple_byte           13     7 (average)
  3874                           ;	Chosen strategy is simple_byte
  3875  00287C  5007               	movf	??_ssdUpdate^0,w,c
  3876  00287E  0A00               	xorlw	0	; case 0
  3877  002880  B4D8               	btfsc	status,2,c
  3878  002882  EFD8  F013         	goto	l2940
  3879  002886  0A01               	xorlw	1	; case 1
  3880  002888  B4D8               	btfsc	status,2,c
  3881  00288A  EFEF  F013         	goto	l2946
  3882  00288E  0A03               	xorlw	3	; case 2
  3883  002890  B4D8               	btfsc	status,2,c
  3884  002892  EF06  F014         	goto	l2952
  3885  002896  0A01               	xorlw	1	; case 3
  3886  002898  B4D8               	btfsc	status,2,c
  3887  00289A  EF1D  F014         	goto	l2958
  3888  00289E  EF30  F014         	goto	l2962
  3889  0028A2                     l197:
  3890  0028A2  0012               	return		;funcret
  3891  0028A4                     __end_of_ssdUpdate:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _ssdInit *****************
  3895 ;; Defined at:
  3896 ;;		line 101 in file "ssd.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3910 ;;      Params:         0       0       0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 1
  3917 ;; This function calls:
  3918 ;;		_pinMode
  3919 ;; This function is called by:
  3920 ;;		_escolheTempo
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text3
  3925  003162                     __ptext3:
  3926                           	callstack 0
  3927  003162                     _ssdInit:
  3928                           	callstack 28
  3929  003162                     
  3930                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  3931  003162  0E00               	movlw	0
  3932  003164  6E02               	movwf	(pinMode@pin+1)^0,c
  3933  003166  0E02               	movlw	2
  3934  003168  6E01               	movwf	pinMode@pin^0,c
  3935  00316A  0E00               	movlw	0
  3936  00316C  6E04               	movwf	(pinMode@type+1)^0,c
  3937  00316E  0E00               	movlw	0
  3938  003170  6E03               	movwf	pinMode@type^0,c
  3939  003172  ECF2  F00F         	call	_pinMode	;wreg free
  3940                           
  3941                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  3942  003176  0E00               	movlw	0
  3943  003178  6E02               	movwf	(pinMode@pin+1)^0,c
  3944  00317A  0E03               	movlw	3
  3945  00317C  6E01               	movwf	pinMode@pin^0,c
  3946  00317E  0E00               	movlw	0
  3947  003180  6E04               	movwf	(pinMode@type+1)^0,c
  3948  003182  0E00               	movlw	0
  3949  003184  6E03               	movwf	pinMode@type^0,c
  3950  003186  ECF2  F00F         	call	_pinMode	;wreg free
  3951                           
  3952                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  3953  00318A  0E00               	movlw	0
  3954  00318C  6E02               	movwf	(pinMode@pin+1)^0,c
  3955  00318E  0E04               	movlw	4
  3956  003190  6E01               	movwf	pinMode@pin^0,c
  3957  003192  0E00               	movlw	0
  3958  003194  6E04               	movwf	(pinMode@type+1)^0,c
  3959  003196  0E00               	movlw	0
  3960  003198  6E03               	movwf	pinMode@type^0,c
  3961  00319A  ECF2  F00F         	call	_pinMode	;wreg free
  3962                           
  3963                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  3964  00319E  0E00               	movlw	0
  3965  0031A0  6E02               	movwf	(pinMode@pin+1)^0,c
  3966  0031A2  0E05               	movlw	5
  3967  0031A4  6E01               	movwf	pinMode@pin^0,c
  3968  0031A6  0E00               	movlw	0
  3969  0031A8  6E04               	movwf	(pinMode@type+1)^0,c
  3970  0031AA  0E00               	movlw	0
  3971  0031AC  6E03               	movwf	pinMode@type^0,c
  3972  0031AE  ECF2  F00F         	call	_pinMode	;wreg free
  3973  0031B2                     
  3974                           ;ssd.c: 109:     TRISD = 0x00;
  3975  0031B2  0E00               	movlw	0
  3976  0031B4  6E95               	movwf	149,c	;volatile
  3977  0031B6  0012               	return		;funcret
  3978  0031B8                     __end_of_ssdInit:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _ssdDigit *****************
  3982 ;; Defined at:
  3983 ;;		line 38 in file "ssd.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  val             1    wreg     unsigned char 
  3986 ;;  pos             1   24[COMRAM] unsigned char 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  val             1   25[COMRAM] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3998 ;;      Params:         1       0       0       0       0       0       0
  3999 ;;      Locals:         1       0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0
  4001 ;;      Totals:         2       0       0       0       0       0       0
  4002 ;;Total ram usage:        2 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_escolheTempo
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text4
  4012  00310A                     __ptext4:
  4013                           	callstack 0
  4014  00310A                     _ssdDigit:
  4015                           	callstack 29
  4016                           
  4017                           ;incstack = 0
  4018                           ;ssdDigit@val stored from wreg
  4019  00310A  6E1A               	movwf	ssdDigit@val^0,c
  4020  00310C                     
  4021                           ;ssd.c: 39:     if (pos == 0) {
  4022  00310C  5019               	movf	ssdDigit@pos^0,w,c
  4023  00310E  A4D8               	btfss	status,2,c
  4024  003110  EF8C  F018         	goto	u3091
  4025  003114  EF8E  F018         	goto	u3090
  4026  003118                     u3091:
  4027  003118  EF90  F018         	goto	l2918
  4028  00311C                     u3090:
  4029  00311C                     
  4030                           ;ssd.c: 40:         v0 = val;
  4031  00311C  C01A  F078         	movff	ssdDigit@val,_v0
  4032  003120                     l2918:
  4033                           
  4034                           ;ssd.c: 42:     if (pos == 1) {
  4035  003120  0419               	decf	ssdDigit@pos^0,w,c
  4036  003122  A4D8               	btfss	status,2,c
  4037  003124  EF96  F018         	goto	u3101
  4038  003128  EF98  F018         	goto	u3100
  4039  00312C                     u3101:
  4040  00312C  EF9A  F018         	goto	l2922
  4041  003130                     u3100:
  4042  003130                     
  4043                           ;ssd.c: 43:         v1 = val;
  4044  003130  C01A  F077         	movff	ssdDigit@val,_v1
  4045  003134                     l2922:
  4046                           
  4047                           ;ssd.c: 45:     if (pos == 2) {
  4048  003134  0E02               	movlw	2
  4049  003136  1819               	xorwf	ssdDigit@pos^0,w,c
  4050  003138  A4D8               	btfss	status,2,c
  4051  00313A  EFA1  F018         	goto	u3111
  4052  00313E  EFA3  F018         	goto	u3110
  4053  003142                     u3111:
  4054  003142  EFA5  F018         	goto	l2926
  4055  003146                     u3110:
  4056  003146                     
  4057                           ;ssd.c: 46:         v2 = val;
  4058  003146  C01A  F076         	movff	ssdDigit@val,_v2
  4059  00314A                     l2926:
  4060                           
  4061                           ;ssd.c: 48:     if (pos == 3) {
  4062  00314A  0E03               	movlw	3
  4063  00314C  1819               	xorwf	ssdDigit@pos^0,w,c
  4064  00314E  A4D8               	btfss	status,2,c
  4065  003150  EFAC  F018         	goto	u3121
  4066  003154  EFAE  F018         	goto	u3120
  4067  003158                     u3121:
  4068  003158  EFB0  F018         	goto	l187
  4069  00315C                     u3120:
  4070  00315C                     
  4071                           ;ssd.c: 49:         v3 = val;
  4072  00315C  C01A  F075         	movff	ssdDigit@val,_v3
  4073  003160                     l187:
  4074  003160  0012               	return		;funcret
  4075  003162                     __end_of_ssdDigit:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _lcdInit *****************
  4079 ;; Defined at:
  4080 ;;		line 96 in file "lcd.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4094 ;;      Params:         0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 3
  4101 ;; This function calls:
  4102 ;;		_Delay2ms
  4103 ;;		_lcdCommand
  4104 ;;		_pinMode
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;;		_escolheTempo
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text5
  4112  002DCE                     __ptext5:
  4113                           	callstack 0
  4114  002DCE                     _lcdInit:
  4115                           	callstack 27
  4116  002DCE                     
  4117                           ;lcd.c: 98:     pinMode(PIN_E2, 0);
  4118  002DCE  0E00               	movlw	0
  4119  002DD0  6E02               	movwf	(pinMode@pin+1)^0,c
  4120  002DD2  0E22               	movlw	34
  4121  002DD4  6E01               	movwf	pinMode@pin^0,c
  4122  002DD6  0E00               	movlw	0
  4123  002DD8  6E04               	movwf	(pinMode@type+1)^0,c
  4124  002DDA  0E00               	movlw	0
  4125  002DDC  6E03               	movwf	pinMode@type^0,c
  4126  002DDE  ECF2  F00F         	call	_pinMode	;wreg free
  4127                           
  4128                           ;lcd.c: 99:     pinMode(PIN_E1, 0);
  4129  002DE2  0E00               	movlw	0
  4130  002DE4  6E02               	movwf	(pinMode@pin+1)^0,c
  4131  002DE6  0E21               	movlw	33
  4132  002DE8  6E01               	movwf	pinMode@pin^0,c
  4133  002DEA  0E00               	movlw	0
  4134  002DEC  6E04               	movwf	(pinMode@type+1)^0,c
  4135  002DEE  0E00               	movlw	0
  4136  002DF0  6E03               	movwf	pinMode@type^0,c
  4137  002DF2  ECF2  F00F         	call	_pinMode	;wreg free
  4138  002DF6                     
  4139                           ;lcd.c: 100:  TRISD = 0x00;
  4140  002DF6  0E00               	movlw	0
  4141  002DF8  6E95               	movwf	149,c	;volatile
  4142  002DFA                     
  4143                           ;lcd.c: 103:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  4144  002DFA  EC2C  F019         	call	_Delay2ms	;wreg free
  4145  002DFE  EC2C  F019         	call	_Delay2ms	;wreg free
  4146  002E02  EC2C  F019         	call	_Delay2ms	;wreg free
  4147  002E06  EC2C  F019         	call	_Delay2ms	;wreg free
  4148  002E0A  EC2C  F019         	call	_Delay2ms	;wreg free
  4149  002E0E                     
  4150                           ;lcd.c: 105:     lcdCommand(0x38);
  4151  002E0E  0E38               	movlw	56
  4152  002E10  EC69  F016         	call	_lcdCommand
  4153  002E14                     
  4154                           ;lcd.c: 106:     Delay2ms(); Delay2ms();
  4155  002E14  EC2C  F019         	call	_Delay2ms	;wreg free
  4156  002E18  EC2C  F019         	call	_Delay2ms	;wreg free
  4157  002E1C                     
  4158                           ;lcd.c: 107:     lcdCommand(0x38);
  4159  002E1C  0E38               	movlw	56
  4160  002E1E  EC69  F016         	call	_lcdCommand
  4161  002E22                     
  4162                           ;lcd.c: 108:     Delay2ms();
  4163  002E22  EC2C  F019         	call	_Delay2ms	;wreg free
  4164  002E26                     
  4165                           ;lcd.c: 109:     lcdCommand(0x38);
  4166  002E26  0E38               	movlw	56
  4167  002E28  EC69  F016         	call	_lcdCommand
  4168  002E2C                     
  4169                           ;lcd.c: 111:     lcdCommand(0x38);
  4170  002E2C  0E38               	movlw	56
  4171  002E2E  EC69  F016         	call	_lcdCommand
  4172  002E32                     
  4173                           ;lcd.c: 112:     lcdCommand(0x06);
  4174  002E32  0E06               	movlw	6
  4175  002E34  EC69  F016         	call	_lcdCommand
  4176  002E38                     
  4177                           ;lcd.c: 115:     lcdCommand(0x0C);
  4178  002E38  0E0C               	movlw	12
  4179  002E3A  EC69  F016         	call	_lcdCommand
  4180  002E3E                     
  4181                           ;lcd.c: 116:     lcdCommand(0x01);
  4182  002E3E  0E01               	movlw	1
  4183  002E40  EC69  F016         	call	_lcdCommand
  4184  002E44  0012               	return		;funcret
  4185  002E46                     __end_of_lcdInit:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _pinMode *****************
  4189 ;; Defined at:
  4190 ;;		line 54 in file "io.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  pin             2    0[COMRAM] int 
  4193 ;;  type            2    2[COMRAM] int 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4205 ;;      Params:         4       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0
  4207 ;;      Temps:          2       0       0       0       0       0       0
  4208 ;;      Totals:         6       0       0       0       0       0       0
  4209 ;;Total ram usage:        6 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_lcdInit
  4215 ;;		_ssdInit
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text6
  4220  001FE4                     __ptext6:
  4221                           	callstack 0
  4222  001FE4                     _pinMode:
  4223                           	callstack 29
  4224  001FE4                     
  4225                           ;io.c: 56:     if(pin <8){
  4226  001FE4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4227  001FE6  EF00  F010         	goto	u2600
  4228  001FEA  5002               	movf	(pinMode@pin+1)^0,w,c
  4229  001FEC  E107               	bnz	u2601
  4230  001FEE  0E08               	movlw	8
  4231  001FF0  5C01               	subwf	pinMode@pin^0,w,c
  4232  001FF2  B0D8               	btfsc	status,0,c
  4233  001FF4  EFFE  F00F         	goto	u2601
  4234  001FF8  EF00  F010         	goto	u2600
  4235  001FFC                     u2601:
  4236  001FFC  EF2A  F010         	goto	l2640
  4237  002000                     u2600:
  4238  002000                     
  4239                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4240  002000  5003               	movf	pinMode@type^0,w,c
  4241  002002  1004               	iorwf	(pinMode@type+1)^0,w,c
  4242  002004  B4D8               	btfsc	status,2,c
  4243  002006  EF07  F010         	goto	u2611
  4244  00200A  EF09  F010         	goto	u2610
  4245  00200E                     u2611:
  4246  00200E  EF19  F010         	goto	l2638
  4247  002012                     u2610:
  4248  002012  C001  F005         	movff	pinMode@pin,??_pinMode
  4249  002016  0E01               	movlw	1
  4250  002018  6E06               	movwf	(??_pinMode+1)^0,c
  4251  00201A  2A05               	incf	??_pinMode^0,f,c
  4252  00201C  EF12  F010         	goto	u2624
  4253  002020                     u2625:
  4254  002020  90D8               	bcf	status,0,c
  4255  002022  3606               	rlcf	(??_pinMode+1)^0,f,c
  4256  002024                     u2624:
  4257  002024  2E05               	decfsz	??_pinMode^0,f,c
  4258  002026  EF10  F010         	goto	u2625
  4259  00202A  5006               	movf	(??_pinMode+1)^0,w,c
  4260  00202C  1292               	iorwf	146,f,c	;volatile
  4261  00202E  EF18  F011         	goto	l76
  4262  002032                     l2638:
  4263  002032  C001  F005         	movff	pinMode@pin,??_pinMode
  4264  002036  0E01               	movlw	1
  4265  002038  6E06               	movwf	(??_pinMode+1)^0,c
  4266  00203A  2A05               	incf	??_pinMode^0,f,c
  4267  00203C  EF22  F010         	goto	u2634
  4268  002040                     u2635:
  4269  002040  90D8               	bcf	status,0,c
  4270  002042  3606               	rlcf	(??_pinMode+1)^0,f,c
  4271  002044                     u2634:
  4272  002044  2E05               	decfsz	??_pinMode^0,f,c
  4273  002046  EF20  F010         	goto	u2635
  4274  00204A  5006               	movf	(??_pinMode+1)^0,w,c
  4275  00204C  0AFF               	xorlw	255
  4276  00204E  1692               	andwf	146,f,c	;volatile
  4277  002050  EF18  F011         	goto	l76
  4278  002054                     l2640:
  4279  002054  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4280  002056  EF38  F010         	goto	u2640
  4281  00205A  5002               	movf	(pinMode@pin+1)^0,w,c
  4282  00205C  E107               	bnz	u2641
  4283  00205E  0E10               	movlw	16
  4284  002060  5C01               	subwf	pinMode@pin^0,w,c
  4285  002062  B0D8               	btfsc	status,0,c
  4286  002064  EF36  F010         	goto	u2641
  4287  002068  EF38  F010         	goto	u2640
  4288  00206C                     u2641:
  4289  00206C  EF66  F010         	goto	l2648
  4290  002070                     u2640:
  4291  002070                     
  4292                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4293  002070  5003               	movf	pinMode@type^0,w,c
  4294  002072  1004               	iorwf	(pinMode@type+1)^0,w,c
  4295  002074  B4D8               	btfsc	status,2,c
  4296  002076  EF3F  F010         	goto	u2651
  4297  00207A  EF41  F010         	goto	u2650
  4298  00207E                     u2651:
  4299  00207E  EF53  F010         	goto	l2646
  4300  002082                     u2650:
  4301  002082  C001  F005         	movff	pinMode@pin,??_pinMode
  4302  002086  0EF8               	movlw	-8
  4303  002088  2605               	addwf	??_pinMode^0,f,c
  4304  00208A  0E01               	movlw	1
  4305  00208C  6E06               	movwf	(??_pinMode+1)^0,c
  4306  00208E  2A05               	incf	??_pinMode^0,f,c
  4307  002090  EF4C  F010         	goto	u2664
  4308  002094                     u2665:
  4309  002094  90D8               	bcf	status,0,c
  4310  002096  3606               	rlcf	(??_pinMode+1)^0,f,c
  4311  002098                     u2664:
  4312  002098  2E05               	decfsz	??_pinMode^0,f,c
  4313  00209A  EF4A  F010         	goto	u2665
  4314  00209E  5006               	movf	(??_pinMode+1)^0,w,c
  4315  0020A0  1293               	iorwf	147,f,c	;volatile
  4316  0020A2  EF18  F011         	goto	l76
  4317  0020A6                     l2646:
  4318  0020A6  C001  F005         	movff	pinMode@pin,??_pinMode
  4319  0020AA  0EF8               	movlw	-8
  4320  0020AC  2605               	addwf	??_pinMode^0,f,c
  4321  0020AE  0E01               	movlw	1
  4322  0020B0  6E06               	movwf	(??_pinMode+1)^0,c
  4323  0020B2  2A05               	incf	??_pinMode^0,f,c
  4324  0020B4  EF5E  F010         	goto	u2674
  4325  0020B8                     u2675:
  4326  0020B8  90D8               	bcf	status,0,c
  4327  0020BA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4328  0020BC                     u2674:
  4329  0020BC  2E05               	decfsz	??_pinMode^0,f,c
  4330  0020BE  EF5C  F010         	goto	u2675
  4331  0020C2  5006               	movf	(??_pinMode+1)^0,w,c
  4332  0020C4  0AFF               	xorlw	255
  4333  0020C6  1693               	andwf	147,f,c	;volatile
  4334  0020C8  EF18  F011         	goto	l76
  4335  0020CC                     l2648:
  4336  0020CC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4337  0020CE  EF74  F010         	goto	u2680
  4338  0020D2  5002               	movf	(pinMode@pin+1)^0,w,c
  4339  0020D4  E107               	bnz	u2681
  4340  0020D6  0E18               	movlw	24
  4341  0020D8  5C01               	subwf	pinMode@pin^0,w,c
  4342  0020DA  B0D8               	btfsc	status,0,c
  4343  0020DC  EF72  F010         	goto	u2681
  4344  0020E0  EF74  F010         	goto	u2680
  4345  0020E4                     u2681:
  4346  0020E4  EFA2  F010         	goto	l2656
  4347  0020E8                     u2680:
  4348  0020E8                     
  4349                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4350  0020E8  5003               	movf	pinMode@type^0,w,c
  4351  0020EA  1004               	iorwf	(pinMode@type+1)^0,w,c
  4352  0020EC  B4D8               	btfsc	status,2,c
  4353  0020EE  EF7B  F010         	goto	u2691
  4354  0020F2  EF7D  F010         	goto	u2690
  4355  0020F6                     u2691:
  4356  0020F6  EF8F  F010         	goto	l2654
  4357  0020FA                     u2690:
  4358  0020FA  C001  F005         	movff	pinMode@pin,??_pinMode
  4359  0020FE  0EF0               	movlw	-16
  4360  002100  2605               	addwf	??_pinMode^0,f,c
  4361  002102  0E01               	movlw	1
  4362  002104  6E06               	movwf	(??_pinMode+1)^0,c
  4363  002106  2A05               	incf	??_pinMode^0,f,c
  4364  002108  EF88  F010         	goto	u2704
  4365  00210C                     u2705:
  4366  00210C  90D8               	bcf	status,0,c
  4367  00210E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4368  002110                     u2704:
  4369  002110  2E05               	decfsz	??_pinMode^0,f,c
  4370  002112  EF86  F010         	goto	u2705
  4371  002116  5006               	movf	(??_pinMode+1)^0,w,c
  4372  002118  1294               	iorwf	148,f,c	;volatile
  4373  00211A  EF18  F011         	goto	l76
  4374  00211E                     l2654:
  4375  00211E  C001  F005         	movff	pinMode@pin,??_pinMode
  4376  002122  0EF0               	movlw	-16
  4377  002124  2605               	addwf	??_pinMode^0,f,c
  4378  002126  0E01               	movlw	1
  4379  002128  6E06               	movwf	(??_pinMode+1)^0,c
  4380  00212A  2A05               	incf	??_pinMode^0,f,c
  4381  00212C  EF9A  F010         	goto	u2714
  4382  002130                     u2715:
  4383  002130  90D8               	bcf	status,0,c
  4384  002132  3606               	rlcf	(??_pinMode+1)^0,f,c
  4385  002134                     u2714:
  4386  002134  2E05               	decfsz	??_pinMode^0,f,c
  4387  002136  EF98  F010         	goto	u2715
  4388  00213A  5006               	movf	(??_pinMode+1)^0,w,c
  4389  00213C  0AFF               	xorlw	255
  4390  00213E  1694               	andwf	148,f,c	;volatile
  4391  002140  EF18  F011         	goto	l76
  4392  002144                     l2656:
  4393  002144  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4394  002146  EFB0  F010         	goto	u2720
  4395  00214A  5002               	movf	(pinMode@pin+1)^0,w,c
  4396  00214C  E107               	bnz	u2721
  4397  00214E  0E20               	movlw	32
  4398  002150  5C01               	subwf	pinMode@pin^0,w,c
  4399  002152  B0D8               	btfsc	status,0,c
  4400  002154  EFAE  F010         	goto	u2721
  4401  002158  EFB0  F010         	goto	u2720
  4402  00215C                     u2721:
  4403  00215C  EFDE  F010         	goto	l2664
  4404  002160                     u2720:
  4405  002160                     
  4406                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4407  002160  5003               	movf	pinMode@type^0,w,c
  4408  002162  1004               	iorwf	(pinMode@type+1)^0,w,c
  4409  002164  B4D8               	btfsc	status,2,c
  4410  002166  EFB7  F010         	goto	u2731
  4411  00216A  EFB9  F010         	goto	u2730
  4412  00216E                     u2731:
  4413  00216E  EFCB  F010         	goto	l2662
  4414  002172                     u2730:
  4415  002172  C001  F005         	movff	pinMode@pin,??_pinMode
  4416  002176  0EE8               	movlw	-24
  4417  002178  2605               	addwf	??_pinMode^0,f,c
  4418  00217A  0E01               	movlw	1
  4419  00217C  6E06               	movwf	(??_pinMode+1)^0,c
  4420  00217E  2A05               	incf	??_pinMode^0,f,c
  4421  002180  EFC4  F010         	goto	u2744
  4422  002184                     u2745:
  4423  002184  90D8               	bcf	status,0,c
  4424  002186  3606               	rlcf	(??_pinMode+1)^0,f,c
  4425  002188                     u2744:
  4426  002188  2E05               	decfsz	??_pinMode^0,f,c
  4427  00218A  EFC2  F010         	goto	u2745
  4428  00218E  5006               	movf	(??_pinMode+1)^0,w,c
  4429  002190  1295               	iorwf	149,f,c	;volatile
  4430  002192  EF18  F011         	goto	l76
  4431  002196                     l2662:
  4432  002196  C001  F005         	movff	pinMode@pin,??_pinMode
  4433  00219A  0EE8               	movlw	-24
  4434  00219C  2605               	addwf	??_pinMode^0,f,c
  4435  00219E  0E01               	movlw	1
  4436  0021A0  6E06               	movwf	(??_pinMode+1)^0,c
  4437  0021A2  2A05               	incf	??_pinMode^0,f,c
  4438  0021A4  EFD6  F010         	goto	u2754
  4439  0021A8                     u2755:
  4440  0021A8  90D8               	bcf	status,0,c
  4441  0021AA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4442  0021AC                     u2754:
  4443  0021AC  2E05               	decfsz	??_pinMode^0,f,c
  4444  0021AE  EFD4  F010         	goto	u2755
  4445  0021B2  5006               	movf	(??_pinMode+1)^0,w,c
  4446  0021B4  0AFF               	xorlw	255
  4447  0021B6  1695               	andwf	149,f,c	;volatile
  4448  0021B8  EF18  F011         	goto	l76
  4449  0021BC                     l2664:
  4450  0021BC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4451  0021BE  EFEC  F010         	goto	u2760
  4452  0021C2  5002               	movf	(pinMode@pin+1)^0,w,c
  4453  0021C4  E107               	bnz	u2761
  4454  0021C6  0E28               	movlw	40
  4455  0021C8  5C01               	subwf	pinMode@pin^0,w,c
  4456  0021CA  B0D8               	btfsc	status,0,c
  4457  0021CC  EFEA  F010         	goto	u2761
  4458  0021D0  EFEC  F010         	goto	u2760
  4459  0021D4                     u2761:
  4460  0021D4  EF18  F011         	goto	l76
  4461  0021D8                     u2760:
  4462  0021D8                     
  4463                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4464  0021D8  5003               	movf	pinMode@type^0,w,c
  4465  0021DA  1004               	iorwf	(pinMode@type+1)^0,w,c
  4466  0021DC  B4D8               	btfsc	status,2,c
  4467  0021DE  EFF3  F010         	goto	u2771
  4468  0021E2  EFF5  F010         	goto	u2770
  4469  0021E6                     u2771:
  4470  0021E6  EF07  F011         	goto	l2670
  4471  0021EA                     u2770:
  4472  0021EA  C001  F005         	movff	pinMode@pin,??_pinMode
  4473  0021EE  0EE0               	movlw	-32
  4474  0021F0  2605               	addwf	??_pinMode^0,f,c
  4475  0021F2  0E01               	movlw	1
  4476  0021F4  6E06               	movwf	(??_pinMode+1)^0,c
  4477  0021F6  2A05               	incf	??_pinMode^0,f,c
  4478  0021F8  EF00  F011         	goto	u2784
  4479  0021FC                     u2785:
  4480  0021FC  90D8               	bcf	status,0,c
  4481  0021FE  3606               	rlcf	(??_pinMode+1)^0,f,c
  4482  002200                     u2784:
  4483  002200  2E05               	decfsz	??_pinMode^0,f,c
  4484  002202  EFFE  F010         	goto	u2785
  4485  002206  5006               	movf	(??_pinMode+1)^0,w,c
  4486  002208  1296               	iorwf	150,f,c	;volatile
  4487  00220A  EF18  F011         	goto	l76
  4488  00220E                     l2670:
  4489  00220E  C001  F005         	movff	pinMode@pin,??_pinMode
  4490  002212  0EE0               	movlw	-32
  4491  002214  2605               	addwf	??_pinMode^0,f,c
  4492  002216  0E01               	movlw	1
  4493  002218  6E06               	movwf	(??_pinMode+1)^0,c
  4494  00221A  2A05               	incf	??_pinMode^0,f,c
  4495  00221C  EF12  F011         	goto	u2794
  4496  002220                     u2795:
  4497  002220  90D8               	bcf	status,0,c
  4498  002222  3606               	rlcf	(??_pinMode+1)^0,f,c
  4499  002224                     u2794:
  4500  002224  2E05               	decfsz	??_pinMode^0,f,c
  4501  002226  EF10  F011         	goto	u2795
  4502  00222A  5006               	movf	(??_pinMode+1)^0,w,c
  4503  00222C  0AFF               	xorlw	255
  4504  00222E  1696               	andwf	150,f,c	;volatile
  4505  002230                     l76:
  4506  002230  0012               	return		;funcret
  4507  002232                     __end_of_pinMode:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function ___flge *****************
  4511 ;; Defined at:
  4512 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  ff1             4    0[COMRAM] void 
  4515 ;;  ff2             4    4[COMRAM] void 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;		None               void
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4527 ;;      Params:         8       0       0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0
  4529 ;;      Temps:          4       0       0       0       0       0       0
  4530 ;;      Totals:        12       0       0       0       0       0       0
  4531 ;;Total ram usage:       12 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;;		_escolheTempo
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text7
  4542  0029B0                     __ptext7:
  4543                           	callstack 0
  4544  0029B0                     ___flge:
  4545                           	callstack 29
  4546  0029B0  0E00               	movlw	0
  4547  0029B2  1401               	andwf	___flge@ff1^0,w,c
  4548  0029B4  6E09               	movwf	??___flge^0,c
  4549  0029B6  0E00               	movlw	0
  4550  0029B8  1402               	andwf	(___flge@ff1+1)^0,w,c
  4551  0029BA  6E0A               	movwf	(??___flge+1)^0,c
  4552  0029BC  0E80               	movlw	128
  4553  0029BE  1403               	andwf	(___flge@ff1+2)^0,w,c
  4554  0029C0  6E0B               	movwf	(??___flge+2)^0,c
  4555  0029C2  0E7F               	movlw	127
  4556  0029C4  1404               	andwf	(___flge@ff1+3)^0,w,c
  4557  0029C6  6E0C               	movwf	(??___flge+3)^0,c
  4558  0029C8  5009               	movf	??___flge^0,w,c
  4559  0029CA  100A               	iorwf	(??___flge+1)^0,w,c
  4560  0029CC  100B               	iorwf	(??___flge+2)^0,w,c
  4561  0029CE  100C               	iorwf	(??___flge+3)^0,w,c
  4562  0029D0  A4D8               	btfss	status,2,c
  4563  0029D2  EFED  F014         	goto	u3601
  4564  0029D6  EFEF  F014         	goto	u3600
  4565  0029DA                     u3601:
  4566  0029DA  EFF7  F014         	goto	l3250
  4567  0029DE                     u3600:
  4568  0029DE  0E00               	movlw	0
  4569  0029E0  6E01               	movwf	___flge@ff1^0,c
  4570  0029E2  0E00               	movlw	0
  4571  0029E4  6E02               	movwf	(___flge@ff1+1)^0,c
  4572  0029E6  0E00               	movlw	0
  4573  0029E8  6E03               	movwf	(___flge@ff1+2)^0,c
  4574  0029EA  0E00               	movlw	0
  4575  0029EC  6E04               	movwf	(___flge@ff1+3)^0,c
  4576  0029EE                     l3250:
  4577  0029EE  0E00               	movlw	0
  4578  0029F0  1405               	andwf	___flge@ff2^0,w,c
  4579  0029F2  6E09               	movwf	??___flge^0,c
  4580  0029F4  0E00               	movlw	0
  4581  0029F6  1406               	andwf	(___flge@ff2+1)^0,w,c
  4582  0029F8  6E0A               	movwf	(??___flge+1)^0,c
  4583  0029FA  0E80               	movlw	128
  4584  0029FC  1407               	andwf	(___flge@ff2+2)^0,w,c
  4585  0029FE  6E0B               	movwf	(??___flge+2)^0,c
  4586  002A00  0E7F               	movlw	127
  4587  002A02  1408               	andwf	(___flge@ff2+3)^0,w,c
  4588  002A04  6E0C               	movwf	(??___flge+3)^0,c
  4589  002A06  5009               	movf	??___flge^0,w,c
  4590  002A08  100A               	iorwf	(??___flge+1)^0,w,c
  4591  002A0A  100B               	iorwf	(??___flge+2)^0,w,c
  4592  002A0C  100C               	iorwf	(??___flge+3)^0,w,c
  4593  002A0E  A4D8               	btfss	status,2,c
  4594  002A10  EF0C  F015         	goto	u3611
  4595  002A14  EF0E  F015         	goto	u3610
  4596  002A18                     u3611:
  4597  002A18  EF16  F015         	goto	l3254
  4598  002A1C                     u3610:
  4599  002A1C  0E00               	movlw	0
  4600  002A1E  6E05               	movwf	___flge@ff2^0,c
  4601  002A20  0E00               	movlw	0
  4602  002A22  6E06               	movwf	(___flge@ff2+1)^0,c
  4603  002A24  0E00               	movlw	0
  4604  002A26  6E07               	movwf	(___flge@ff2+2)^0,c
  4605  002A28  0E00               	movlw	0
  4606  002A2A  6E08               	movwf	(___flge@ff2+3)^0,c
  4607  002A2C                     l3254:
  4608  002A2C  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4609  002A2E  EF1B  F015         	goto	u3621
  4610  002A32  EF1D  F015         	goto	u3620
  4611  002A36                     u3621:
  4612  002A36  EF26  F015         	goto	l3258
  4613  002A3A                     u3620:
  4614  002A3A  6C01               	negf	___flge@ff1^0,c
  4615  002A3C  1E02               	comf	(___flge@ff1+1)^0,f,c
  4616  002A3E  B0D8               	btfsc	status,0,c
  4617  002A40  2A02               	incf	(___flge@ff1+1)^0,f,c
  4618  002A42  1E03               	comf	(___flge@ff1+2)^0,f,c
  4619  002A44  B0D8               	btfsc	status,0,c
  4620  002A46  2A03               	incf	(___flge@ff1+2)^0,f,c
  4621  002A48  0E80               	movlw	128
  4622  002A4A  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4623  002A4C                     l3258:
  4624  002A4C  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4625  002A4E  EF2B  F015         	goto	u3631
  4626  002A52  EF2D  F015         	goto	u3630
  4627  002A56                     u3631:
  4628  002A56  EF36  F015         	goto	l696
  4629  002A5A                     u3630:
  4630  002A5A  6C05               	negf	___flge@ff2^0,c
  4631  002A5C  1E06               	comf	(___flge@ff2+1)^0,f,c
  4632  002A5E  B0D8               	btfsc	status,0,c
  4633  002A60  2A06               	incf	(___flge@ff2+1)^0,f,c
  4634  002A62  1E07               	comf	(___flge@ff2+2)^0,f,c
  4635  002A64  B0D8               	btfsc	status,0,c
  4636  002A66  2A07               	incf	(___flge@ff2+2)^0,f,c
  4637  002A68  0E80               	movlw	128
  4638  002A6A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4639  002A6C                     l696:
  4640  002A6C  0E00               	movlw	0
  4641  002A6E  1A01               	xorwf	___flge@ff1^0,f,c
  4642  002A70  0E00               	movlw	0
  4643  002A72  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4644  002A74  0E00               	movlw	0
  4645  002A76  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4646  002A78  0E80               	movlw	128
  4647  002A7A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4648  002A7C  0E00               	movlw	0
  4649  002A7E  1A05               	xorwf	___flge@ff2^0,f,c
  4650  002A80  0E00               	movlw	0
  4651  002A82  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4652  002A84  0E00               	movlw	0
  4653  002A86  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4654  002A88  0E80               	movlw	128
  4655  002A8A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4656  002A8C  5005               	movf	___flge@ff2^0,w,c
  4657  002A8E  5C01               	subwf	___flge@ff1^0,w,c
  4658  002A90  5006               	movf	(___flge@ff2+1)^0,w,c
  4659  002A92  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4660  002A94  5007               	movf	(___flge@ff2+2)^0,w,c
  4661  002A96  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4662  002A98  5008               	movf	(___flge@ff2+3)^0,w,c
  4663  002A9A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4664  002A9C  B0D8               	btfsc	status,0,c
  4665  002A9E  EF53  F015         	goto	u3641
  4666  002AA2  EF55  F015         	goto	u3640
  4667  002AA6                     u3641:
  4668  002AA6  EF58  F015         	goto	l3264
  4669  002AAA                     u3640:
  4670  002AAA  90D8               	bcf	status,0,c
  4671  002AAC  EF59  F015         	goto	l701
  4672  002AB0                     l3264:
  4673  002AB0  80D8               	bsf	status,0,c
  4674  002AB2                     l701:
  4675  002AB2  0012               	return		;funcret
  4676  002AB4                     __end_of___flge:
  4677                           	callstack 0
  4678                           
  4679 ;; *************** function ___fladd *****************
  4680 ;; Defined at:
  4681 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  b               4    0[COMRAM] void 
  4684 ;;  a               4    4[COMRAM] void 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  grs             1   15[COMRAM] unsigned char 
  4687 ;;  bexp            1   14[COMRAM] unsigned char 
  4688 ;;  aexp            1   13[COMRAM] unsigned char 
  4689 ;;  signs           1   12[COMRAM] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  4    0[COMRAM] unsigned char 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4699 ;;      Params:         8       0       0       0       0       0       0
  4700 ;;      Locals:         4       0       0       0       0       0       0
  4701 ;;      Temps:          4       0       0       0       0       0       0
  4702 ;;      Totals:        16       0       0       0       0       0       0
  4703 ;;Total ram usage:       16 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_main
  4709 ;;		_escolheTempo
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text8
  4714  00176C                     __ptext8:
  4715                           	callstack 0
  4716  00176C                     ___fladd:
  4717                           	callstack 29
  4718  00176C  5004               	movf	(___fladd@b+3)^0,w,c
  4719  00176E  0B80               	andlw	128
  4720  001770  6E0D               	movwf	___fladd@signs^0,c
  4721  001772  5004               	movf	(___fladd@b+3)^0,w,c
  4722  001774  2404               	addwf	(___fladd@b+3)^0,w,c
  4723  001776  6E0F               	movwf	___fladd@bexp^0,c
  4724  001778  AE03               	btfss	(___fladd@b+2)^0,7,c
  4725  00177A  EFC1  F00B         	goto	u3211
  4726  00177E  EFC3  F00B         	goto	u3210
  4727  001782                     u3211:
  4728  001782  EFC4  F00B         	goto	l3050
  4729  001786                     u3210:
  4730  001786  800F               	bsf	___fladd@bexp^0,0,c
  4731  001788                     l3050:
  4732  001788  500F               	movf	___fladd@bexp^0,w,c
  4733  00178A  B4D8               	btfsc	status,2,c
  4734  00178C  EFCA  F00B         	goto	u3221
  4735  001790  EFCC  F00B         	goto	u3220
  4736  001794                     u3221:
  4737  001794  EFE1  F00B         	goto	l3060
  4738  001798                     u3220:
  4739  001798  280F               	incf	___fladd@bexp^0,w,c
  4740  00179A  A4D8               	btfss	status,2,c
  4741  00179C  EFD2  F00B         	goto	u3231
  4742  0017A0  EFD4  F00B         	goto	u3230
  4743  0017A4                     u3231:
  4744  0017A4  EFDC  F00B         	goto	l3056
  4745  0017A8                     u3230:
  4746  0017A8  0E00               	movlw	0
  4747  0017AA  6E01               	movwf	___fladd@b^0,c
  4748  0017AC  0E00               	movlw	0
  4749  0017AE  6E02               	movwf	(___fladd@b+1)^0,c
  4750  0017B0  0E00               	movlw	0
  4751  0017B2  6E03               	movwf	(___fladd@b+2)^0,c
  4752  0017B4  0E00               	movlw	0
  4753  0017B6  6E04               	movwf	(___fladd@b+3)^0,c
  4754  0017B8                     l3056:
  4755  0017B8  8E03               	bsf	(___fladd@b+2)^0,7,c
  4756  0017BA  0E00               	movlw	0
  4757  0017BC  6E04               	movwf	(___fladd@b+3)^0,c
  4758  0017BE  EFE9  F00B         	goto	l3062
  4759  0017C2                     l3060:
  4760  0017C2  0E00               	movlw	0
  4761  0017C4  6E01               	movwf	___fladd@b^0,c
  4762  0017C6  0E00               	movlw	0
  4763  0017C8  6E02               	movwf	(___fladd@b+1)^0,c
  4764  0017CA  0E00               	movlw	0
  4765  0017CC  6E03               	movwf	(___fladd@b+2)^0,c
  4766  0017CE  0E00               	movlw	0
  4767  0017D0  6E04               	movwf	(___fladd@b+3)^0,c
  4768  0017D2                     l3062:
  4769  0017D2  5008               	movf	(___fladd@a+3)^0,w,c
  4770  0017D4  0B80               	andlw	128
  4771  0017D6  6E0E               	movwf	___fladd@aexp^0,c
  4772  0017D8  500D               	movf	___fladd@signs^0,w,c
  4773  0017DA  180E               	xorwf	___fladd@aexp^0,w,c
  4774  0017DC  B4D8               	btfsc	status,2,c
  4775  0017DE  EFF3  F00B         	goto	u3241
  4776  0017E2  EFF5  F00B         	goto	u3240
  4777  0017E6                     u3241:
  4778  0017E6  EFF6  F00B         	goto	l3068
  4779  0017EA                     u3240:
  4780  0017EA  8C0D               	bsf	___fladd@signs^0,6,c
  4781  0017EC                     l3068:
  4782  0017EC  5008               	movf	(___fladd@a+3)^0,w,c
  4783  0017EE  2408               	addwf	(___fladd@a+3)^0,w,c
  4784  0017F0  6E0E               	movwf	___fladd@aexp^0,c
  4785  0017F2  AE07               	btfss	(___fladd@a+2)^0,7,c
  4786  0017F4  EFFE  F00B         	goto	u3251
  4787  0017F8  EF00  F00C         	goto	u3250
  4788  0017FC                     u3251:
  4789  0017FC  EF01  F00C         	goto	l3074
  4790  001800                     u3250:
  4791  001800  800E               	bsf	___fladd@aexp^0,0,c
  4792  001802                     l3074:
  4793  001802  500E               	movf	___fladd@aexp^0,w,c
  4794  001804  B4D8               	btfsc	status,2,c
  4795  001806  EF07  F00C         	goto	u3261
  4796  00180A  EF09  F00C         	goto	u3260
  4797  00180E                     u3261:
  4798  00180E  EF1E  F00C         	goto	l3084
  4799  001812                     u3260:
  4800  001812  280E               	incf	___fladd@aexp^0,w,c
  4801  001814  A4D8               	btfss	status,2,c
  4802  001816  EF0F  F00C         	goto	u3271
  4803  00181A  EF11  F00C         	goto	u3270
  4804  00181E                     u3271:
  4805  00181E  EF19  F00C         	goto	l3080
  4806  001822                     u3270:
  4807  001822  0E00               	movlw	0
  4808  001824  6E05               	movwf	___fladd@a^0,c
  4809  001826  0E00               	movlw	0
  4810  001828  6E06               	movwf	(___fladd@a+1)^0,c
  4811  00182A  0E00               	movlw	0
  4812  00182C  6E07               	movwf	(___fladd@a+2)^0,c
  4813  00182E  0E00               	movlw	0
  4814  001830  6E08               	movwf	(___fladd@a+3)^0,c
  4815  001832                     l3080:
  4816  001832  8E07               	bsf	(___fladd@a+2)^0,7,c
  4817  001834  0E00               	movlw	0
  4818  001836  6E08               	movwf	(___fladd@a+3)^0,c
  4819  001838  EF26  F00C         	goto	l3086
  4820  00183C                     l3084:
  4821  00183C  0E00               	movlw	0
  4822  00183E  6E05               	movwf	___fladd@a^0,c
  4823  001840  0E00               	movlw	0
  4824  001842  6E06               	movwf	(___fladd@a+1)^0,c
  4825  001844  0E00               	movlw	0
  4826  001846  6E07               	movwf	(___fladd@a+2)^0,c
  4827  001848  0E00               	movlw	0
  4828  00184A  6E08               	movwf	(___fladd@a+3)^0,c
  4829  00184C                     l3086:
  4830  00184C  500F               	movf	___fladd@bexp^0,w,c
  4831  00184E  5C0E               	subwf	___fladd@aexp^0,w,c
  4832  001850  B0D8               	btfsc	status,0,c
  4833  001852  EF2D  F00C         	goto	u3281
  4834  001856  EF2F  F00C         	goto	u3280
  4835  00185A                     u3281:
  4836  00185A  EF56  F00C         	goto	l3122
  4837  00185E                     u3280:
  4838  00185E  AC0D               	btfss	___fladd@signs^0,6,c
  4839  001860  EF34  F00C         	goto	u3291
  4840  001864  EF36  F00C         	goto	u3290
  4841  001868                     u3291:
  4842  001868  EF38  F00C         	goto	l3092
  4843  00186C                     u3290:
  4844  00186C  0E80               	movlw	128
  4845  00186E  1A0D               	xorwf	___fladd@signs^0,f,c
  4846  001870                     l3092:
  4847  001870  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4848  001874  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4849  001878  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4850  00187C  C001  F010         	movff	___fladd@b,___fladd@grs
  4851  001880  C005  F001         	movff	___fladd@a,___fladd@b
  4852  001884  C010  F005         	movff	___fladd@grs,___fladd@a
  4853  001888  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4854  00188C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4855  001890  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4856  001894  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4857  001898  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4858  00189C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4859  0018A0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4860  0018A4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4861  0018A8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4862  0018AC                     l3122:
  4863  0018AC  0E00               	movlw	0
  4864  0018AE  6E10               	movwf	___fladd@grs^0,c
  4865  0018B0  500F               	movf	___fladd@bexp^0,w,c
  4866  0018B2  C00E  F009         	movff	___fladd@aexp,??___fladd
  4867  0018B6  6A0A               	clrf	(??___fladd+1)^0,c
  4868  0018B8  5E09               	subwf	??___fladd^0,f,c
  4869  0018BA  0E00               	movlw	0
  4870  0018BC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4871  0018BE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4872  0018C0  EF6B  F00C         	goto	u3301
  4873  0018C4  500A               	movf	(??___fladd+1)^0,w,c
  4874  0018C6  E109               	bnz	u3300
  4875  0018C8  0E1A               	movlw	26
  4876  0018CA  5C09               	subwf	??___fladd^0,w,c
  4877  0018CC  A0D8               	btfss	status,0,c
  4878  0018CE  EF6B  F00C         	goto	u3301
  4879  0018D2  EF6D  F00C         	goto	u3300
  4880  0018D6                     u3301:
  4881  0018D6  EFA4  F00C         	goto	l960
  4882  0018DA                     u3300:
  4883  0018DA  5001               	movf	___fladd@b^0,w,c
  4884  0018DC  1002               	iorwf	(___fladd@b+1)^0,w,c
  4885  0018DE  1003               	iorwf	(___fladd@b+2)^0,w,c
  4886  0018E0  1004               	iorwf	(___fladd@b+3)^0,w,c
  4887  0018E2  A4D8               	btfss	status,2,c
  4888  0018E4  EF76  F00C         	goto	u3311
  4889  0018E8  EF79  F00C         	goto	u3310
  4890  0018EC                     u3311:
  4891  0018EC  0E01               	movlw	1
  4892  0018EE  EF7A  F00C         	goto	u3320
  4893  0018F2                     u3310:
  4894  0018F2  0E00               	movlw	0
  4895  0018F4                     u3320:
  4896  0018F4  6E10               	movwf	___fladd@grs^0,c
  4897  0018F6  0E00               	movlw	0
  4898  0018F8  6E01               	movwf	___fladd@b^0,c
  4899  0018FA  0E00               	movlw	0
  4900  0018FC  6E02               	movwf	(___fladd@b+1)^0,c
  4901  0018FE  0E00               	movlw	0
  4902  001900  6E03               	movwf	(___fladd@b+2)^0,c
  4903  001902  0E00               	movlw	0
  4904  001904  6E04               	movwf	(___fladd@b+3)^0,c
  4905  001906  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4906  00190A  EFAD  F00C         	goto	l959
  4907  00190E                     l961:
  4908  00190E  A010               	btfss	___fladd@grs^0,0,c
  4909  001910  EF8C  F00C         	goto	u3331
  4910  001914  EF8E  F00C         	goto	u3330
  4911  001918                     u3331:
  4912  001918  EF94  F00C         	goto	l3134
  4913  00191C                     u3330:
  4914  00191C  90D8               	bcf	status,0,c
  4915  00191E  3010               	rrcf	___fladd@grs^0,w,c
  4916  001920  0901               	iorlw	1
  4917  001922  6E10               	movwf	___fladd@grs^0,c
  4918  001924  EF96  F00C         	goto	l3136
  4919  001928                     l3134:
  4920  001928  90D8               	bcf	status,0,c
  4921  00192A  3210               	rrcf	___fladd@grs^0,f,c
  4922  00192C                     l3136:
  4923  00192C  A001               	btfss	___fladd@b^0,0,c
  4924  00192E  EF9B  F00C         	goto	u3341
  4925  001932  EF9D  F00C         	goto	u3340
  4926  001936                     u3341:
  4927  001936  EF9E  F00C         	goto	l3140
  4928  00193A                     u3340:
  4929  00193A  8E10               	bsf	___fladd@grs^0,7,c
  4930  00193C                     l3140:
  4931  00193C  3404               	rlcf	(___fladd@b+3)^0,w,c
  4932  00193E  3204               	rrcf	(___fladd@b+3)^0,f,c
  4933  001940  3203               	rrcf	(___fladd@b+2)^0,f,c
  4934  001942  3202               	rrcf	(___fladd@b+1)^0,f,c
  4935  001944  3201               	rrcf	___fladd@b^0,f,c
  4936  001946  2A0F               	incf	___fladd@bexp^0,f,c
  4937  001948                     l960:
  4938  001948  500E               	movf	___fladd@aexp^0,w,c
  4939  00194A  5C0F               	subwf	___fladd@bexp^0,w,c
  4940  00194C  A0D8               	btfss	status,0,c
  4941  00194E  EFAB  F00C         	goto	u3351
  4942  001952  EFAD  F00C         	goto	u3350
  4943  001956                     u3351:
  4944  001956  EF87  F00C         	goto	l961
  4945  00195A                     u3350:
  4946  00195A                     l959:
  4947  00195A  BC0D               	btfsc	___fladd@signs^0,6,c
  4948  00195C  EFB2  F00C         	goto	u3361
  4949  001960  EFB4  F00C         	goto	u3360
  4950  001964                     u3361:
  4951  001964  EFF4  F00C         	goto	l3168
  4952  001968                     u3360:
  4953  001968  500F               	movf	___fladd@bexp^0,w,c
  4954  00196A  A4D8               	btfss	status,2,c
  4955  00196C  EFBA  F00C         	goto	u3371
  4956  001970  EFBC  F00C         	goto	u3370
  4957  001974                     u3371:
  4958  001974  EFC6  F00C         	goto	l3150
  4959  001978                     u3370:
  4960  001978  0E00               	movlw	0
  4961  00197A  6E01               	movwf	?___fladd^0,c
  4962  00197C  0E00               	movlw	0
  4963  00197E  6E02               	movwf	(?___fladd+1)^0,c
  4964  001980  0E00               	movlw	0
  4965  001982  6E03               	movwf	(?___fladd+2)^0,c
  4966  001984  0E00               	movlw	0
  4967  001986  6E04               	movwf	(?___fladd+3)^0,c
  4968  001988  EF15  F00E         	goto	l968
  4969  00198C                     l3150:
  4970  00198C  5005               	movf	___fladd@a^0,w,c
  4971  00198E  2601               	addwf	___fladd@b^0,f,c
  4972  001990  5006               	movf	(___fladd@a+1)^0,w,c
  4973  001992  2202               	addwfc	(___fladd@b+1)^0,f,c
  4974  001994  5007               	movf	(___fladd@a+2)^0,w,c
  4975  001996  2203               	addwfc	(___fladd@b+2)^0,f,c
  4976  001998  5008               	movf	(___fladd@a+3)^0,w,c
  4977  00199A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4978  00199C  A004               	btfss	(___fladd@b+3)^0,0,c
  4979  00199E  EFD3  F00C         	goto	u3381
  4980  0019A2  EFD5  F00C         	goto	u3380
  4981  0019A6                     u3381:
  4982  0019A6  EF81  F00D         	goto	l3204
  4983  0019AA                     u3380:
  4984  0019AA  A010               	btfss	___fladd@grs^0,0,c
  4985  0019AC  EFDA  F00C         	goto	u3391
  4986  0019B0  EFDC  F00C         	goto	u3390
  4987  0019B4                     u3391:
  4988  0019B4  EFE2  F00C         	goto	l3158
  4989  0019B8                     u3390:
  4990  0019B8  90D8               	bcf	status,0,c
  4991  0019BA  3010               	rrcf	___fladd@grs^0,w,c
  4992  0019BC  0901               	iorlw	1
  4993  0019BE  6E10               	movwf	___fladd@grs^0,c
  4994  0019C0  EFE4  F00C         	goto	l3160
  4995  0019C4                     l3158:
  4996  0019C4  90D8               	bcf	status,0,c
  4997  0019C6  3210               	rrcf	___fladd@grs^0,f,c
  4998  0019C8                     l3160:
  4999  0019C8  A001               	btfss	___fladd@b^0,0,c
  5000  0019CA  EFE9  F00C         	goto	u3401
  5001  0019CE  EFEB  F00C         	goto	u3400
  5002  0019D2                     u3401:
  5003  0019D2  EFEC  F00C         	goto	l3164
  5004  0019D6                     u3400:
  5005  0019D6  8E10               	bsf	___fladd@grs^0,7,c
  5006  0019D8                     l3164:
  5007  0019D8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5008  0019DA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5009  0019DC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5010  0019DE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5011  0019E0  3201               	rrcf	___fladd@b^0,f,c
  5012  0019E2  2A0F               	incf	___fladd@bexp^0,f,c
  5013  0019E4  EF81  F00D         	goto	l3204
  5014  0019E8                     l3168:
  5015  0019E8  5005               	movf	___fladd@a^0,w,c
  5016  0019EA  5C01               	subwf	___fladd@b^0,w,c
  5017  0019EC  5006               	movf	(___fladd@a+1)^0,w,c
  5018  0019EE  5802               	subwfb	(___fladd@b+1)^0,w,c
  5019  0019F0  5007               	movf	(___fladd@a+2)^0,w,c
  5020  0019F2  5803               	subwfb	(___fladd@b+2)^0,w,c
  5021  0019F4  5004               	movf	(___fladd@b+3)^0,w,c
  5022  0019F6  0A80               	xorlw	128
  5023  0019F8  6E09               	movwf	??___fladd^0,c
  5024  0019FA  5008               	movf	(___fladd@a+3)^0,w,c
  5025  0019FC  0A80               	xorlw	128
  5026  0019FE  5809               	subwfb	??___fladd^0,w,c
  5027  001A00  B0D8               	btfsc	status,0,c
  5028  001A02  EF05  F00D         	goto	u3411
  5029  001A06  EF07  F00D         	goto	u3410
  5030  001A0A                     u3411:
  5031  001A0A  EF32  F00D         	goto	l3178
  5032  001A0E                     u3410:
  5033  001A0E  5001               	movf	___fladd@b^0,w,c
  5034  001A10  5C05               	subwf	___fladd@a^0,w,c
  5035  001A12  6E09               	movwf	??___fladd^0,c
  5036  001A14  5002               	movf	(___fladd@b+1)^0,w,c
  5037  001A16  5806               	subwfb	(___fladd@a+1)^0,w,c
  5038  001A18  6E0A               	movwf	(??___fladd+1)^0,c
  5039  001A1A  5003               	movf	(___fladd@b+2)^0,w,c
  5040  001A1C  5807               	subwfb	(___fladd@a+2)^0,w,c
  5041  001A1E  6E0B               	movwf	(??___fladd+2)^0,c
  5042  001A20  5004               	movf	(___fladd@b+3)^0,w,c
  5043  001A22  5808               	subwfb	(___fladd@a+3)^0,w,c
  5044  001A24  6E0C               	movwf	(??___fladd+3)^0,c
  5045  001A26  0EFF               	movlw	255
  5046  001A28  2409               	addwf	??___fladd^0,w,c
  5047  001A2A  6E01               	movwf	___fladd@b^0,c
  5048  001A2C  0EFF               	movlw	255
  5049  001A2E  200A               	addwfc	(??___fladd+1)^0,w,c
  5050  001A30  6E02               	movwf	(___fladd@b+1)^0,c
  5051  001A32  0EFF               	movlw	255
  5052  001A34  200B               	addwfc	(??___fladd+2)^0,w,c
  5053  001A36  6E03               	movwf	(___fladd@b+2)^0,c
  5054  001A38  0EFF               	movlw	255
  5055  001A3A  200C               	addwfc	(??___fladd+3)^0,w,c
  5056  001A3C  6E04               	movwf	(___fladd@b+3)^0,c
  5057  001A3E  0E80               	movlw	128
  5058  001A40  1A0D               	xorwf	___fladd@signs^0,f,c
  5059  001A42  6C10               	negf	___fladd@grs^0,c
  5060  001A44  5010               	movf	___fladd@grs^0,w,c
  5061  001A46  A4D8               	btfss	status,2,c
  5062  001A48  EF28  F00D         	goto	u3421
  5063  001A4C  EF2A  F00D         	goto	u3420
  5064  001A50                     u3421:
  5065  001A50  EF3A  F00D         	goto	l976
  5066  001A54                     u3420:
  5067  001A54  0E01               	movlw	1
  5068  001A56  2601               	addwf	___fladd@b^0,f,c
  5069  001A58  0E00               	movlw	0
  5070  001A5A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5071  001A5C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5072  001A5E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5073  001A60  EF3A  F00D         	goto	l976
  5074  001A64                     l3178:
  5075  001A64  5005               	movf	___fladd@a^0,w,c
  5076  001A66  5E01               	subwf	___fladd@b^0,f,c
  5077  001A68  5006               	movf	(___fladd@a+1)^0,w,c
  5078  001A6A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5079  001A6C  5007               	movf	(___fladd@a+2)^0,w,c
  5080  001A6E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5081  001A70  5008               	movf	(___fladd@a+3)^0,w,c
  5082  001A72  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5083  001A74                     l976:
  5084  001A74  5001               	movf	___fladd@b^0,w,c
  5085  001A76  1002               	iorwf	(___fladd@b+1)^0,w,c
  5086  001A78  1003               	iorwf	(___fladd@b+2)^0,w,c
  5087  001A7A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5088  001A7C  A4D8               	btfss	status,2,c
  5089  001A7E  EF43  F00D         	goto	u3431
  5090  001A82  EF45  F00D         	goto	u3430
  5091  001A86                     u3431:
  5092  001A86  EF7A  F00D         	goto	l3202
  5093  001A8A                     u3430:
  5094  001A8A  5010               	movf	___fladd@grs^0,w,c
  5095  001A8C  A4D8               	btfss	status,2,c
  5096  001A8E  EF4B  F00D         	goto	u3441
  5097  001A92  EF4D  F00D         	goto	u3440
  5098  001A96                     u3441:
  5099  001A96  EF7A  F00D         	goto	l3202
  5100  001A9A                     u3440:
  5101  001A9A  0E00               	movlw	0
  5102  001A9C  6E01               	movwf	?___fladd^0,c
  5103  001A9E  0E00               	movlw	0
  5104  001AA0  6E02               	movwf	(?___fladd+1)^0,c
  5105  001AA2  0E00               	movlw	0
  5106  001AA4  6E03               	movwf	(?___fladd+2)^0,c
  5107  001AA6  0E00               	movlw	0
  5108  001AA8  6E04               	movwf	(?___fladd+3)^0,c
  5109  001AAA  EF15  F00E         	goto	l968
  5110  001AAE                     l3186:
  5111  001AAE  90D8               	bcf	status,0,c
  5112  001AB0  3601               	rlcf	___fladd@b^0,f,c
  5113  001AB2  3602               	rlcf	(___fladd@b+1)^0,f,c
  5114  001AB4  3603               	rlcf	(___fladd@b+2)^0,f,c
  5115  001AB6  3604               	rlcf	(___fladd@b+3)^0,f,c
  5116  001AB8  AE10               	btfss	___fladd@grs^0,7,c
  5117  001ABA  EF61  F00D         	goto	u3451
  5118  001ABE  EF63  F00D         	goto	u3450
  5119  001AC2                     u3451:
  5120  001AC2  EF64  F00D         	goto	l3192
  5121  001AC6                     u3450:
  5122  001AC6  8001               	bsf	___fladd@b^0,0,c
  5123  001AC8                     l3192:
  5124  001AC8  A010               	btfss	___fladd@grs^0,0,c
  5125  001ACA  EF69  F00D         	goto	u3461
  5126  001ACE  EF6B  F00D         	goto	u3460
  5127  001AD2                     u3461:
  5128  001AD2  EF6F  F00D         	goto	l3196
  5129  001AD6                     u3460:
  5130  001AD6  80D8               	bsf	status,0,c
  5131  001AD8  3610               	rlcf	___fladd@grs^0,f,c
  5132  001ADA  EF71  F00D         	goto	l3198
  5133  001ADE                     l3196:
  5134  001ADE  90D8               	bcf	status,0,c
  5135  001AE0  3610               	rlcf	___fladd@grs^0,f,c
  5136  001AE2                     l3198:
  5137  001AE2  500F               	movf	___fladd@bexp^0,w,c
  5138  001AE4  B4D8               	btfsc	status,2,c
  5139  001AE6  EF77  F00D         	goto	u3471
  5140  001AEA  EF79  F00D         	goto	u3470
  5141  001AEE                     u3471:
  5142  001AEE  EF7A  F00D         	goto	l3202
  5143  001AF2                     u3470:
  5144  001AF2  060F               	decf	___fladd@bexp^0,f,c
  5145  001AF4                     l3202:
  5146  001AF4  AE03               	btfss	(___fladd@b+2)^0,7,c
  5147  001AF6  EF7F  F00D         	goto	u3481
  5148  001AFA  EF81  F00D         	goto	u3480
  5149  001AFE                     u3481:
  5150  001AFE  EF57  F00D         	goto	l3186
  5151  001B02                     u3480:
  5152  001B02                     l3204:
  5153  001B02  0E00               	movlw	0
  5154  001B04  6E0E               	movwf	___fladd@aexp^0,c
  5155  001B06  AE10               	btfss	___fladd@grs^0,7,c
  5156  001B08  EF88  F00D         	goto	u3491
  5157  001B0C  EF8A  F00D         	goto	u3490
  5158  001B10                     u3491:
  5159  001B10  EFA2  F00D         	goto	l985
  5160  001B14                     u3490:
  5161  001B14  C010  F009         	movff	___fladd@grs,??___fladd
  5162  001B18  0E7F               	movlw	127
  5163  001B1A  1609               	andwf	??___fladd^0,f,c
  5164  001B1C  B4D8               	btfsc	status,2,c
  5165  001B1E  EF93  F00D         	goto	u3501
  5166  001B22  EF95  F00D         	goto	u3500
  5167  001B26                     u3501:
  5168  001B26  EF99  F00D         	goto	l986
  5169  001B2A                     u3500:
  5170  001B2A                     l3210:
  5171  001B2A  0E01               	movlw	1
  5172  001B2C  6E0E               	movwf	___fladd@aexp^0,c
  5173  001B2E  EFA2  F00D         	goto	l985
  5174  001B32                     l986:
  5175  001B32  A001               	btfss	___fladd@b^0,0,c
  5176  001B34  EF9E  F00D         	goto	u3511
  5177  001B38  EFA0  F00D         	goto	u3510
  5178  001B3C                     u3511:
  5179  001B3C  EFA2  F00D         	goto	l985
  5180  001B40                     u3510:
  5181  001B40  EF95  F00D         	goto	l3210
  5182  001B44                     l985:
  5183  001B44  500E               	movf	___fladd@aexp^0,w,c
  5184  001B46  B4D8               	btfsc	status,2,c
  5185  001B48  EFA8  F00D         	goto	u3521
  5186  001B4C  EFAA  F00D         	goto	u3520
  5187  001B50                     u3521:
  5188  001B50  EFD5  F00D         	goto	l3222
  5189  001B54                     u3520:
  5190  001B54  0E01               	movlw	1
  5191  001B56  2601               	addwf	___fladd@b^0,f,c
  5192  001B58  0E00               	movlw	0
  5193  001B5A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5194  001B5C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5195  001B5E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5196  001B60  A004               	btfss	(___fladd@b+3)^0,0,c
  5197  001B62  EFB5  F00D         	goto	u3531
  5198  001B66  EFB7  F00D         	goto	u3530
  5199  001B6A                     u3531:
  5200  001B6A  EFD5  F00D         	goto	l3222
  5201  001B6E                     u3530:
  5202  001B6E  C001  F009         	movff	___fladd@b,??___fladd
  5203  001B72  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5204  001B76  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5205  001B7A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5206  001B7E  340C               	rlcf	(??___fladd+3)^0,w,c
  5207  001B80  320C               	rrcf	(??___fladd+3)^0,f,c
  5208  001B82  320B               	rrcf	(??___fladd+2)^0,f,c
  5209  001B84  320A               	rrcf	(??___fladd+1)^0,f,c
  5210  001B86  3209               	rrcf	??___fladd^0,f,c
  5211  001B88  C009  F001         	movff	??___fladd,___fladd@b
  5212  001B8C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5213  001B90  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5214  001B94  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5215  001B98  280F               	incf	___fladd@bexp^0,w,c
  5216  001B9A  B4D8               	btfsc	status,2,c
  5217  001B9C  EFD2  F00D         	goto	u3541
  5218  001BA0  EFD4  F00D         	goto	u3540
  5219  001BA4                     u3541:
  5220  001BA4  EFD5  F00D         	goto	l3222
  5221  001BA8                     u3540:
  5222  001BA8  2A0F               	incf	___fladd@bexp^0,f,c
  5223  001BAA                     l3222:
  5224  001BAA  280F               	incf	___fladd@bexp^0,w,c
  5225  001BAC  B4D8               	btfsc	status,2,c
  5226  001BAE  EFDB  F00D         	goto	u3551
  5227  001BB2  EFDD  F00D         	goto	u3550
  5228  001BB6                     u3551:
  5229  001BB6  EFE5  F00D         	goto	l3226
  5230  001BBA                     u3550:
  5231  001BBA  500F               	movf	___fladd@bexp^0,w,c
  5232  001BBC  A4D8               	btfss	status,2,c
  5233  001BBE  EFE3  F00D         	goto	u3561
  5234  001BC2  EFE5  F00D         	goto	u3560
  5235  001BC6                     u3561:
  5236  001BC6  EFF7  F00D         	goto	l3230
  5237  001BCA                     u3560:
  5238  001BCA                     l3226:
  5239  001BCA  0E00               	movlw	0
  5240  001BCC  6E01               	movwf	___fladd@b^0,c
  5241  001BCE  0E00               	movlw	0
  5242  001BD0  6E02               	movwf	(___fladd@b+1)^0,c
  5243  001BD2  0E00               	movlw	0
  5244  001BD4  6E03               	movwf	(___fladd@b+2)^0,c
  5245  001BD6  0E00               	movlw	0
  5246  001BD8  6E04               	movwf	(___fladd@b+3)^0,c
  5247  001BDA  500F               	movf	___fladd@bexp^0,w,c
  5248  001BDC  A4D8               	btfss	status,2,c
  5249  001BDE  EFF3  F00D         	goto	u3571
  5250  001BE2  EFF5  F00D         	goto	u3570
  5251  001BE6                     u3571:
  5252  001BE6  EFF7  F00D         	goto	l3230
  5253  001BEA                     u3570:
  5254  001BEA  0E00               	movlw	0
  5255  001BEC  6E0D               	movwf	___fladd@signs^0,c
  5256  001BEE                     l3230:
  5257  001BEE  A00F               	btfss	___fladd@bexp^0,0,c
  5258  001BF0  EFFC  F00D         	goto	u3581
  5259  001BF4  EFFE  F00D         	goto	u3580
  5260  001BF8                     u3581:
  5261  001BF8  EF01  F00E         	goto	l3234
  5262  001BFC                     u3580:
  5263  001BFC  8E03               	bsf	(___fladd@b+2)^0,7,c
  5264  001BFE  EF02  F00E         	goto	l3236
  5265  001C02                     l3234:
  5266  001C02  9E03               	bcf	(___fladd@b+2)^0,7,c
  5267  001C04                     l3236:
  5268  001C04  90D8               	bcf	status,0,c
  5269  001C06  300F               	rrcf	___fladd@bexp^0,w,c
  5270  001C08  6E04               	movwf	(___fladd@b+3)^0,c
  5271  001C0A  AE0D               	btfss	___fladd@signs^0,7,c
  5272  001C0C  EF0A  F00E         	goto	u3591
  5273  001C10  EF0C  F00E         	goto	u3590
  5274  001C14                     u3591:
  5275  001C14  EF0D  F00E         	goto	l3242
  5276  001C18                     u3590:
  5277  001C18  8E04               	bsf	(___fladd@b+3)^0,7,c
  5278  001C1A                     l3242:
  5279  001C1A  C001  F001         	movff	___fladd@b,?___fladd
  5280  001C1E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5281  001C22  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5282  001C26  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5283  001C2A                     l968:
  5284  001C2A  0012               	return		;funcret
  5285  001C2C                     __end_of___fladd:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function ___almod *****************
  5289 ;; Defined at:
  5290 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  dividend        4   14[COMRAM] long 
  5293 ;;  divisor         4   18[COMRAM] long 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  sign            1   23[COMRAM] unsigned char 
  5296 ;;  counter         1   22[COMRAM] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  4   14[COMRAM] long 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5306 ;;      Params:         8       0       0       0       0       0       0
  5307 ;;      Locals:         2       0       0       0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0
  5309 ;;      Totals:        10       0       0       0       0       0       0
  5310 ;;Total ram usage:       10 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_escolheTempo
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text9
  5320  002AB4                     __ptext9:
  5321                           	callstack 0
  5322  002AB4                     ___almod:
  5323                           	callstack 29
  5324  002AB4  0E00               	movlw	0
  5325  002AB6  6E18               	movwf	___almod@sign^0,c
  5326  002AB8  BE12               	btfsc	(___almod@dividend+3)^0,7,c
  5327  002ABA  EF63  F015         	goto	u3150
  5328  002ABE  EF61  F015         	goto	u3151
  5329  002AC2                     u3151:
  5330  002AC2  EF6D  F015         	goto	l3016
  5331  002AC6                     u3150:
  5332  002AC6  1E12               	comf	(___almod@dividend+3)^0,f,c
  5333  002AC8  1E11               	comf	(___almod@dividend+2)^0,f,c
  5334  002ACA  1E10               	comf	(___almod@dividend+1)^0,f,c
  5335  002ACC  6C0F               	negf	___almod@dividend^0,c
  5336  002ACE  0E00               	movlw	0
  5337  002AD0  2210               	addwfc	(___almod@dividend+1)^0,f,c
  5338  002AD2  2211               	addwfc	(___almod@dividend+2)^0,f,c
  5339  002AD4  2212               	addwfc	(___almod@dividend+3)^0,f,c
  5340  002AD6  0E01               	movlw	1
  5341  002AD8  6E18               	movwf	___almod@sign^0,c
  5342  002ADA                     l3016:
  5343  002ADA  BE16               	btfsc	(___almod@divisor+3)^0,7,c
  5344  002ADC  EF74  F015         	goto	u3160
  5345  002AE0  EF72  F015         	goto	u3161
  5346  002AE4                     u3161:
  5347  002AE4  EF7C  F015         	goto	l3020
  5348  002AE8                     u3160:
  5349  002AE8  1E16               	comf	(___almod@divisor+3)^0,f,c
  5350  002AEA  1E15               	comf	(___almod@divisor+2)^0,f,c
  5351  002AEC  1E14               	comf	(___almod@divisor+1)^0,f,c
  5352  002AEE  6C13               	negf	___almod@divisor^0,c
  5353  002AF0  0E00               	movlw	0
  5354  002AF2  2214               	addwfc	(___almod@divisor+1)^0,f,c
  5355  002AF4  2215               	addwfc	(___almod@divisor+2)^0,f,c
  5356  002AF6  2216               	addwfc	(___almod@divisor+3)^0,f,c
  5357  002AF8                     l3020:
  5358  002AF8  5013               	movf	___almod@divisor^0,w,c
  5359  002AFA  1014               	iorwf	(___almod@divisor+1)^0,w,c
  5360  002AFC  1015               	iorwf	(___almod@divisor+2)^0,w,c
  5361  002AFE  1016               	iorwf	(___almod@divisor+3)^0,w,c
  5362  002B00  B4D8               	btfsc	status,2,c
  5363  002B02  EF85  F015         	goto	u3171
  5364  002B06  EF87  F015         	goto	u3170
  5365  002B0A                     u3171:
  5366  002B0A  EFB7  F015         	goto	l3036
  5367  002B0E                     u3170:
  5368  002B0E  0E01               	movlw	1
  5369  002B10  6E17               	movwf	___almod@counter^0,c
  5370  002B12  EF91  F015         	goto	l3026
  5371  002B16                     l3024:
  5372  002B16  90D8               	bcf	status,0,c
  5373  002B18  3613               	rlcf	___almod@divisor^0,f,c
  5374  002B1A  3614               	rlcf	(___almod@divisor+1)^0,f,c
  5375  002B1C  3615               	rlcf	(___almod@divisor+2)^0,f,c
  5376  002B1E  3616               	rlcf	(___almod@divisor+3)^0,f,c
  5377  002B20  2A17               	incf	___almod@counter^0,f,c
  5378  002B22                     l3026:
  5379  002B22  AE16               	btfss	(___almod@divisor+3)^0,7,c
  5380  002B24  EF96  F015         	goto	u3181
  5381  002B28  EF98  F015         	goto	u3180
  5382  002B2C                     u3181:
  5383  002B2C  EF8B  F015         	goto	l3024
  5384  002B30                     u3180:
  5385  002B30                     l3028:
  5386  002B30  5013               	movf	___almod@divisor^0,w,c
  5387  002B32  5C0F               	subwf	___almod@dividend^0,w,c
  5388  002B34  5014               	movf	(___almod@divisor+1)^0,w,c
  5389  002B36  5810               	subwfb	(___almod@dividend+1)^0,w,c
  5390  002B38  5015               	movf	(___almod@divisor+2)^0,w,c
  5391  002B3A  5811               	subwfb	(___almod@dividend+2)^0,w,c
  5392  002B3C  5016               	movf	(___almod@divisor+3)^0,w,c
  5393  002B3E  5812               	subwfb	(___almod@dividend+3)^0,w,c
  5394  002B40  A0D8               	btfss	status,0,c
  5395  002B42  EFA5  F015         	goto	u3191
  5396  002B46  EFA7  F015         	goto	u3190
  5397  002B4A                     u3191:
  5398  002B4A  EFAF  F015         	goto	l3032
  5399  002B4E                     u3190:
  5400  002B4E  5013               	movf	___almod@divisor^0,w,c
  5401  002B50  5E0F               	subwf	___almod@dividend^0,f,c
  5402  002B52  5014               	movf	(___almod@divisor+1)^0,w,c
  5403  002B54  5A10               	subwfb	(___almod@dividend+1)^0,f,c
  5404  002B56  5015               	movf	(___almod@divisor+2)^0,w,c
  5405  002B58  5A11               	subwfb	(___almod@dividend+2)^0,f,c
  5406  002B5A  5016               	movf	(___almod@divisor+3)^0,w,c
  5407  002B5C  5A12               	subwfb	(___almod@dividend+3)^0,f,c
  5408  002B5E                     l3032:
  5409  002B5E  90D8               	bcf	status,0,c
  5410  002B60  3216               	rrcf	(___almod@divisor+3)^0,f,c
  5411  002B62  3215               	rrcf	(___almod@divisor+2)^0,f,c
  5412  002B64  3214               	rrcf	(___almod@divisor+1)^0,f,c
  5413  002B66  3213               	rrcf	___almod@divisor^0,f,c
  5414  002B68  2E17               	decfsz	___almod@counter^0,f,c
  5415  002B6A  EF98  F015         	goto	l3028
  5416  002B6E                     l3036:
  5417  002B6E  5018               	movf	___almod@sign^0,w,c
  5418  002B70  B4D8               	btfsc	status,2,c
  5419  002B72  EFBD  F015         	goto	u3201
  5420  002B76  EFBF  F015         	goto	u3200
  5421  002B7A                     u3201:
  5422  002B7A  EFC7  F015         	goto	l3040
  5423  002B7E                     u3200:
  5424  002B7E  1E12               	comf	(___almod@dividend+3)^0,f,c
  5425  002B80  1E11               	comf	(___almod@dividend+2)^0,f,c
  5426  002B82  1E10               	comf	(___almod@dividend+1)^0,f,c
  5427  002B84  6C0F               	negf	___almod@dividend^0,c
  5428  002B86  0E00               	movlw	0
  5429  002B88  2210               	addwfc	(___almod@dividend+1)^0,f,c
  5430  002B8A  2211               	addwfc	(___almod@dividend+2)^0,f,c
  5431  002B8C  2212               	addwfc	(___almod@dividend+3)^0,f,c
  5432  002B8E                     l3040:
  5433  002B8E  C00F  F00F         	movff	___almod@dividend,?___almod
  5434  002B92  C010  F010         	movff	___almod@dividend+1,?___almod+1
  5435  002B96  C011  F011         	movff	___almod@dividend+2,?___almod+2
  5436  002B9A  C012  F012         	movff	___almod@dividend+3,?___almod+3
  5437  002B9E  0012               	return		;funcret
  5438  002BA0                     __end_of___almod:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _escolheComida *****************
  5442 ;; Defined at:
  5443 ;;		line 336 in file "newmain2.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  msg3           23   38[COMRAM] unsigned char [23]
  5448 ;;  msg3           19   80[COMRAM] unsigned char [19]
  5449 ;;  msg3           24   14[COMRAM] unsigned char [24]
  5450 ;;  msg3           19   61[COMRAM] unsigned char [19]
  5451 ;;  tecla           2  104[COMRAM] unsigned int 
  5452 ;;  flag            2  102[COMRAM] unsigned int 
  5453 ;;  aux             2  100[COMRAM] int 
  5454 ;;  i               1  106[COMRAM] unsigned char 
  5455 ;;  k               1   99[COMRAM] unsigned char 
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5465 ;;      Params:         0       0       0       0       0       0       0
  5466 ;;      Locals:        93       0       0       0       0       0       0
  5467 ;;      Temps:          3       0       0       0       0       0       0
  5468 ;;      Totals:        96       0       0       0       0       0       0
  5469 ;;Total ram usage:       96 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; Hardware stack levels required when called: 4
  5472 ;; This function calls:
  5473 ;;		_atraso_ms
  5474 ;;		_kpDebounce
  5475 ;;		_kpInit
  5476 ;;		_kpRead
  5477 ;;		_lcdCommand
  5478 ;;		_lcdData
  5479 ;;		_lcdPosition
  5480 ;;		_strcmp
  5481 ;; This function is called by:
  5482 ;;		_main
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text10
  5487  001C2C                     __ptext10:
  5488                           	callstack 0
  5489  001C2C                     _escolheComida:
  5490                           	callstack 26
  5491  001C2C                     
  5492                           ;newmain2.c: 338:     char i = 0, k = 0;
  5493  001C2C  0E00               	movlw	0
  5494  001C2E  6E6B               	movwf	escolheComida@i^0,c
  5495  001C30  0E00               	movlw	0
  5496  001C32  6E64               	movwf	escolheComida@k^0,c
  5497                           
  5498                           ;newmain2.c: 339:     int aux = 1;
  5499  001C34  0E00               	movlw	0
  5500  001C36  6E66               	movwf	(escolheComida@aux+1)^0,c
  5501  001C38  0E01               	movlw	1
  5502  001C3A  6E65               	movwf	escolheComida@aux^0,c
  5503                           
  5504                           ;newmain2.c: 340:     unsigned int flag = 1;
  5505  001C3C  0E00               	movlw	0
  5506  001C3E  6E68               	movwf	(escolheComida@flag+1)^0,c
  5507  001C40  0E01               	movlw	1
  5508  001C42  6E67               	movwf	escolheComida@flag^0,c
  5509  001C44                     
  5510                           ;newmain2.c: 341:     kpInit();
  5511  001C44  EC55  F019         	call	_kpInit	;wreg free
  5512  001C48                     
  5513                           ;newmain2.c: 342:     tecla = kpRead();
  5514  001C48  EC50  F019         	call	_kpRead	;wreg free
  5515  001C4C  C001  F069         	movff	?_kpRead,escolheComida@tecla
  5516  001C50  C002  F06A         	movff	?_kpRead+1,escolheComida@tecla+1
  5517                           
  5518                           ;newmain2.c: 344:     while (aux != 0) {
  5519  001C54  EFE8  F00F         	goto	l3394
  5520  001C58                     l3274:
  5521                           
  5522                           ;newmain2.c: 345:         kpDebounce();
  5523  001C58  EC40  F012         	call	_kpDebounce	;wreg free
  5524  001C5C                     
  5525                           ;newmain2.c: 347:         if (tecla != kpRead) {
  5526  001C5C  0EA0               	movlw	low _kpRead
  5527  001C5E  1869               	xorwf	escolheComida@tecla^0,w,c
  5528  001C60  E109               	bnz	u3650
  5529  001C62  0E32               	movlw	high _kpRead
  5530  001C64  186A               	xorwf	(escolheComida@tecla+1)^0,w,c
  5531  001C66  B4D8               	btfsc	status,2,c
  5532  001C68  EF38  F00E         	goto	u3651
  5533  001C6C  EF3A  F00E         	goto	u3650
  5534  001C70                     u3651:
  5535  001C70  EFE4  F00F         	goto	l3392
  5536  001C74                     u3650:
  5537  001C74                     
  5538                           ;newmain2.c: 348:             tecla = kpRead();
  5539  001C74  EC50  F019         	call	_kpRead	;wreg free
  5540  001C78  C001  F069         	movff	?_kpRead,escolheComida@tecla
  5541  001C7C  C002  F06A         	movff	?_kpRead+1,escolheComida@tecla+1
  5542  001C80                     
  5543                           ;newmain2.c: 349:             if (((tecla) & (1<<(3)))&& (flag == 0)) {
  5544  001C80  A669               	btfss	escolheComida@tecla^0,3,c
  5545  001C82  EF45  F00E         	goto	u3661
  5546  001C86  EF47  F00E         	goto	u3660
  5547  001C8A                     u3661:
  5548  001C8A  EFA9  F00E         	goto	l3308
  5549  001C8E                     u3660:
  5550  001C8E  5067               	movf	escolheComida@flag^0,w,c
  5551  001C90  1068               	iorwf	(escolheComida@flag+1)^0,w,c
  5552  001C92  A4D8               	btfss	status,2,c
  5553  001C94  EF4E  F00E         	goto	u3671
  5554  001C98  EF50  F00E         	goto	u3670
  5555  001C9C                     u3671:
  5556  001C9C  EFA9  F00E         	goto	l3308
  5557  001CA0                     u3670:
  5558  001CA0                     
  5559                           ;newmain2.c: 350:                 lcdCommand(0x01);
  5560  001CA0  0E01               	movlw	1
  5561  001CA2  EC69  F016         	call	_lcdCommand
  5562                           
  5563                           ;newmain2.c: 351:                 lcdCommand(0xF0);
  5564  001CA6  0EF0               	movlw	240
  5565  001CA8  EC69  F016         	call	_lcdCommand
  5566  001CAC                     
  5567                           ;newmain2.c: 353:                 char msg3[19] = "Escolhido:\nFrango";
  5568  001CAC  EE20  F0C2         	lfsr	2,escolheComida@F2980
  5569  001CB0  EE10  F03E         	lfsr	1,escolheComida@msg3
  5570  001CB4  0E12               	movlw	18
  5571  001CB6                     u3681:
  5572  001CB6  CFDB FFE3          	movff	plusw2,plusw1
  5573  001CBA  06E8               	decf	wreg,f,c
  5574  001CBC  E2FC               	bc	u3681
  5575  001CBE                     
  5576                           ;newmain2.c: 354:                 for (i = 0; i < 19; i++) {
  5577  001CBE  0E00               	movlw	0
  5578  001CC0  6E6B               	movwf	escolheComida@i^0,c
  5579  001CC2                     l3294:
  5580                           
  5581                           ;newmain2.c: 355:                     lcdData(msg3[i]);
  5582  001CC2  0E3E               	movlw	low escolheComida@msg3
  5583  001CC4  246B               	addwf	escolheComida@i^0,w,c
  5584  001CC6  6ED9               	movwf	fsr2l,c
  5585  001CC8  6ADA               	clrf	fsr2h,c
  5586  001CCA  0E00               	movlw	high escolheComida@msg3
  5587  001CCC  22DA               	addwfc	fsr2h,f,c
  5588  001CCE  50DF               	movf	indf2,w,c
  5589  001CD0  ECDC  F018         	call	_lcdData
  5590  001CD4                     
  5591                           ;newmain2.c: 356:                     if (strcmp(msg3[i], '\n') == 0) {
  5592  001CD4  0E3E               	movlw	low escolheComida@msg3
  5593  001CD6  246B               	addwf	escolheComida@i^0,w,c
  5594  001CD8  6ED9               	movwf	fsr2l,c
  5595  001CDA  6ADA               	clrf	fsr2h,c
  5596  001CDC  0E00               	movlw	high escolheComida@msg3
  5597  001CDE  22DA               	addwfc	fsr2h,f,c
  5598  001CE0  50DF               	movf	indf2,w,c
  5599  001CE2  6E0C               	movwf	??_escolheComida^0,c
  5600  001CE4  6A0D               	clrf	(??_escolheComida+1)^0,c
  5601  001CE6  6A0E               	clrf	(??_escolheComida+2)^0,c
  5602  001CE8  C00C  F001         	movff	??_escolheComida,strcmp@l
  5603  001CEC  C00D  F002         	movff	??_escolheComida+1,strcmp@l+1
  5604  001CF0  C00E  F003         	movff	??_escolheComida+2,strcmp@l+2
  5605  001CF4  0E0A               	movlw	10
  5606  001CF6  6E04               	movwf	strcmp@r^0,c
  5607  001CF8  0E00               	movlw	0
  5608  001CFA  6E05               	movwf	(strcmp@r+1)^0,c
  5609  001CFC  0E00               	movlw	0
  5610  001CFE  6E06               	movwf	(strcmp@r+2)^0,c
  5611  001D00  ECD0  F015         	call	_strcmp	;wreg free
  5612  001D04  5001               	movf	?_strcmp^0,w,c
  5613  001D06  1002               	iorwf	(?_strcmp+1)^0,w,c
  5614  001D08  A4D8               	btfss	status,2,c
  5615  001D0A  EF89  F00E         	goto	u3691
  5616  001D0E  EF8B  F00E         	goto	u3690
  5617  001D12                     u3691:
  5618  001D12  EF8E  F00E         	goto	l3300
  5619  001D16                     u3690:
  5620  001D16                     
  5621                           ;newmain2.c: 357:                         lcdCommand(0xC0);
  5622  001D16  0EC0               	movlw	192
  5623  001D18  EC69  F016         	call	_lcdCommand
  5624  001D1C                     l3300:
  5625                           
  5626                           ;newmain2.c: 360:                 }
  5627  001D1C  2A6B               	incf	escolheComida@i^0,f,c
  5628  001D1E  0E12               	movlw	18
  5629  001D20  646B               	cpfsgt	escolheComida@i^0,c
  5630  001D22  EF95  F00E         	goto	u3701
  5631  001D26  EF97  F00E         	goto	u3700
  5632  001D2A                     u3701:
  5633  001D2A  EF61  F00E         	goto	l3294
  5634  001D2E                     u3700:
  5635  001D2E                     
  5636                           ;newmain2.c: 362:                 atraso_ms(2000);
  5637  001D2E  0E07               	movlw	7
  5638  001D30  6E02               	movwf	(atraso_ms@t+1)^0,c
  5639  001D32  0ED0               	movlw	208
  5640  001D34  6E01               	movwf	atraso_ms@t^0,c
  5641  001D36  ECC8  F017         	call	_atraso_ms	;wreg free
  5642                           
  5643                           ;newmain2.c: 363:                 lcdCommand(0x01);
  5644  001D3A  0E01               	movlw	1
  5645  001D3C  EC69  F016         	call	_lcdCommand
  5646                           
  5647                           ;newmain2.c: 364:                 lcdPosition(0, 0);
  5648  001D40  0E00               	movlw	0
  5649  001D42  6E09               	movwf	lcdPosition@coluna^0,c
  5650  001D44  0E00               	movlw	0
  5651  001D46  EC93  F017         	call	_lcdPosition
  5652  001D4A                     
  5653                           ;newmain2.c: 365:                 aux = 0;
  5654  001D4A  0E00               	movlw	0
  5655  001D4C  6E66               	movwf	(escolheComida@aux+1)^0,c
  5656  001D4E  0E00               	movlw	0
  5657  001D50  6E65               	movwf	escolheComida@aux^0,c
  5658  001D52                     l3308:
  5659                           
  5660                           ;newmain2.c: 367:             if (((tecla) & (1<<(7)))&& (flag == 0)) {
  5661  001D52  AE69               	btfss	escolheComida@tecla^0,7,c
  5662  001D54  EFAE  F00E         	goto	u3711
  5663  001D58  EFB0  F00E         	goto	u3710
  5664  001D5C                     u3711:
  5665  001D5C  EF12  F00F         	goto	l3336
  5666  001D60                     u3710:
  5667  001D60  5067               	movf	escolheComida@flag^0,w,c
  5668  001D62  1068               	iorwf	(escolheComida@flag+1)^0,w,c
  5669  001D64  A4D8               	btfss	status,2,c
  5670  001D66  EFB7  F00E         	goto	u3721
  5671  001D6A  EFB9  F00E         	goto	u3720
  5672  001D6E                     u3721:
  5673  001D6E  EF12  F00F         	goto	l3336
  5674  001D72                     u3720:
  5675  001D72                     
  5676                           ;newmain2.c: 369:                 lcdCommand(0x01);
  5677  001D72  0E01               	movlw	1
  5678  001D74  EC69  F016         	call	_lcdCommand
  5679                           
  5680                           ;newmain2.c: 370:                 lcdCommand(0xF0);
  5681  001D78  0EF0               	movlw	240
  5682  001D7A  EC69  F016         	call	_lcdCommand
  5683  001D7E                     
  5684                           ;newmain2.c: 372:                 char msg3[24] = "Escolhido:\nCarne Bovina";
  5685  001D7E  EE20  F080         	lfsr	2,escolheComida@F2982
  5686  001D82  EE10  F00F         	lfsr	1,escolheComida@msg3_312
  5687  001D86  0E17               	movlw	23
  5688  001D88                     u3731:
  5689  001D88  CFDB FFE3          	movff	plusw2,plusw1
  5690  001D8C  06E8               	decf	wreg,f,c
  5691  001D8E  E2FC               	bc	u3731
  5692  001D90                     
  5693                           ;newmain2.c: 373:                 for (i = 0; i < 24; i++) {
  5694  001D90  0E00               	movlw	0
  5695  001D92  6E6B               	movwf	escolheComida@i^0,c
  5696  001D94                     l3322:
  5697                           
  5698                           ;newmain2.c: 374:                     lcdData(msg3[i]);
  5699  001D94  0E0F               	movlw	low escolheComida@msg3_312
  5700  001D96  246B               	addwf	escolheComida@i^0,w,c
  5701  001D98  6ED9               	movwf	fsr2l,c
  5702  001D9A  6ADA               	clrf	fsr2h,c
  5703  001D9C  0E00               	movlw	high escolheComida@msg3_312
  5704  001D9E  22DA               	addwfc	fsr2h,f,c
  5705  001DA0  50DF               	movf	indf2,w,c
  5706  001DA2  ECDC  F018         	call	_lcdData
  5707  001DA6                     
  5708                           ;newmain2.c: 375:                     if (strcmp(msg3[i], '\n') == 0) {
  5709  001DA6  0E0F               	movlw	low escolheComida@msg3_312
  5710  001DA8  246B               	addwf	escolheComida@i^0,w,c
  5711  001DAA  6ED9               	movwf	fsr2l,c
  5712  001DAC  6ADA               	clrf	fsr2h,c
  5713  001DAE  0E00               	movlw	high escolheComida@msg3_312
  5714  001DB0  22DA               	addwfc	fsr2h,f,c
  5715  001DB2  50DF               	movf	indf2,w,c
  5716  001DB4  6E0C               	movwf	??_escolheComida^0,c
  5717  001DB6  6A0D               	clrf	(??_escolheComida+1)^0,c
  5718  001DB8  6A0E               	clrf	(??_escolheComida+2)^0,c
  5719  001DBA  C00C  F001         	movff	??_escolheComida,strcmp@l
  5720  001DBE  C00D  F002         	movff	??_escolheComida+1,strcmp@l+1
  5721  001DC2  C00E  F003         	movff	??_escolheComida+2,strcmp@l+2
  5722  001DC6  0E0A               	movlw	10
  5723  001DC8  6E04               	movwf	strcmp@r^0,c
  5724  001DCA  0E00               	movlw	0
  5725  001DCC  6E05               	movwf	(strcmp@r+1)^0,c
  5726  001DCE  0E00               	movlw	0
  5727  001DD0  6E06               	movwf	(strcmp@r+2)^0,c
  5728  001DD2  ECD0  F015         	call	_strcmp	;wreg free
  5729  001DD6  5001               	movf	?_strcmp^0,w,c
  5730  001DD8  1002               	iorwf	(?_strcmp+1)^0,w,c
  5731  001DDA  A4D8               	btfss	status,2,c
  5732  001DDC  EFF2  F00E         	goto	u3741
  5733  001DE0  EFF4  F00E         	goto	u3740
  5734  001DE4                     u3741:
  5735  001DE4  EFF7  F00E         	goto	l3328
  5736  001DE8                     u3740:
  5737  001DE8                     
  5738                           ;newmain2.c: 376:                         lcdCommand(0xC0);
  5739  001DE8  0EC0               	movlw	192
  5740  001DEA  EC69  F016         	call	_lcdCommand
  5741  001DEE                     l3328:
  5742                           
  5743                           ;newmain2.c: 379:                 }
  5744  001DEE  2A6B               	incf	escolheComida@i^0,f,c
  5745  001DF0  0E17               	movlw	23
  5746  001DF2  646B               	cpfsgt	escolheComida@i^0,c
  5747  001DF4  EFFE  F00E         	goto	u3751
  5748  001DF8  EF00  F00F         	goto	u3750
  5749  001DFC                     u3751:
  5750  001DFC  EFCA  F00E         	goto	l3322
  5751  001E00                     u3750:
  5752  001E00                     
  5753                           ;newmain2.c: 381:                 atraso_ms(2000);
  5754  001E00  0E07               	movlw	7
  5755  001E02  6E02               	movwf	(atraso_ms@t+1)^0,c
  5756  001E04  0ED0               	movlw	208
  5757  001E06  6E01               	movwf	atraso_ms@t^0,c
  5758  001E08  ECC8  F017         	call	_atraso_ms	;wreg free
  5759                           
  5760                           ;newmain2.c: 382:                 lcdCommand(0x01);
  5761  001E0C  0E01               	movlw	1
  5762  001E0E  EC69  F016         	call	_lcdCommand
  5763                           
  5764                           ;newmain2.c: 383:                 lcdPosition(0, 0);
  5765  001E12  0E00               	movlw	0
  5766  001E14  6E09               	movwf	lcdPosition@coluna^0,c
  5767  001E16  0E00               	movlw	0
  5768  001E18  EC93  F017         	call	_lcdPosition
  5769  001E1C                     
  5770                           ;newmain2.c: 384:                 aux = 0;
  5771  001E1C  0E00               	movlw	0
  5772  001E1E  6E66               	movwf	(escolheComida@aux+1)^0,c
  5773  001E20  0E00               	movlw	0
  5774  001E22  6E65               	movwf	escolheComida@aux^0,c
  5775  001E24                     l3336:
  5776                           
  5777                           ;newmain2.c: 387:             if (((tecla) & (1<<(2)))&& (flag == 0)) {
  5778  001E24  A469               	btfss	escolheComida@tecla^0,2,c
  5779  001E26  EF17  F00F         	goto	u3761
  5780  001E2A  EF19  F00F         	goto	u3760
  5781  001E2E                     u3761:
  5782  001E2E  EF7B  F00F         	goto	l3364
  5783  001E32                     u3760:
  5784  001E32  5067               	movf	escolheComida@flag^0,w,c
  5785  001E34  1068               	iorwf	(escolheComida@flag+1)^0,w,c
  5786  001E36  A4D8               	btfss	status,2,c
  5787  001E38  EF20  F00F         	goto	u3771
  5788  001E3C  EF22  F00F         	goto	u3770
  5789  001E40                     u3771:
  5790  001E40  EF7B  F00F         	goto	l3364
  5791  001E44                     u3770:
  5792  001E44                     
  5793                           ;newmain2.c: 389:                 lcdCommand(0x01);
  5794  001E44  0E01               	movlw	1
  5795  001E46  EC69  F016         	call	_lcdCommand
  5796                           
  5797                           ;newmain2.c: 390:                 lcdCommand(0xF0);
  5798  001E4A  0EF0               	movlw	240
  5799  001E4C  EC69  F016         	call	_lcdCommand
  5800  001E50                     
  5801                           ;newmain2.c: 391:                 char msg3[19] = "Escolhido:\nFeijao";
  5802  001E50  EE20  F0AF         	lfsr	2,escolheComida@F2984
  5803  001E54  EE10  F051         	lfsr	1,escolheComida@msg3_314
  5804  001E58  0E12               	movlw	18
  5805  001E5A                     u3781:
  5806  001E5A  CFDB FFE3          	movff	plusw2,plusw1
  5807  001E5E  06E8               	decf	wreg,f,c
  5808  001E60  E2FC               	bc	u3781
  5809  001E62                     
  5810                           ;newmain2.c: 392:                 for (i = 0; i < 19; i++) {
  5811  001E62  0E00               	movlw	0
  5812  001E64  6E6B               	movwf	escolheComida@i^0,c
  5813  001E66                     l3350:
  5814                           
  5815                           ;newmain2.c: 393:                     lcdData(msg3[i]);
  5816  001E66  0E51               	movlw	low escolheComida@msg3_314
  5817  001E68  246B               	addwf	escolheComida@i^0,w,c
  5818  001E6A  6ED9               	movwf	fsr2l,c
  5819  001E6C  6ADA               	clrf	fsr2h,c
  5820  001E6E  0E00               	movlw	high escolheComida@msg3_314
  5821  001E70  22DA               	addwfc	fsr2h,f,c
  5822  001E72  50DF               	movf	indf2,w,c
  5823  001E74  ECDC  F018         	call	_lcdData
  5824  001E78                     
  5825                           ;newmain2.c: 394:                     if (strcmp(msg3[i], '\n') == 0) {
  5826  001E78  0E51               	movlw	low escolheComida@msg3_314
  5827  001E7A  246B               	addwf	escolheComida@i^0,w,c
  5828  001E7C  6ED9               	movwf	fsr2l,c
  5829  001E7E  6ADA               	clrf	fsr2h,c
  5830  001E80  0E00               	movlw	high escolheComida@msg3_314
  5831  001E82  22DA               	addwfc	fsr2h,f,c
  5832  001E84  50DF               	movf	indf2,w,c
  5833  001E86  6E0C               	movwf	??_escolheComida^0,c
  5834  001E88  6A0D               	clrf	(??_escolheComida+1)^0,c
  5835  001E8A  6A0E               	clrf	(??_escolheComida+2)^0,c
  5836  001E8C  C00C  F001         	movff	??_escolheComida,strcmp@l
  5837  001E90  C00D  F002         	movff	??_escolheComida+1,strcmp@l+1
  5838  001E94  C00E  F003         	movff	??_escolheComida+2,strcmp@l+2
  5839  001E98  0E0A               	movlw	10
  5840  001E9A  6E04               	movwf	strcmp@r^0,c
  5841  001E9C  0E00               	movlw	0
  5842  001E9E  6E05               	movwf	(strcmp@r+1)^0,c
  5843  001EA0  0E00               	movlw	0
  5844  001EA2  6E06               	movwf	(strcmp@r+2)^0,c
  5845  001EA4  ECD0  F015         	call	_strcmp	;wreg free
  5846  001EA8  5001               	movf	?_strcmp^0,w,c
  5847  001EAA  1002               	iorwf	(?_strcmp+1)^0,w,c
  5848  001EAC  A4D8               	btfss	status,2,c
  5849  001EAE  EF5B  F00F         	goto	u3791
  5850  001EB2  EF5D  F00F         	goto	u3790
  5851  001EB6                     u3791:
  5852  001EB6  EF60  F00F         	goto	l3356
  5853  001EBA                     u3790:
  5854  001EBA                     
  5855                           ;newmain2.c: 395:                         lcdCommand(0xC0);
  5856  001EBA  0EC0               	movlw	192
  5857  001EBC  EC69  F016         	call	_lcdCommand
  5858  001EC0                     l3356:
  5859                           
  5860                           ;newmain2.c: 397:                 }
  5861  001EC0  2A6B               	incf	escolheComida@i^0,f,c
  5862  001EC2  0E12               	movlw	18
  5863  001EC4  646B               	cpfsgt	escolheComida@i^0,c
  5864  001EC6  EF67  F00F         	goto	u3801
  5865  001ECA  EF69  F00F         	goto	u3800
  5866  001ECE                     u3801:
  5867  001ECE  EF33  F00F         	goto	l3350
  5868  001ED2                     u3800:
  5869  001ED2                     
  5870                           ;newmain2.c: 399:                 atraso_ms(2000);
  5871  001ED2  0E07               	movlw	7
  5872  001ED4  6E02               	movwf	(atraso_ms@t+1)^0,c
  5873  001ED6  0ED0               	movlw	208
  5874  001ED8  6E01               	movwf	atraso_ms@t^0,c
  5875  001EDA  ECC8  F017         	call	_atraso_ms	;wreg free
  5876                           
  5877                           ;newmain2.c: 400:                 lcdCommand(0x01);
  5878  001EDE  0E01               	movlw	1
  5879  001EE0  EC69  F016         	call	_lcdCommand
  5880                           
  5881                           ;newmain2.c: 401:                 lcdPosition(0, 0);
  5882  001EE4  0E00               	movlw	0
  5883  001EE6  6E09               	movwf	lcdPosition@coluna^0,c
  5884  001EE8  0E00               	movlw	0
  5885  001EEA  EC93  F017         	call	_lcdPosition
  5886  001EEE                     
  5887                           ;newmain2.c: 402:                 aux = 0;
  5888  001EEE  0E00               	movlw	0
  5889  001EF0  6E66               	movwf	(escolheComida@aux+1)^0,c
  5890  001EF2  0E00               	movlw	0
  5891  001EF4  6E65               	movwf	escolheComida@aux^0,c
  5892  001EF6                     l3364:
  5893                           
  5894                           ;newmain2.c: 404:             if (((tecla) & (1<<(6)))&& (flag == 0)) {
  5895  001EF6  AC69               	btfss	escolheComida@tecla^0,6,c
  5896  001EF8  EF80  F00F         	goto	u3811
  5897  001EFC  EF82  F00F         	goto	u3810
  5898  001F00                     u3811:
  5899  001F00  EFE4  F00F         	goto	l3392
  5900  001F04                     u3810:
  5901  001F04  5067               	movf	escolheComida@flag^0,w,c
  5902  001F06  1068               	iorwf	(escolheComida@flag+1)^0,w,c
  5903  001F08  A4D8               	btfss	status,2,c
  5904  001F0A  EF89  F00F         	goto	u3821
  5905  001F0E  EF8B  F00F         	goto	u3820
  5906  001F12                     u3821:
  5907  001F12  EFE4  F00F         	goto	l3392
  5908  001F16                     u3820:
  5909  001F16                     
  5910                           ;newmain2.c: 406:                 lcdCommand(0x01);
  5911  001F16  0E01               	movlw	1
  5912  001F18  EC69  F016         	call	_lcdCommand
  5913                           
  5914                           ;newmain2.c: 407:                 lcdCommand(0xF0);
  5915  001F1C  0EF0               	movlw	240
  5916  001F1E  EC69  F016         	call	_lcdCommand
  5917  001F22                     
  5918                           ;newmain2.c: 409:                 char msg3[23] = "Escolhido:\nCarne Suina";
  5919  001F22  EE20  F098         	lfsr	2,escolheComida@F2986
  5920  001F26  EE10  F027         	lfsr	1,escolheComida@msg3_316
  5921  001F2A  0E16               	movlw	22
  5922  001F2C                     u3831:
  5923  001F2C  CFDB FFE3          	movff	plusw2,plusw1
  5924  001F30  06E8               	decf	wreg,f,c
  5925  001F32  E2FC               	bc	u3831
  5926  001F34                     
  5927                           ;newmain2.c: 410:                 for (i = 0; i < 23; i++) {
  5928  001F34  0E00               	movlw	0
  5929  001F36  6E6B               	movwf	escolheComida@i^0,c
  5930  001F38                     l3378:
  5931                           
  5932                           ;newmain2.c: 411:                     lcdData(msg3[i]);
  5933  001F38  0E27               	movlw	low escolheComida@msg3_316
  5934  001F3A  246B               	addwf	escolheComida@i^0,w,c
  5935  001F3C  6ED9               	movwf	fsr2l,c
  5936  001F3E  6ADA               	clrf	fsr2h,c
  5937  001F40  0E00               	movlw	high escolheComida@msg3_316
  5938  001F42  22DA               	addwfc	fsr2h,f,c
  5939  001F44  50DF               	movf	indf2,w,c
  5940  001F46  ECDC  F018         	call	_lcdData
  5941  001F4A                     
  5942                           ;newmain2.c: 412:                     if (strcmp(msg3[i], '\n') == 0) {
  5943  001F4A  0E27               	movlw	low escolheComida@msg3_316
  5944  001F4C  246B               	addwf	escolheComida@i^0,w,c
  5945  001F4E  6ED9               	movwf	fsr2l,c
  5946  001F50  6ADA               	clrf	fsr2h,c
  5947  001F52  0E00               	movlw	high escolheComida@msg3_316
  5948  001F54  22DA               	addwfc	fsr2h,f,c
  5949  001F56  50DF               	movf	indf2,w,c
  5950  001F58  6E0C               	movwf	??_escolheComida^0,c
  5951  001F5A  6A0D               	clrf	(??_escolheComida+1)^0,c
  5952  001F5C  6A0E               	clrf	(??_escolheComida+2)^0,c
  5953  001F5E  C00C  F001         	movff	??_escolheComida,strcmp@l
  5954  001F62  C00D  F002         	movff	??_escolheComida+1,strcmp@l+1
  5955  001F66  C00E  F003         	movff	??_escolheComida+2,strcmp@l+2
  5956  001F6A  0E0A               	movlw	10
  5957  001F6C  6E04               	movwf	strcmp@r^0,c
  5958  001F6E  0E00               	movlw	0
  5959  001F70  6E05               	movwf	(strcmp@r+1)^0,c
  5960  001F72  0E00               	movlw	0
  5961  001F74  6E06               	movwf	(strcmp@r+2)^0,c
  5962  001F76  ECD0  F015         	call	_strcmp	;wreg free
  5963  001F7A  5001               	movf	?_strcmp^0,w,c
  5964  001F7C  1002               	iorwf	(?_strcmp+1)^0,w,c
  5965  001F7E  A4D8               	btfss	status,2,c
  5966  001F80  EFC4  F00F         	goto	u3841
  5967  001F84  EFC6  F00F         	goto	u3840
  5968  001F88                     u3841:
  5969  001F88  EFC9  F00F         	goto	l3384
  5970  001F8C                     u3840:
  5971  001F8C                     
  5972                           ;newmain2.c: 413:                         lcdCommand(0xC0);
  5973  001F8C  0EC0               	movlw	192
  5974  001F8E  EC69  F016         	call	_lcdCommand
  5975  001F92                     l3384:
  5976                           
  5977                           ;newmain2.c: 416:                 }
  5978  001F92  2A6B               	incf	escolheComida@i^0,f,c
  5979  001F94  0E16               	movlw	22
  5980  001F96  646B               	cpfsgt	escolheComida@i^0,c
  5981  001F98  EFD0  F00F         	goto	u3851
  5982  001F9C  EFD2  F00F         	goto	u3850
  5983  001FA0                     u3851:
  5984  001FA0  EF9C  F00F         	goto	l3378
  5985  001FA4                     u3850:
  5986  001FA4                     
  5987                           ;newmain2.c: 418:                 atraso_ms(2000);
  5988  001FA4  0E07               	movlw	7
  5989  001FA6  6E02               	movwf	(atraso_ms@t+1)^0,c
  5990  001FA8  0ED0               	movlw	208
  5991  001FAA  6E01               	movwf	atraso_ms@t^0,c
  5992  001FAC  ECC8  F017         	call	_atraso_ms	;wreg free
  5993                           
  5994                           ;newmain2.c: 419:                 lcdCommand(0x01);
  5995  001FB0  0E01               	movlw	1
  5996  001FB2  EC69  F016         	call	_lcdCommand
  5997                           
  5998                           ;newmain2.c: 420:                 lcdPosition(0, 0);
  5999  001FB6  0E00               	movlw	0
  6000  001FB8  6E09               	movwf	lcdPosition@coluna^0,c
  6001  001FBA  0E00               	movlw	0
  6002  001FBC  EC93  F017         	call	_lcdPosition
  6003  001FC0                     
  6004                           ;newmain2.c: 421:                 aux = 0;
  6005  001FC0  0E00               	movlw	0
  6006  001FC2  6E66               	movwf	(escolheComida@aux+1)^0,c
  6007  001FC4  0E00               	movlw	0
  6008  001FC6  6E65               	movwf	escolheComida@aux^0,c
  6009  001FC8                     l3392:
  6010                           
  6011                           ;newmain2.c: 426:         flag = 0;
  6012  001FC8  0E00               	movlw	0
  6013  001FCA  6E68               	movwf	(escolheComida@flag+1)^0,c
  6014  001FCC  0E00               	movlw	0
  6015  001FCE  6E67               	movwf	escolheComida@flag^0,c
  6016  001FD0                     l3394:
  6017                           
  6018                           ;newmain2.c: 344:     while (aux != 0) {
  6019  001FD0  5065               	movf	escolheComida@aux^0,w,c
  6020  001FD2  1066               	iorwf	(escolheComida@aux+1)^0,w,c
  6021  001FD4  A4D8               	btfss	status,2,c
  6022  001FD6  EFEF  F00F         	goto	u3861
  6023  001FDA  EFF1  F00F         	goto	u3860
  6024  001FDE                     u3861:
  6025  001FDE  EF2C  F00E         	goto	l3274
  6026  001FE2                     u3860:
  6027  001FE2  0012               	return		;funcret
  6028  001FE4                     __end_of_escolheComida:
  6029                           	callstack 0
  6030                           
  6031 ;; *************** function _strcmp *****************
  6032 ;; Defined at:
  6033 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcmp.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  l               3    0[COMRAM] PTR const unsigned char 
  6036 ;;		 -> ROM(32767), 
  6037 ;;  r               3    3[COMRAM] PTR const unsigned char 
  6038 ;;		 -> ROM(32767), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2    0[COMRAM] int 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6050 ;;      Params:         6       0       0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0
  6052 ;;      Temps:          1       0       0       0       0       0       0
  6053 ;;      Totals:         7       0       0       0       0       0       0
  6054 ;;Total ram usage:        7 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;;		_escolheTempo
  6061 ;;		_escolheComida
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text11
  6066  002BA0                     __ptext11:
  6067                           	callstack 0
  6068  002BA0                     _strcmp:
  6069                           	callstack 30
  6070  002BA0  EFDE  F015         	goto	l2982
  6071  002BA4                     l2980:
  6072  002BA4  0E01               	movlw	1
  6073  002BA6  2601               	addwf	strcmp@l^0,f,c
  6074  002BA8  0E00               	movlw	0
  6075  002BAA  2202               	addwfc	(strcmp@l+1)^0,f,c
  6076  002BAC  0E00               	movlw	0
  6077  002BAE  2203               	addwfc	(strcmp@l+2)^0,f,c
  6078  002BB0  0E01               	movlw	1
  6079  002BB2  2604               	addwf	strcmp@r^0,f,c
  6080  002BB4  0E00               	movlw	0
  6081  002BB6  2205               	addwfc	(strcmp@r+1)^0,f,c
  6082  002BB8  0E00               	movlw	0
  6083  002BBA  2206               	addwfc	(strcmp@r+2)^0,f,c
  6084  002BBC                     l2982:
  6085  002BBC  C004  FFF6         	movff	strcmp@r,tblptrl
  6086  002BC0  C005  FFF7         	movff	strcmp@r+1,tblptrh
  6087  002BC4  C006  FFF8         	movff	strcmp@r+2,tblptru
  6088  002BC8  0008               	tblrd		*
  6089  002BCA  50F5               	movf	tablat,w,c
  6090  002BCC  C001  FFF6         	movff	strcmp@l,tblptrl
  6091  002BD0  C002  FFF7         	movff	strcmp@l+1,tblptrh
  6092  002BD4  C003  FFF8         	movff	strcmp@l+2,tblptru
  6093  002BD8  0008               	tblrd		*
  6094  002BDA  CFF5 F007          	movff	tablat,??_strcmp
  6095  002BDE  1807               	xorwf	??_strcmp^0,w,c
  6096  002BE0  A4D8               	btfss	status,2,c
  6097  002BE2  EFF5  F015         	goto	u3131
  6098  002BE6  EFF7  F015         	goto	u3130
  6099  002BEA                     u3131:
  6100  002BEA  EF07  F016         	goto	l2986
  6101  002BEE                     u3130:
  6102  002BEE  C001  FFF6         	movff	strcmp@l,tblptrl
  6103  002BF2  C002  FFF7         	movff	strcmp@l+1,tblptrh
  6104  002BF6  C003  FFF8         	movff	strcmp@l+2,tblptru
  6105  002BFA  0008               	tblrd		*
  6106  002BFC  50F5               	movf	tablat,w,c
  6107  002BFE  0900               	iorlw	0
  6108  002C00  A4D8               	btfss	status,2,c
  6109  002C02  EF05  F016         	goto	u3141
  6110  002C06  EF07  F016         	goto	u3140
  6111  002C0A                     u3141:
  6112  002C0A  EFD2  F015         	goto	l2980
  6113  002C0E                     u3140:
  6114  002C0E                     l2986:
  6115  002C0E  C004  FFF6         	movff	strcmp@r,tblptrl
  6116  002C12  C005  FFF7         	movff	strcmp@r+1,tblptrh
  6117  002C16  C006  FFF8         	movff	strcmp@r+2,tblptru
  6118  002C1A  0008               	tblrd		*
  6119  002C1C  50F5               	movf	tablat,w,c
  6120  002C1E  C001  FFF6         	movff	strcmp@l,tblptrl
  6121  002C22  C002  FFF7         	movff	strcmp@l+1,tblptrh
  6122  002C26  C003  FFF8         	movff	strcmp@l+2,tblptru
  6123  002C2A  0008               	tblrd		*
  6124  002C2C  CFF5 F007          	movff	tablat,??_strcmp
  6125  002C30  5C07               	subwf	??_strcmp^0,w,c
  6126  002C32  6E01               	movwf	?_strcmp^0,c
  6127  002C34  6A02               	clrf	(?_strcmp+1)^0,c
  6128  002C36  A0D8               	btfss	status,0,c
  6129  002C38  0602               	decf	(?_strcmp+1)^0,f,c
  6130  002C3A  0012               	return		;funcret
  6131  002C3C                     __end_of_strcmp:
  6132                           	callstack 0
  6133                           
  6134 ;; *************** function _lcdPosition *****************
  6135 ;; Defined at:
  6136 ;;		line 120 in file "lcd.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  linha           1    wreg     unsigned char 
  6139 ;;  coluna          1    8[COMRAM] unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  linha           1   10[COMRAM] unsigned char 
  6142 ;;  comando         1    9[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6152 ;;      Params:         1       0       0       0       0       0       0
  6153 ;;      Locals:         2       0       0       0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0
  6155 ;;      Totals:         3       0       0       0       0       0       0
  6156 ;;Total ram usage:        3 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; Hardware stack levels required when called: 3
  6159 ;; This function calls:
  6160 ;;		_lcdCommand
  6161 ;; This function is called by:
  6162 ;;		_main
  6163 ;;		_escolheTempo
  6164 ;;		_escolheComida
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text12
  6169  002F26                     __ptext12:
  6170                           	callstack 0
  6171  002F26                     _lcdPosition:
  6172                           	callstack 27
  6173                           
  6174                           ;incstack = 0
  6175                           ;lcdPosition@linha stored from wreg
  6176  002F26  6E0B               	movwf	lcdPosition@linha^0,c
  6177  002F28                     
  6178                           ;lcd.c: 121:     char comando = 0;
  6179  002F28  0E00               	movlw	0
  6180  002F2A  6E0A               	movwf	lcdPosition@comando^0,c
  6181  002F2C                     
  6182                           ;lcd.c: 123:     if(linha == 0) comando = 0x80 + coluna;
  6183  002F2C  500B               	movf	lcdPosition@linha^0,w,c
  6184  002F2E  A4D8               	btfss	status,2,c
  6185  002F30  EF9C  F017         	goto	u3021
  6186  002F34  EF9E  F017         	goto	u3020
  6187  002F38                     u3021:
  6188  002F38  EFA1  F017         	goto	l150
  6189  002F3C                     u3020:
  6190  002F3C  5009               	movf	lcdPosition@coluna^0,w,c
  6191  002F3E  0F80               	addlw	128
  6192  002F40  6E0A               	movwf	lcdPosition@comando^0,c
  6193  002F42                     l150:
  6194                           
  6195                           ;lcd.c: 124:     if(linha == 1) comando = 0xC0 + coluna;
  6196  002F42  040B               	decf	lcdPosition@linha^0,w,c
  6197  002F44  A4D8               	btfss	status,2,c
  6198  002F46  EFA7  F017         	goto	u3031
  6199  002F4A  EFA9  F017         	goto	u3030
  6200  002F4E                     u3031:
  6201  002F4E  EFAC  F017         	goto	l151
  6202  002F52                     u3030:
  6203  002F52  5009               	movf	lcdPosition@coluna^0,w,c
  6204  002F54  0FC0               	addlw	192
  6205  002F56  6E0A               	movwf	lcdPosition@comando^0,c
  6206  002F58                     l151:
  6207                           
  6208                           ;lcd.c: 125:     if(linha == 2) comando = 0x90 + coluna;
  6209  002F58  0E02               	movlw	2
  6210  002F5A  180B               	xorwf	lcdPosition@linha^0,w,c
  6211  002F5C  A4D8               	btfss	status,2,c
  6212  002F5E  EFB3  F017         	goto	u3041
  6213  002F62  EFB5  F017         	goto	u3040
  6214  002F66                     u3041:
  6215  002F66  EFB8  F017         	goto	l152
  6216  002F6A                     u3040:
  6217  002F6A  5009               	movf	lcdPosition@coluna^0,w,c
  6218  002F6C  0F90               	addlw	144
  6219  002F6E  6E0A               	movwf	lcdPosition@comando^0,c
  6220  002F70                     l152:
  6221                           
  6222                           ;lcd.c: 126:     if(linha == 3) comando = 0xD0 + coluna;
  6223  002F70  0E03               	movlw	3
  6224  002F72  180B               	xorwf	lcdPosition@linha^0,w,c
  6225  002F74  A4D8               	btfss	status,2,c
  6226  002F76  EFBF  F017         	goto	u3051
  6227  002F7A  EFC1  F017         	goto	u3050
  6228  002F7E                     u3051:
  6229  002F7E  EFC4  F017         	goto	l2886
  6230  002F82                     u3050:
  6231  002F82  5009               	movf	lcdPosition@coluna^0,w,c
  6232  002F84  0FD0               	addlw	208
  6233  002F86  6E0A               	movwf	lcdPosition@comando^0,c
  6234  002F88                     l2886:
  6235                           
  6236                           ;lcd.c: 128:     lcdCommand(comando);
  6237  002F88  500A               	movf	lcdPosition@comando^0,w,c
  6238  002F8A  EC69  F016         	call	_lcdCommand
  6239  002F8E  0012               	return		;funcret
  6240  002F90                     __end_of_lcdPosition:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _kpRead *****************
  6244 ;; Defined at:
  6245 ;;		line 35 in file "keypad.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  2    0[COMRAM] unsigned int 
  6252 ;; Registers used:
  6253 ;;		None
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6259 ;;      Params:         2       0       0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0
  6262 ;;      Totals:         2       0       0       0       0       0       0
  6263 ;;Total ram usage:        2 bytes
  6264 ;; Hardware stack levels used: 1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_main
  6269 ;;		_escolheTempo
  6270 ;;		_escolheComida
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text13
  6275  0032A0                     __ptext13:
  6276                           	callstack 0
  6277  0032A0                     _kpRead:
  6278                           	callstack 30
  6279  0032A0                     
  6280                           ;keypad.c: 36:     return valor;
  6281  0032A0  C073  F001         	movff	_valor,?_kpRead
  6282  0032A4  C074  F002         	movff	_valor+1,?_kpRead+1
  6283  0032A8  0012               	return		;funcret
  6284  0032AA                     __end_of_kpRead:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _kpInit *****************
  6288 ;; Defined at:
  6289 ;;		line 87 in file "keypad.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6303 ;;      Params:         0       0       0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;;		_escolheTempo
  6314 ;;		_escolheComida
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text14
  6319  0032AA                     __ptext14:
  6320                           	callstack 0
  6321  0032AA                     _kpInit:
  6322                           	callstack 30
  6323  0032AA                     
  6324                           ;keypad.c: 89:     TRISB &= 0x07;
  6325  0032AA  0E07               	movlw	7
  6326  0032AC  1693               	andwf	147,f,c	;volatile
  6327                           
  6328                           ;keypad.c: 91:     TRISD |= 0x0f;
  6329  0032AE  0E0F               	movlw	15
  6330  0032B0  1295               	iorwf	149,f,c	;volatile
  6331  0032B2  0012               	return		;funcret
  6332  0032B4                     __end_of_kpInit:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function _kpDebounce *****************
  6336 ;; Defined at:
  6337 ;;		line 39 in file "keypad.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  k               2    6[COMRAM] int 
  6342 ;;  i               1    9[COMRAM] unsigned char 
  6343 ;;  j               1    8[COMRAM] unsigned char 
  6344 ;;  old_D           1    5[COMRAM] unsigned char 
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0, prodl, prodh
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6354 ;;      Params:         0       0       0       0       0       0       0
  6355 ;;      Locals:         5       0       0       0       0       0       0
  6356 ;;      Temps:          5       0       0       0       0       0       0
  6357 ;;      Totals:        10       0       0       0       0       0       0
  6358 ;;Total ram usage:       10 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_main
  6364 ;;		_escolheTempo
  6365 ;;		_escolheComida
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text15
  6370  002480                     __ptext15:
  6371                           	callstack 0
  6372  002480                     _kpDebounce:
  6373                           	callstack 30
  6374  002480                     
  6375                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  6376  002480  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  6377  002484                     
  6378                           ;keypad.c: 51:     TRISD |= 0x0f;
  6379  002484  0E0F               	movlw	15
  6380  002486  1295               	iorwf	149,f,c	;volatile
  6381  002488                     
  6382                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  6383  002488  0E00               	movlw	0
  6384  00248A  6E0A               	movwf	kpDebounce@i^0,c
  6385  00248C                     l2778:
  6386                           
  6387                           ;keypad.c: 55:         TRISB &= 0xF8;
  6388  00248C  0EF8               	movlw	248
  6389  00248E  1693               	andwf	147,f,c	;volatile
  6390                           
  6391                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  6392  002490  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6393  002494  0E01               	movlw	1
  6394  002496  6E02               	movwf	(??_kpDebounce+1)^0,c
  6395  002498  2A01               	incf	??_kpDebounce^0,f,c
  6396  00249A  EF51  F012         	goto	u2914
  6397  00249E                     u2915:
  6398  00249E  90D8               	bcf	status,0,c
  6399  0024A0  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6400  0024A2                     u2914:
  6401  0024A2  2E01               	decfsz	??_kpDebounce^0,f,c
  6402  0024A4  EF4F  F012         	goto	u2915
  6403  0024A8  5002               	movf	(??_kpDebounce+1)^0,w,c
  6404  0024AA  1293               	iorwf	147,f,c	;volatile
  6405                           
  6406                           ;keypad.c: 59:         PORTB |= 0x07;
  6407  0024AC  0E07               	movlw	7
  6408  0024AE  1281               	iorwf	129,f,c	;volatile
  6409                           
  6410                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  6411  0024B0  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6412  0024B4  0E01               	movlw	1
  6413  0024B6  6E02               	movwf	(??_kpDebounce+1)^0,c
  6414  0024B8  2A01               	incf	??_kpDebounce^0,f,c
  6415  0024BA  EF61  F012         	goto	u2924
  6416  0024BE                     u2925:
  6417  0024BE  90D8               	bcf	status,0,c
  6418  0024C0  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6419  0024C2                     u2924:
  6420  0024C2  2E01               	decfsz	??_kpDebounce^0,f,c
  6421  0024C4  EF5F  F012         	goto	u2925
  6422  0024C8  5002               	movf	(??_kpDebounce+1)^0,w,c
  6423  0024CA  0AFF               	xorlw	255
  6424  0024CC  1681               	andwf	129,f,c	;volatile
  6425  0024CE                     
  6426                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  6427  0024CE  0E00               	movlw	0
  6428  0024D0  6E08               	movwf	(kpDebounce@k+1)^0,c
  6429  0024D2  0E00               	movlw	0
  6430  0024D4  6E07               	movwf	kpDebounce@k^0,c
  6431  0024D6                     l2786:
  6432  0024D6  4A07               	infsnz	kpDebounce@k^0,f,c
  6433  0024D8  2A08               	incf	(kpDebounce@k+1)^0,f,c
  6434  0024DA  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  6435  0024DC  EF79  F012         	goto	u2931
  6436  0024E0  5008               	movf	(kpDebounce@k+1)^0,w,c
  6437  0024E2  E109               	bnz	u2930
  6438  0024E4  0E0A               	movlw	10
  6439  0024E6  5C07               	subwf	kpDebounce@k^0,w,c
  6440  0024E8  A0D8               	btfss	status,0,c
  6441  0024EA  EF79  F012         	goto	u2931
  6442  0024EE  EF7B  F012         	goto	u2930
  6443  0024F2                     u2931:
  6444  0024F2  EF6B  F012         	goto	l2786
  6445  0024F6                     u2930:
  6446  0024F6                     
  6447                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  6448  0024F6  0E00               	movlw	0
  6449  0024F8  6E09               	movwf	kpDebounce@j^0,c
  6450  0024FA                     l2796:
  6451                           
  6452                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  6453  0024FA  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  6454  0024FE  0E01               	movlw	1
  6455  002500  6E02               	movwf	(??_kpDebounce+1)^0,c
  6456  002502  2A01               	incf	??_kpDebounce^0,f,c
  6457  002504  EF86  F012         	goto	u2944
  6458  002508                     u2945:
  6459  002508  90D8               	bcf	status,0,c
  6460  00250A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6461  00250C                     u2944:
  6462  00250C  2E01               	decfsz	??_kpDebounce^0,f,c
  6463  00250E  EF84  F012         	goto	u2945
  6464  002512  5002               	movf	(??_kpDebounce+1)^0,w,c
  6465  002514  1483               	andwf	131,w,c	;volatile
  6466  002516  0900               	iorlw	0
  6467  002518  A4D8               	btfss	status,2,c
  6468  00251A  EF91  F012         	goto	u2951
  6469  00251E  EF93  F012         	goto	u2950
  6470  002522                     u2951:
  6471  002522  EFAB  F012         	goto	l2800
  6472  002526                     u2950:
  6473  002526                     
  6474                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  6475  002526  500A               	movf	kpDebounce@i^0,w,c
  6476  002528  0D04               	mullw	4
  6477  00252A  50F3               	movf	243,w,c
  6478  00252C  2409               	addwf	kpDebounce@j^0,w,c
  6479  00252E  6E01               	movwf	??_kpDebounce^0,c
  6480  002530  0E01               	movlw	1
  6481  002532  6E02               	movwf	(??_kpDebounce+1)^0,c
  6482  002534  0E00               	movlw	0
  6483  002536  6E03               	movwf	(??_kpDebounce+2)^0,c
  6484  002538  2A01               	incf	??_kpDebounce^0,f,c
  6485  00253A  EFA2  F012         	goto	u2964
  6486  00253E                     u2965:
  6487  00253E  90D8               	bcf	status,0,c
  6488  002540  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6489  002542  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6490  002544                     u2964:
  6491  002544  2E01               	decfsz	??_kpDebounce^0,f,c
  6492  002546  EF9F  F012         	goto	u2965
  6493  00254A  5002               	movf	(??_kpDebounce+1)^0,w,c
  6494  00254C  1271               	iorwf	kpDebounce@valorNovo^0,f,c
  6495  00254E  5003               	movf	(??_kpDebounce+2)^0,w,c
  6496  002550  1272               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  6497                           
  6498                           ;keypad.c: 69:             } else {
  6499  002552  EFC5  F012         	goto	l2802
  6500  002556                     l2800:
  6501                           
  6502                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  6503  002556  500A               	movf	kpDebounce@i^0,w,c
  6504  002558  0D04               	mullw	4
  6505  00255A  50F3               	movf	243,w,c
  6506  00255C  2409               	addwf	kpDebounce@j^0,w,c
  6507  00255E  6E01               	movwf	??_kpDebounce^0,c
  6508  002560  0E01               	movlw	1
  6509  002562  6E02               	movwf	(??_kpDebounce+1)^0,c
  6510  002564  0E00               	movlw	0
  6511  002566  6E03               	movwf	(??_kpDebounce+2)^0,c
  6512  002568  2A01               	incf	??_kpDebounce^0,f,c
  6513  00256A  EFBA  F012         	goto	u2974
  6514  00256E                     u2975:
  6515  00256E  90D8               	bcf	status,0,c
  6516  002570  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6517  002572  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6518  002574                     u2974:
  6519  002574  2E01               	decfsz	??_kpDebounce^0,f,c
  6520  002576  EFB7  F012         	goto	u2975
  6521  00257A  1C02               	comf	(??_kpDebounce+1)^0,w,c
  6522  00257C  6E04               	movwf	(??_kpDebounce+3)^0,c
  6523  00257E  1C03               	comf	(??_kpDebounce+2)^0,w,c
  6524  002580  6E05               	movwf	(??_kpDebounce+4)^0,c
  6525  002582  5004               	movf	(??_kpDebounce+3)^0,w,c
  6526  002584  1671               	andwf	kpDebounce@valorNovo^0,f,c
  6527  002586  5005               	movf	(??_kpDebounce+4)^0,w,c
  6528  002588  1672               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  6529  00258A                     l2802:
  6530                           
  6531                           ;keypad.c: 72:         }
  6532  00258A  2A09               	incf	kpDebounce@j^0,f,c
  6533  00258C  0E03               	movlw	3
  6534  00258E  6409               	cpfsgt	kpDebounce@j^0,c
  6535  002590  EFCC  F012         	goto	u2981
  6536  002594  EFCE  F012         	goto	u2980
  6537  002598                     u2981:
  6538  002598  EF7D  F012         	goto	l2796
  6539  00259C                     u2980:
  6540  00259C                     
  6541                           ;keypad.c: 73:     }
  6542  00259C  2A0A               	incf	kpDebounce@i^0,f,c
  6543  00259E  0E02               	movlw	2
  6544  0025A0  640A               	cpfsgt	kpDebounce@i^0,c
  6545  0025A2  EFD5  F012         	goto	u2991
  6546  0025A6  EFD7  F012         	goto	u2990
  6547  0025AA                     u2991:
  6548  0025AA  EF46  F012         	goto	l2778
  6549  0025AE                     u2990:
  6550  0025AE                     
  6551                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  6552  0025AE  5071               	movf	kpDebounce@valorNovo^0,w,c
  6553  0025B0  186F               	xorwf	kpDebounce@valorAntigo^0,w,c
  6554  0025B2  E107               	bnz	u3001
  6555  0025B4  5072               	movf	(kpDebounce@valorNovo+1)^0,w,c
  6556  0025B6  1870               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  6557  0025B8  A4D8               	btfss	status,2,c
  6558  0025BA  EFE1  F012         	goto	u3001
  6559  0025BE  EFE3  F012         	goto	u3000
  6560  0025C2                     u3001:
  6561  0025C2  EFE6  F012         	goto	l2814
  6562  0025C6                     u3000:
  6563  0025C6                     
  6564                           ;keypad.c: 75:         tempo--;
  6565  0025C6  067A               	decf	kpDebounce@tempo^0,f,c
  6566                           
  6567                           ;keypad.c: 76:     } else {
  6568  0025C8  EFEC  F012         	goto	l107
  6569  0025CC                     l2814:
  6570                           
  6571                           ;keypad.c: 77:         tempo = 10;
  6572  0025CC  0E0A               	movlw	10
  6573  0025CE  6E7A               	movwf	kpDebounce@tempo^0,c
  6574  0025D0                     
  6575                           ;keypad.c: 78:         valorAntigo = valorNovo;
  6576  0025D0  C071  F06F         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  6577  0025D4  C072  F070         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  6578  0025D8                     l107:
  6579                           
  6580                           ;keypad.c: 80:     if (tempo == 0) {
  6581  0025D8  507A               	movf	kpDebounce@tempo^0,w,c
  6582  0025DA  A4D8               	btfss	status,2,c
  6583  0025DC  EFF2  F012         	goto	u3011
  6584  0025E0  EFF4  F012         	goto	u3010
  6585  0025E4                     u3011:
  6586  0025E4  EFF8  F012         	goto	l108
  6587  0025E8                     u3010:
  6588  0025E8                     
  6589                           ;keypad.c: 81:         valor = valorAntigo;
  6590  0025E8  C06F  F073         	movff	kpDebounce@valorAntigo,_valor
  6591  0025EC  C070  F074         	movff	kpDebounce@valorAntigo+1,_valor+1
  6592  0025F0                     l108:
  6593                           
  6594                           ;keypad.c: 83:     PORTD = old_D;
  6595  0025F0  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  6596  0025F4                     
  6597                           ;keypad.c: 84:     TRISD = 0x00;
  6598  0025F4  0E00               	movlw	0
  6599  0025F6  6E95               	movwf	149,c	;volatile
  6600  0025F8  0012               	return		;funcret
  6601  0025FA                     __end_of_kpDebounce:
  6602                           	callstack 0
  6603                           
  6604 ;; *************** function _abreTampa *****************
  6605 ;; Defined at:
  6606 ;;		line 141 in file "newmain2.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  msg3           14   16[COMRAM] unsigned char [14]
  6611 ;;  msg2           13   43[COMRAM] unsigned char [13]
  6612 ;;  msg            13   30[COMRAM] unsigned char [13]
  6613 ;;  i               1   56[COMRAM] unsigned char 
  6614 ;;  k               1    0        unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6624 ;;      Params:         0       0       0       0       0       0       0
  6625 ;;      Locals:        41       0       0       0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0
  6627 ;;      Totals:        41       0       0       0       0       0       0
  6628 ;;Total ram usage:       41 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 3
  6631 ;; This function calls:
  6632 ;;		_atraso_ms
  6633 ;;		_lcdCommand
  6634 ;;		_lcdData
  6635 ;;		_pwmFrequency
  6636 ;;		_pwmInit
  6637 ;;		_pwmSet1
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text16
  6644  0025FA                     __ptext16:
  6645                           	callstack 0
  6646  0025FA                     _abreTampa:
  6647                           	callstack 27
  6648  0025FA  0E00               	movlw	0
  6649  0025FC  6E39               	movwf	abreTampa@i^0,c
  6650  0025FE                     
  6651                           ;newmain2.c: 145:     lcdCommand(0x01);
  6652  0025FE  0E01               	movlw	1
  6653  002600  EC69  F016         	call	_lcdCommand
  6654  002604                     
  6655                           ;newmain2.c: 146:     atraso_ms(2000);
  6656  002604  0E07               	movlw	7
  6657  002606  6E02               	movwf	(atraso_ms@t+1)^0,c
  6658  002608  0ED0               	movlw	208
  6659  00260A  6E01               	movwf	atraso_ms@t^0,c
  6660  00260C  ECC8  F017         	call	_atraso_ms	;wreg free
  6661  002610                     
  6662                           ;newmain2.c: 147:     char msg[13] = "Abrindo tampa";
  6663  002610  EE20  F0F0         	lfsr	2,abreTampa@F2950
  6664  002614  EE10  F01F         	lfsr	1,abreTampa@msg
  6665  002618  0E0C               	movlw	12
  6666  00261A                     u3871:
  6667  00261A  CFDB FFE3          	movff	plusw2,plusw1
  6668  00261E  06E8               	decf	wreg,f,c
  6669  002620  E2FC               	bc	u3871
  6670  002622                     
  6671                           ;newmain2.c: 148:     for (i = 0; i < 13; i++) {
  6672  002622  0E00               	movlw	0
  6673  002624  6E39               	movwf	abreTampa@i^0,c
  6674  002626                     l3410:
  6675                           
  6676                           ;newmain2.c: 149:         lcdData(msg[i]);
  6677  002626  0E1F               	movlw	low abreTampa@msg
  6678  002628  2439               	addwf	abreTampa@i^0,w,c
  6679  00262A  6ED9               	movwf	fsr2l,c
  6680  00262C  6ADA               	clrf	fsr2h,c
  6681  00262E  0E00               	movlw	high abreTampa@msg
  6682  002630  22DA               	addwfc	fsr2h,f,c
  6683  002632  50DF               	movf	indf2,w,c
  6684  002634  ECDC  F018         	call	_lcdData
  6685  002638                     
  6686                           ;newmain2.c: 150:     }
  6687  002638  2A39               	incf	abreTampa@i^0,f,c
  6688  00263A  0E0C               	movlw	12
  6689  00263C  6439               	cpfsgt	abreTampa@i^0,c
  6690  00263E  EF23  F013         	goto	u3881
  6691  002642  EF25  F013         	goto	u3880
  6692  002646                     u3881:
  6693  002646  EF13  F013         	goto	l3410
  6694  00264A                     u3880:
  6695  00264A                     
  6696                           ;newmain2.c: 152:     pwmInit();
  6697  00264A  EC46  F019         	call	_pwmInit	;wreg free
  6698  00264E                     
  6699                           ;newmain2.c: 153:     pwmSet1(32);
  6700  00264E  0E20               	movlw	32
  6701  002650  EC5D  F017         	call	_pwmSet1
  6702  002654                     
  6703                           ;newmain2.c: 154:     pwmFrequency(10000);
  6704  002654  0E27               	movlw	39
  6705  002656  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  6706  002658  0E10               	movlw	16
  6707  00265A  6E0F               	movwf	pwmFrequency@freq^0,c
  6708  00265C  EC19  F019         	call	_pwmFrequency	;wreg free
  6709  002660                     
  6710                           ;newmain2.c: 155:     atraso_ms(3000);
  6711  002660  0E0B               	movlw	11
  6712  002662  6E02               	movwf	(atraso_ms@t+1)^0,c
  6713  002664  0EB8               	movlw	184
  6714  002666  6E01               	movwf	atraso_ms@t^0,c
  6715  002668  ECC8  F017         	call	_atraso_ms	;wreg free
  6716  00266C                     
  6717                           ;newmain2.c: 156:     pwmSet1(0);
  6718  00266C  0E00               	movlw	0
  6719  00266E  EC5D  F017         	call	_pwmSet1
  6720                           
  6721                           ;newmain2.c: 157:     pwmFrequency(0);
  6722  002672  0E00               	movlw	0
  6723  002674  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  6724  002676  0E00               	movlw	0
  6725  002678  6E0F               	movwf	pwmFrequency@freq^0,c
  6726  00267A  EC19  F019         	call	_pwmFrequency	;wreg free
  6727                           
  6728                           ;newmain2.c: 158:     lcdCommand(0x01);
  6729  00267E  0E01               	movlw	1
  6730  002680  EC69  F016         	call	_lcdCommand
  6731                           
  6732                           ;newmain2.c: 159:     atraso_ms(1000);
  6733  002684  0E03               	movlw	3
  6734  002686  6E02               	movwf	(atraso_ms@t+1)^0,c
  6735  002688  0EE8               	movlw	232
  6736  00268A  6E01               	movwf	atraso_ms@t^0,c
  6737  00268C  ECC8  F017         	call	_atraso_ms	;wreg free
  6738  002690                     
  6739                           ;newmain2.c: 161:     char msg2[13] = "Insira a agua";
  6740  002690  EE20  F0E3         	lfsr	2,abreTampa@F2952
  6741  002694  EE10  F02C         	lfsr	1,abreTampa@msg2
  6742  002698  0E0C               	movlw	12
  6743  00269A                     u3891:
  6744  00269A  CFDB FFE3          	movff	plusw2,plusw1
  6745  00269E  06E8               	decf	wreg,f,c
  6746  0026A0  E2FC               	bc	u3891
  6747  0026A2                     
  6748                           ;newmain2.c: 162:     for (i = 0; i < 13; i++) {
  6749  0026A2  0E00               	movlw	0
  6750  0026A4  6E39               	movwf	abreTampa@i^0,c
  6751  0026A6                     l3434:
  6752                           
  6753                           ;newmain2.c: 163:         lcdData(msg2[i]);
  6754  0026A6  0E2C               	movlw	low abreTampa@msg2
  6755  0026A8  2439               	addwf	abreTampa@i^0,w,c
  6756  0026AA  6ED9               	movwf	fsr2l,c
  6757  0026AC  6ADA               	clrf	fsr2h,c
  6758  0026AE  0E00               	movlw	high abreTampa@msg2
  6759  0026B0  22DA               	addwfc	fsr2h,f,c
  6760  0026B2  50DF               	movf	indf2,w,c
  6761  0026B4  ECDC  F018         	call	_lcdData
  6762  0026B8                     
  6763                           ;newmain2.c: 164:     }
  6764  0026B8  2A39               	incf	abreTampa@i^0,f,c
  6765  0026BA  0E0C               	movlw	12
  6766  0026BC  6439               	cpfsgt	abreTampa@i^0,c
  6767  0026BE  EF63  F013         	goto	u3901
  6768  0026C2  EF65  F013         	goto	u3900
  6769  0026C6                     u3901:
  6770  0026C6  EF53  F013         	goto	l3434
  6771  0026CA                     u3900:
  6772  0026CA                     
  6773                           ;newmain2.c: 165:     atraso_ms(2000);
  6774  0026CA  0E07               	movlw	7
  6775  0026CC  6E02               	movwf	(atraso_ms@t+1)^0,c
  6776  0026CE  0ED0               	movlw	208
  6777  0026D0  6E01               	movwf	atraso_ms@t^0,c
  6778  0026D2  ECC8  F017         	call	_atraso_ms	;wreg free
  6779                           
  6780                           ;newmain2.c: 166:     lcdCommand(0x01);
  6781  0026D6  0E01               	movlw	1
  6782  0026D8  EC69  F016         	call	_lcdCommand
  6783  0026DC                     
  6784                           ;newmain2.c: 167:     char msg3[14] = "Fechando tampa";
  6785  0026DC  EE20  F0D5         	lfsr	2,abreTampa@F2954
  6786  0026E0  EE10  F011         	lfsr	1,abreTampa@msg3
  6787  0026E4  0E0D               	movlw	13
  6788  0026E6                     u3911:
  6789  0026E6  CFDB FFE3          	movff	plusw2,plusw1
  6790  0026EA  06E8               	decf	wreg,f,c
  6791  0026EC  E2FC               	bc	u3911
  6792  0026EE                     
  6793                           ;newmain2.c: 168:     for (i = 0; i < 14; i++) {
  6794  0026EE  0E00               	movlw	0
  6795  0026F0  6E39               	movwf	abreTampa@i^0,c
  6796  0026F2                     l3450:
  6797                           
  6798                           ;newmain2.c: 169:         lcdData(msg3[i]);
  6799  0026F2  0E11               	movlw	low abreTampa@msg3
  6800  0026F4  2439               	addwf	abreTampa@i^0,w,c
  6801  0026F6  6ED9               	movwf	fsr2l,c
  6802  0026F8  6ADA               	clrf	fsr2h,c
  6803  0026FA  0E00               	movlw	high abreTampa@msg3
  6804  0026FC  22DA               	addwfc	fsr2h,f,c
  6805  0026FE  50DF               	movf	indf2,w,c
  6806  002700  ECDC  F018         	call	_lcdData
  6807  002704                     
  6808                           ;newmain2.c: 170:     }
  6809  002704  2A39               	incf	abreTampa@i^0,f,c
  6810  002706  0E0D               	movlw	13
  6811  002708  6439               	cpfsgt	abreTampa@i^0,c
  6812  00270A  EF89  F013         	goto	u3921
  6813  00270E  EF8B  F013         	goto	u3920
  6814  002712                     u3921:
  6815  002712  EF79  F013         	goto	l3450
  6816  002716                     u3920:
  6817  002716                     
  6818                           ;newmain2.c: 172:     pwmSet1(32);
  6819  002716  0E20               	movlw	32
  6820  002718  EC5D  F017         	call	_pwmSet1
  6821  00271C                     
  6822                           ;newmain2.c: 173:     pwmFrequency(10000);
  6823  00271C  0E27               	movlw	39
  6824  00271E  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  6825  002720  0E10               	movlw	16
  6826  002722  6E0F               	movwf	pwmFrequency@freq^0,c
  6827  002724  EC19  F019         	call	_pwmFrequency	;wreg free
  6828  002728                     
  6829                           ;newmain2.c: 174:     atraso_ms(3000);
  6830  002728  0E0B               	movlw	11
  6831  00272A  6E02               	movwf	(atraso_ms@t+1)^0,c
  6832  00272C  0EB8               	movlw	184
  6833  00272E  6E01               	movwf	atraso_ms@t^0,c
  6834  002730  ECC8  F017         	call	_atraso_ms	;wreg free
  6835                           
  6836                           ;newmain2.c: 175:     pwmSet1(0);
  6837  002734  0E00               	movlw	0
  6838  002736  EC5D  F017         	call	_pwmSet1
  6839  00273A                     
  6840                           ;newmain2.c: 176:     pwmFrequency(0);
  6841  00273A  0E00               	movlw	0
  6842  00273C  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  6843  00273E  0E00               	movlw	0
  6844  002740  6E0F               	movwf	pwmFrequency@freq^0,c
  6845  002742  EC19  F019         	call	_pwmFrequency	;wreg free
  6846  002746                     
  6847                           ;newmain2.c: 177:     atraso_ms(2000);
  6848  002746  0E07               	movlw	7
  6849  002748  6E02               	movwf	(atraso_ms@t+1)^0,c
  6850  00274A  0ED0               	movlw	208
  6851  00274C  6E01               	movwf	atraso_ms@t^0,c
  6852  00274E  ECC8  F017         	call	_atraso_ms	;wreg free
  6853  002752  0012               	return		;funcret
  6854  002754                     __end_of_abreTampa:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function _pwmSet1 *****************
  6858 ;; Defined at:
  6859 ;;		line 23 in file "pwm.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  porcento        1    wreg     unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  porcento        1    9[COMRAM] unsigned char 
  6864 ;;  val             2   10[COMRAM] unsigned int 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6874 ;;      Params:         0       0       0       0       0       0       0
  6875 ;;      Locals:         3       0       0       0       0       0       0
  6876 ;;      Temps:          2       0       0       0       0       0       0
  6877 ;;      Totals:         5       0       0       0       0       0       0
  6878 ;;Total ram usage:        5 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; Hardware stack levels required when called: 1
  6881 ;; This function calls:
  6882 ;;		___lwdiv
  6883 ;;		___wmul
  6884 ;; This function is called by:
  6885 ;;		_abreTampa
  6886 ;;		_escolheTempo
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text17
  6891  002EBA                     __ptext17:
  6892                           	callstack 0
  6893  002EBA                     _pwmSet1:
  6894                           	callstack 28
  6895                           
  6896                           ;incstack = 0
  6897                           ;pwmSet1@porcento stored from wreg
  6898  002EBA  6E0A               	movwf	pwmSet1@porcento^0,c
  6899  002EBC                     
  6900                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  6901  002EBC  0E01               	movlw	1
  6902  002EBE  24CB               	addwf	203,w,c	;volatile
  6903  002EC0  6E01               	movwf	___wmul@multiplier^0,c
  6904  002EC2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6905  002EC4  0E00               	movlw	0
  6906  002EC6  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  6907  002EC8  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  6908  002ECC  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  6909  002ECE  EC06  F019         	call	___wmul	;wreg free
  6910  002ED2  C001  F00B         	movff	?___wmul,pwmSet1@val
  6911  002ED6  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  6912  002EDA                     
  6913                           ;pwm.c: 31:  val = val / 25;
  6914  002EDA  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  6915  002EDE  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  6916  002EE2  0E00               	movlw	0
  6917  002EE4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6918  002EE6  0E19               	movlw	25
  6919  002EE8  6E03               	movwf	___lwdiv@divisor^0,c
  6920  002EEA  EC23  F017         	call	___lwdiv	;wreg free
  6921  002EEE  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  6922  002EF2  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  6923  002EF6                     
  6924                           ;pwm.c: 33:  val &= 0x03ff;
  6925  002EF6  0EFF               	movlw	255
  6926  002EF8  160B               	andwf	pwmSet1@val^0,f,c
  6927  002EFA  0E03               	movlw	3
  6928  002EFC  160C               	andwf	(pwmSet1@val+1)^0,f,c
  6929  002EFE                     
  6930                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  6931  002EFE  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  6932  002F02  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  6933  002F06  90D8               	bcf	status,0,c
  6934  002F08  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  6935  002F0A  3208               	rrcf	??_pwmSet1^0,f,c
  6936  002F0C  90D8               	bcf	status,0,c
  6937  002F0E  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  6938  002F10  3208               	rrcf	??_pwmSet1^0,f,c
  6939  002F12  5008               	movf	??_pwmSet1^0,w,c
  6940  002F14  6EBE               	movwf	190,c	;volatile
  6941  002F16                     
  6942                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  6943  002F16  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  6944  002F1A  0E03               	movlw	3
  6945  002F1C  1608               	andwf	??_pwmSet1^0,f,c
  6946  002F1E  3808               	swapf	??_pwmSet1^0,w,c
  6947  002F20  0BF0               	andlw	240
  6948  002F22  12BD               	iorwf	189,f,c	;volatile
  6949  002F24  0012               	return		;funcret
  6950  002F26                     __end_of_pwmSet1:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function ___wmul *****************
  6954 ;; Defined at:
  6955 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  multiplier      2    0[COMRAM] unsigned int 
  6958 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  product         2    4[COMRAM] unsigned int 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  2    0[COMRAM] unsigned int 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0, prodl, prodh
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6970 ;;      Params:         4       0       0       0       0       0       0
  6971 ;;      Locals:         2       0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0
  6973 ;;      Totals:         6       0       0       0       0       0       0
  6974 ;;Total ram usage:        6 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_pwmSet1
  6980 ;;		_atraso_s
  6981 ;;		_pwmSet2
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text18
  6986  00320C                     __ptext18:
  6987                           	callstack 0
  6988  00320C                     ___wmul:
  6989                           	callstack 28
  6990  00320C  5001               	movf	___wmul@multiplier^0,w,c
  6991  00320E  0203               	mulwf	___wmul@multiplicand^0,c
  6992  003210  CFF3 F005          	movff	prodl,___wmul@product
  6993  003214  CFF4 F006          	movff	prodh,___wmul@product+1
  6994  003218  5001               	movf	___wmul@multiplier^0,w,c
  6995  00321A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6996  00321C  50F3               	movf	243,w,c
  6997  00321E  2606               	addwf	(___wmul@product+1)^0,f,c
  6998  003220  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6999  003222  0203               	mulwf	___wmul@multiplicand^0,c
  7000  003224  50F3               	movf	243,w,c
  7001  003226  2606               	addwf	(___wmul@product+1)^0,f,c
  7002  003228  C005  F001         	movff	___wmul@product,?___wmul
  7003  00322C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7004  003230  0012               	return		;funcret
  7005  003232                     __end_of___wmul:
  7006                           	callstack 0
  7007                           
  7008 ;; *************** function ___lwdiv *****************
  7009 ;; Defined at:
  7010 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  dividend        2    0[COMRAM] unsigned int 
  7013 ;;  divisor         2    2[COMRAM] unsigned int 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  quotient        2    4[COMRAM] unsigned int 
  7016 ;;  counter         1    6[COMRAM] unsigned char 
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  2    0[COMRAM] unsigned int 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7026 ;;      Params:         4       0       0       0       0       0       0
  7027 ;;      Locals:         3       0       0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0
  7029 ;;      Totals:         7       0       0       0       0       0       0
  7030 ;;Total ram usage:        7 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_pwmSet1
  7036 ;;		_pwmSet2
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text19
  7041  002E46                     __ptext19:
  7042                           	callstack 0
  7043  002E46                     ___lwdiv:
  7044                           	callstack 28
  7045  002E46  0E00               	movlw	0
  7046  002E48  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7047  002E4A  0E00               	movlw	0
  7048  002E4C  6E05               	movwf	___lwdiv@quotient^0,c
  7049  002E4E  5003               	movf	___lwdiv@divisor^0,w,c
  7050  002E50  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7051  002E52  B4D8               	btfsc	status,2,c
  7052  002E54  EF2E  F017         	goto	u2881
  7053  002E58  EF30  F017         	goto	u2880
  7054  002E5C                     u2881:
  7055  002E5C  EF58  F017         	goto	l922
  7056  002E60                     u2880:
  7057  002E60  0E01               	movlw	1
  7058  002E62  6E07               	movwf	___lwdiv@counter^0,c
  7059  002E64  EF38  F017         	goto	l2752
  7060  002E68                     l2750:
  7061  002E68  90D8               	bcf	status,0,c
  7062  002E6A  3603               	rlcf	___lwdiv@divisor^0,f,c
  7063  002E6C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7064  002E6E  2A07               	incf	___lwdiv@counter^0,f,c
  7065  002E70                     l2752:
  7066  002E70  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7067  002E72  EF3D  F017         	goto	u2891
  7068  002E76  EF3F  F017         	goto	u2890
  7069  002E7A                     u2891:
  7070  002E7A  EF34  F017         	goto	l2750
  7071  002E7E                     u2890:
  7072  002E7E                     l2754:
  7073  002E7E  90D8               	bcf	status,0,c
  7074  002E80  3605               	rlcf	___lwdiv@quotient^0,f,c
  7075  002E82  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7076  002E84  5003               	movf	___lwdiv@divisor^0,w,c
  7077  002E86  5C01               	subwf	___lwdiv@dividend^0,w,c
  7078  002E88  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7079  002E8A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7080  002E8C  A0D8               	btfss	status,0,c
  7081  002E8E  EF4B  F017         	goto	u2901
  7082  002E92  EF4D  F017         	goto	u2900
  7083  002E96                     u2901:
  7084  002E96  EF52  F017         	goto	l2762
  7085  002E9A                     u2900:
  7086  002E9A  5003               	movf	___lwdiv@divisor^0,w,c
  7087  002E9C  5E01               	subwf	___lwdiv@dividend^0,f,c
  7088  002E9E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7089  002EA0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7090  002EA2  8005               	bsf	___lwdiv@quotient^0,0,c
  7091  002EA4                     l2762:
  7092  002EA4  90D8               	bcf	status,0,c
  7093  002EA6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7094  002EA8  3203               	rrcf	___lwdiv@divisor^0,f,c
  7095  002EAA  2E07               	decfsz	___lwdiv@counter^0,f,c
  7096  002EAC  EF3F  F017         	goto	l2754
  7097  002EB0                     l922:
  7098  002EB0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7099  002EB4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7100  002EB8  0012               	return		;funcret
  7101  002EBA                     __end_of___lwdiv:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _pwmInit *****************
  7105 ;; Defined at:
  7106 ;;		line 59 in file "pwm.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7120 ;;      Params:         0       0       0       0       0       0       0
  7121 ;;      Locals:         0       0       0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0
  7123 ;;      Totals:         0       0       0       0       0       0       0
  7124 ;;Total ram usage:        0 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_abreTampa
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text20
  7134  00328C                     __ptext20:
  7135                           	callstack 0
  7136  00328C                     _pwmInit:
  7137                           	callstack 29
  7138  00328C                     
  7139                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  7140  00328C  9294               	bcf	148,1,c	;volatile
  7141                           
  7142                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  7143  00328E  9494               	bcf	148,2,c	;volatile
  7144  003290                     
  7145                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  7146  003290  0E03               	movlw	3
  7147  003292  12CA               	iorwf	202,f,c	;volatile
  7148  003294                     
  7149                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  7150  003294  84CA               	bsf	202,2,c	;volatile
  7151                           
  7152                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  7153  003296  0E0C               	movlw	12
  7154  003298  12BD               	iorwf	189,f,c	;volatile
  7155                           
  7156                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  7157  00329A  0E0C               	movlw	12
  7158  00329C  12BA               	iorwf	186,f,c	;volatile
  7159  00329E  0012               	return		;funcret
  7160  0032A0                     __end_of_pwmInit:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _pwmFrequency *****************
  7164 ;; Defined at:
  7165 ;;		line 52 in file "pwm.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  freq            2   14[COMRAM] unsigned int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7179 ;;      Params:         2       0       0       0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0
  7182 ;;      Totals:         2       0       0       0       0       0       0
  7183 ;;Total ram usage:        2 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 1
  7186 ;; This function calls:
  7187 ;;		___aldiv
  7188 ;; This function is called by:
  7189 ;;		_abreTampa
  7190 ;;		_escolheTempo
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text21
  7195  003232                     __ptext21:
  7196                           	callstack 0
  7197  003232                     _pwmFrequency:
  7198                           	callstack 28
  7199  003232                     
  7200                           ;pwm.c: 52: void pwmFrequency(unsigned int freq);pwm.c: 53: {;pwm.c: 56:  (*(volatile __
      +                          near unsigned char*)0xFCB) = (125000/(freq)) - 1;
  7201  003232  0E48               	movlw	72
  7202  003234  6E01               	movwf	___aldiv@dividend^0,c
  7203  003236  0EE8               	movlw	232
  7204  003238  6E02               	movwf	(___aldiv@dividend+1)^0,c
  7205  00323A  0E01               	movlw	1
  7206  00323C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  7207  00323E  0E00               	movlw	0
  7208  003240  6E04               	movwf	(___aldiv@dividend+3)^0,c
  7209  003242  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  7210  003246  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  7211  00324A  6A07               	clrf	(___aldiv@divisor+2)^0,c
  7212  00324C  6A08               	clrf	(___aldiv@divisor+3)^0,c
  7213  00324E  EC52  F014         	call	___aldiv	;wreg free
  7214  003252  0401               	decf	?___aldiv^0,w,c
  7215  003254  6ECB               	movwf	203,c	;volatile
  7216  003256  0012               	return		;funcret
  7217  003258                     __end_of_pwmFrequency:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function ___aldiv *****************
  7221 ;; Defined at:
  7222 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  dividend        4    0[COMRAM] long 
  7225 ;;  divisor         4    4[COMRAM] long 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  quotient        4   10[COMRAM] long 
  7228 ;;  sign            1    9[COMRAM] unsigned char 
  7229 ;;  counter         1    8[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  4    0[COMRAM] long 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7239 ;;      Params:         8       0       0       0       0       0       0
  7240 ;;      Locals:         6       0       0       0       0       0       0
  7241 ;;      Temps:          0       0       0       0       0       0       0
  7242 ;;      Totals:        14       0       0       0       0       0       0
  7243 ;;Total ram usage:       14 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_escolheTempo
  7249 ;;		_pwmFrequency
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text22
  7254  0028A4                     __ptext22:
  7255                           	callstack 0
  7256  0028A4                     ___aldiv:
  7257                           	callstack 28
  7258  0028A4  0E00               	movlw	0
  7259  0028A6  6E0A               	movwf	___aldiv@sign^0,c
  7260  0028A8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  7261  0028AA  EF5B  F014         	goto	u2820
  7262  0028AE  EF59  F014         	goto	u2821
  7263  0028B2                     u2821:
  7264  0028B2  EF65  F014         	goto	l2708
  7265  0028B6                     u2820:
  7266  0028B6  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  7267  0028B8  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  7268  0028BA  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  7269  0028BC  6C05               	negf	___aldiv@divisor^0,c
  7270  0028BE  0E00               	movlw	0
  7271  0028C0  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  7272  0028C2  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  7273  0028C4  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  7274  0028C6  0E01               	movlw	1
  7275  0028C8  6E0A               	movwf	___aldiv@sign^0,c
  7276  0028CA                     l2708:
  7277  0028CA  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  7278  0028CC  EF6C  F014         	goto	u2830
  7279  0028D0  EF6A  F014         	goto	u2831
  7280  0028D4                     u2831:
  7281  0028D4  EF76  F014         	goto	l2714
  7282  0028D8                     u2830:
  7283  0028D8  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  7284  0028DA  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  7285  0028DC  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  7286  0028DE  6C01               	negf	___aldiv@dividend^0,c
  7287  0028E0  0E00               	movlw	0
  7288  0028E2  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  7289  0028E4  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  7290  0028E6  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  7291  0028E8  0E01               	movlw	1
  7292  0028EA  1A0A               	xorwf	___aldiv@sign^0,f,c
  7293  0028EC                     l2714:
  7294  0028EC  0E00               	movlw	0
  7295  0028EE  6E0B               	movwf	___aldiv@quotient^0,c
  7296  0028F0  0E00               	movlw	0
  7297  0028F2  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  7298  0028F4  0E00               	movlw	0
  7299  0028F6  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  7300  0028F8  0E00               	movlw	0
  7301  0028FA  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  7302  0028FC  5005               	movf	___aldiv@divisor^0,w,c
  7303  0028FE  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  7304  002900  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  7305  002902  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  7306  002904  B4D8               	btfsc	status,2,c
  7307  002906  EF87  F014         	goto	u2841
  7308  00290A  EF89  F014         	goto	u2840
  7309  00290E                     u2841:
  7310  00290E  EFBF  F014         	goto	l2736
  7311  002912                     u2840:
  7312  002912  0E01               	movlw	1
  7313  002914  6E09               	movwf	___aldiv@counter^0,c
  7314  002916  EF93  F014         	goto	l2722
  7315  00291A                     l2720:
  7316  00291A  90D8               	bcf	status,0,c
  7317  00291C  3605               	rlcf	___aldiv@divisor^0,f,c
  7318  00291E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  7319  002920  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  7320  002922  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  7321  002924  2A09               	incf	___aldiv@counter^0,f,c
  7322  002926                     l2722:
  7323  002926  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  7324  002928  EF98  F014         	goto	u2851
  7325  00292C  EF9A  F014         	goto	u2850
  7326  002930                     u2851:
  7327  002930  EF8D  F014         	goto	l2720
  7328  002934                     u2850:
  7329  002934                     l2724:
  7330  002934  90D8               	bcf	status,0,c
  7331  002936  360B               	rlcf	___aldiv@quotient^0,f,c
  7332  002938  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  7333  00293A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  7334  00293C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  7335  00293E  5005               	movf	___aldiv@divisor^0,w,c
  7336  002940  5C01               	subwf	___aldiv@dividend^0,w,c
  7337  002942  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7338  002944  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  7339  002946  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7340  002948  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  7341  00294A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7342  00294C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  7343  00294E  A0D8               	btfss	status,0,c
  7344  002950  EFAC  F014         	goto	u2861
  7345  002954  EFAE  F014         	goto	u2860
  7346  002958                     u2861:
  7347  002958  EFB7  F014         	goto	l2732
  7348  00295C                     u2860:
  7349  00295C  5005               	movf	___aldiv@divisor^0,w,c
  7350  00295E  5E01               	subwf	___aldiv@dividend^0,f,c
  7351  002960  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7352  002962  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  7353  002964  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7354  002966  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  7355  002968  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7356  00296A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  7357  00296C  800B               	bsf	___aldiv@quotient^0,0,c
  7358  00296E                     l2732:
  7359  00296E  90D8               	bcf	status,0,c
  7360  002970  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  7361  002972  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  7362  002974  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  7363  002976  3205               	rrcf	___aldiv@divisor^0,f,c
  7364  002978  2E09               	decfsz	___aldiv@counter^0,f,c
  7365  00297A  EF9A  F014         	goto	l2724
  7366  00297E                     l2736:
  7367  00297E  500A               	movf	___aldiv@sign^0,w,c
  7368  002980  B4D8               	btfsc	status,2,c
  7369  002982  EFC5  F014         	goto	u2871
  7370  002986  EFC7  F014         	goto	u2870
  7371  00298A                     u2871:
  7372  00298A  EFCF  F014         	goto	l2740
  7373  00298E                     u2870:
  7374  00298E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  7375  002990  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  7376  002992  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  7377  002994  6C0B               	negf	___aldiv@quotient^0,c
  7378  002996  0E00               	movlw	0
  7379  002998  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  7380  00299A  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  7381  00299C  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  7382  00299E                     l2740:
  7383  00299E  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  7384  0029A2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  7385  0029A6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  7386  0029AA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  7387  0029AE  0012               	return		;funcret
  7388  0029B0                     __end_of___aldiv:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _lcdData *****************
  7392 ;; Defined at:
  7393 ;;		line 75 in file "lcd.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  valor           1    wreg     unsigned char 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  valor           1    6[COMRAM] unsigned char 
  7398 ;;  old_D           1    7[COMRAM] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7408 ;;      Params:         0       0       0       0       0       0       0
  7409 ;;      Locals:         2       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0
  7411 ;;      Totals:         2       0       0       0       0       0       0
  7412 ;;Total ram usage:        2 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 1
  7415 ;; This function calls:
  7416 ;;		_Delay40us
  7417 ;;		_digitalWrite
  7418 ;; This function is called by:
  7419 ;;		_main
  7420 ;;		_abreTampa
  7421 ;;		_escolheTempo
  7422 ;;		_escolheComida
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text23
  7427  0031B8                     __ptext23:
  7428                           	callstack 0
  7429  0031B8                     _lcdData:
  7430                           	callstack 29
  7431                           
  7432                           ;incstack = 0
  7433                           ;lcdData@valor stored from wreg
  7434  0031B8  6E07               	movwf	lcdData@valor^0,c
  7435  0031BA                     
  7436                           ;lcd.c: 75: void lcdData(unsigned char valor);lcd.c: 76: {;lcd.c: 78:     unsigned char 
      +                          old_D;;lcd.c: 79:     old_D = PORTD;
  7437  0031BA  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  7438  0031BE                     
  7439                           ;lcd.c: 81:     TRISD = 0x00;
  7440  0031BE  0E00               	movlw	0
  7441  0031C0  6E95               	movwf	149,c	;volatile
  7442  0031C2                     
  7443                           ;lcd.c: 82:  digitalWrite(PIN_E2, 1);
  7444  0031C2  0E00               	movlw	0
  7445  0031C4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7446  0031C6  0E22               	movlw	34
  7447  0031C8  6E01               	movwf	digitalWrite@pin^0,c
  7448  0031CA  0E00               	movlw	0
  7449  0031CC  6E04               	movwf	(digitalWrite@value+1)^0,c
  7450  0031CE  0E01               	movlw	1
  7451  0031D0  6E03               	movwf	digitalWrite@value^0,c
  7452  0031D2  EC19  F011         	call	_digitalWrite	;wreg free
  7453  0031D6                     
  7454                           ;lcd.c: 84:  PORTD = valor;
  7455  0031D6  C007  FF83         	movff	lcdData@valor,3971	;volatile
  7456  0031DA                     
  7457                           ;lcd.c: 86:     digitalWrite(PIN_E1, 1);
  7458  0031DA  0E00               	movlw	0
  7459  0031DC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7460  0031DE  0E21               	movlw	33
  7461  0031E0  6E01               	movwf	digitalWrite@pin^0,c
  7462  0031E2  0E00               	movlw	0
  7463  0031E4  6E04               	movwf	(digitalWrite@value+1)^0,c
  7464  0031E6  0E01               	movlw	1
  7465  0031E8  6E03               	movwf	digitalWrite@value^0,c
  7466  0031EA  EC19  F011         	call	_digitalWrite	;wreg free
  7467  0031EE                     
  7468                           ;lcd.c: 87:  digitalWrite(PIN_E1, 0);
  7469  0031EE  0E00               	movlw	0
  7470  0031F0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7471  0031F2  0E21               	movlw	33
  7472  0031F4  6E01               	movwf	digitalWrite@pin^0,c
  7473  0031F6  0E00               	movlw	0
  7474  0031F8  6E04               	movwf	(digitalWrite@value+1)^0,c
  7475  0031FA  0E00               	movlw	0
  7476  0031FC  6E03               	movwf	digitalWrite@value^0,c
  7477  0031FE  EC19  F011         	call	_digitalWrite	;wreg free
  7478  003202                     
  7479                           ;lcd.c: 89:     PORTD= old_D;
  7480  003202  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  7481  003206                     
  7482                           ;lcd.c: 91:  Delay40us();
  7483  003206  EC3A  F019         	call	_Delay40us	;wreg free
  7484  00320A  0012               	return		;funcret
  7485  00320C                     __end_of_lcdData:
  7486                           	callstack 0
  7487                           
  7488 ;; *************** function _lcdCommand *****************
  7489 ;; Defined at:
  7490 ;;		line 49 in file "lcd.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  cmd             1    wreg     unsigned char 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  cmd             1    7[COMRAM] unsigned char 
  7495 ;;  old_D           1    6[COMRAM] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7505 ;;      Params:         0       0       0       0       0       0       0
  7506 ;;      Locals:         2       0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0
  7508 ;;      Totals:         2       0       0       0       0       0       0
  7509 ;;Total ram usage:        2 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 2
  7512 ;; This function calls:
  7513 ;;		_Delay2ms
  7514 ;;		_Delay40us
  7515 ;;		_digitalWrite
  7516 ;; This function is called by:
  7517 ;;		_lcdInit
  7518 ;;		_lcdPosition
  7519 ;;		_main
  7520 ;;		_abreTampa
  7521 ;;		_escolheTempo
  7522 ;;		_escolheComida
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text24
  7527  002CD2                     __ptext24:
  7528                           	callstack 0
  7529  002CD2                     _lcdCommand:
  7530                           	callstack 27
  7531                           
  7532                           ;incstack = 0
  7533                           ;lcdCommand@cmd stored from wreg
  7534  002CD2  6E08               	movwf	lcdCommand@cmd^0,c
  7535  002CD4                     
  7536                           ;lcd.c: 49: void lcdCommand(unsigned char cmd);lcd.c: 50: {;lcd.c: 51:     unsigned char
      +                           old_D;;lcd.c: 52:     old_D = PORTD;
  7537  002CD4  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  7538  002CD8                     
  7539                           ;lcd.c: 55:     TRISD = 0x00;
  7540  002CD8  0E00               	movlw	0
  7541  002CDA  6E95               	movwf	149,c	;volatile
  7542  002CDC                     
  7543                           ;lcd.c: 57:  digitalWrite(PIN_E2, 0);
  7544  002CDC  0E00               	movlw	0
  7545  002CDE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7546  002CE0  0E22               	movlw	34
  7547  002CE2  6E01               	movwf	digitalWrite@pin^0,c
  7548  002CE4  0E00               	movlw	0
  7549  002CE6  6E04               	movwf	(digitalWrite@value+1)^0,c
  7550  002CE8  0E00               	movlw	0
  7551  002CEA  6E03               	movwf	digitalWrite@value^0,c
  7552  002CEC  EC19  F011         	call	_digitalWrite	;wreg free
  7553  002CF0                     
  7554                           ;lcd.c: 58:  PORTD = cmd;
  7555  002CF0  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  7556  002CF4                     
  7557                           ;lcd.c: 60:     digitalWrite(PIN_E1, 1);
  7558  002CF4  0E00               	movlw	0
  7559  002CF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7560  002CF8  0E21               	movlw	33
  7561  002CFA  6E01               	movwf	digitalWrite@pin^0,c
  7562  002CFC  0E00               	movlw	0
  7563  002CFE  6E04               	movwf	(digitalWrite@value+1)^0,c
  7564  002D00  0E01               	movlw	1
  7565  002D02  6E03               	movwf	digitalWrite@value^0,c
  7566  002D04  EC19  F011         	call	_digitalWrite	;wreg free
  7567  002D08                     
  7568                           ;lcd.c: 61:  digitalWrite(PIN_E1, 0);
  7569  002D08  0E00               	movlw	0
  7570  002D0A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7571  002D0C  0E21               	movlw	33
  7572  002D0E  6E01               	movwf	digitalWrite@pin^0,c
  7573  002D10  0E00               	movlw	0
  7574  002D12  6E04               	movwf	(digitalWrite@value+1)^0,c
  7575  002D14  0E00               	movlw	0
  7576  002D16  6E03               	movwf	digitalWrite@value^0,c
  7577  002D18  EC19  F011         	call	_digitalWrite	;wreg free
  7578  002D1C                     
  7579                           ;lcd.c: 64:     PORTD= old_D;
  7580  002D1C  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  7581  002D20                     
  7582                           ;lcd.c: 66:     if((cmd == 0x02)||(cmd == 0x01)){
  7583  002D20  0E02               	movlw	2
  7584  002D22  1808               	xorwf	lcdCommand@cmd^0,w,c
  7585  002D24  B4D8               	btfsc	status,2,c
  7586  002D26  EF97  F016         	goto	u2801
  7587  002D2A  EF99  F016         	goto	u2800
  7588  002D2E                     u2801:
  7589  002D2E  EFA1  F016         	goto	l2690
  7590  002D32                     u2800:
  7591  002D32  0408               	decf	lcdCommand@cmd^0,w,c
  7592  002D34  A4D8               	btfss	status,2,c
  7593  002D36  EF9F  F016         	goto	u2811
  7594  002D3A  EFA1  F016         	goto	u2810
  7595  002D3E                     u2811:
  7596  002D3E  EFA5  F016         	goto	l2692
  7597  002D42                     u2810:
  7598  002D42                     l2690:
  7599                           
  7600                           ;lcd.c: 67:        Delay2ms();
  7601  002D42  EC2C  F019         	call	_Delay2ms	;wreg free
  7602                           
  7603                           ;lcd.c: 68:     }else{
  7604  002D46  EFA7  F016         	goto	l141
  7605  002D4A                     l2692:
  7606                           
  7607                           ;lcd.c: 69:     Delay40us();
  7608  002D4A  EC3A  F019         	call	_Delay40us	;wreg free
  7609  002D4E                     l141:
  7610  002D4E  0012               	return		;funcret
  7611  002D50                     __end_of_lcdCommand:
  7612                           	callstack 0
  7613                           
  7614 ;; *************** function _digitalWrite *****************
  7615 ;; Defined at:
  7616 ;;		line 14 in file "io.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  pin             2    0[COMRAM] int 
  7619 ;;  value           2    2[COMRAM] int 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7631 ;;      Params:         4       0       0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0
  7633 ;;      Temps:          2       0       0       0       0       0       0
  7634 ;;      Totals:         6       0       0       0       0       0       0
  7635 ;;Total ram usage:        6 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_lcdCommand
  7641 ;;		_lcdData
  7642 ;;		_ssdUpdate
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text25
  7647  002232                     __ptext25:
  7648                           	callstack 0
  7649  002232                     _digitalWrite:
  7650                           	callstack 28
  7651  002232                     
  7652                           ;io.c: 16:     if(pin <8){
  7653  002232  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7654  002234  EF27  F011         	goto	u2390
  7655  002238  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7656  00223A  E107               	bnz	u2391
  7657  00223C  0E08               	movlw	8
  7658  00223E  5C01               	subwf	digitalWrite@pin^0,w,c
  7659  002240  B0D8               	btfsc	status,0,c
  7660  002242  EF25  F011         	goto	u2391
  7661  002246  EF27  F011         	goto	u2390
  7662  00224A                     u2391:
  7663  00224A  EF51  F011         	goto	l2588
  7664  00224E                     u2390:
  7665  00224E                     
  7666                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  7667  00224E  5003               	movf	digitalWrite@value^0,w,c
  7668  002250  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7669  002252  B4D8               	btfsc	status,2,c
  7670  002254  EF2E  F011         	goto	u2401
  7671  002258  EF30  F011         	goto	u2400
  7672  00225C                     u2401:
  7673  00225C  EF40  F011         	goto	l2586
  7674  002260                     u2400:
  7675  002260  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7676  002264  0E01               	movlw	1
  7677  002266  6E06               	movwf	(??_digitalWrite+1)^0,c
  7678  002268  2A05               	incf	??_digitalWrite^0,f,c
  7679  00226A  EF39  F011         	goto	u2414
  7680  00226E                     u2415:
  7681  00226E  90D8               	bcf	status,0,c
  7682  002270  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7683  002272                     u2414:
  7684  002272  2E05               	decfsz	??_digitalWrite^0,f,c
  7685  002274  EF37  F011         	goto	u2415
  7686  002278  5006               	movf	(??_digitalWrite+1)^0,w,c
  7687  00227A  1280               	iorwf	128,f,c	;volatile
  7688  00227C  EF3F  F012         	goto	l42
  7689  002280                     l2586:
  7690  002280  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7691  002284  0E01               	movlw	1
  7692  002286  6E06               	movwf	(??_digitalWrite+1)^0,c
  7693  002288  2A05               	incf	??_digitalWrite^0,f,c
  7694  00228A  EF49  F011         	goto	u2424
  7695  00228E                     u2425:
  7696  00228E  90D8               	bcf	status,0,c
  7697  002290  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7698  002292                     u2424:
  7699  002292  2E05               	decfsz	??_digitalWrite^0,f,c
  7700  002294  EF47  F011         	goto	u2425
  7701  002298  5006               	movf	(??_digitalWrite+1)^0,w,c
  7702  00229A  0AFF               	xorlw	255
  7703  00229C  1680               	andwf	128,f,c	;volatile
  7704  00229E  EF3F  F012         	goto	l42
  7705  0022A2                     l2588:
  7706  0022A2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7707  0022A4  EF5F  F011         	goto	u2430
  7708  0022A8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7709  0022AA  E107               	bnz	u2431
  7710  0022AC  0E10               	movlw	16
  7711  0022AE  5C01               	subwf	digitalWrite@pin^0,w,c
  7712  0022B0  B0D8               	btfsc	status,0,c
  7713  0022B2  EF5D  F011         	goto	u2431
  7714  0022B6  EF5F  F011         	goto	u2430
  7715  0022BA                     u2431:
  7716  0022BA  EF8D  F011         	goto	l2596
  7717  0022BE                     u2430:
  7718  0022BE                     
  7719                           ;io.c: 20:         pin -=8;
  7720  0022BE  0EF8               	movlw	248
  7721  0022C0  2601               	addwf	digitalWrite@pin^0,f,c
  7722  0022C2  0EFF               	movlw	255
  7723  0022C4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7724                           
  7725                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  7726  0022C6  5003               	movf	digitalWrite@value^0,w,c
  7727  0022C8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7728  0022CA  B4D8               	btfsc	status,2,c
  7729  0022CC  EF6A  F011         	goto	u2441
  7730  0022D0  EF6C  F011         	goto	u2440
  7731  0022D4                     u2441:
  7732  0022D4  EF7C  F011         	goto	l2594
  7733  0022D8                     u2440:
  7734  0022D8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7735  0022DC  0E01               	movlw	1
  7736  0022DE  6E06               	movwf	(??_digitalWrite+1)^0,c
  7737  0022E0  2A05               	incf	??_digitalWrite^0,f,c
  7738  0022E2  EF75  F011         	goto	u2454
  7739  0022E6                     u2455:
  7740  0022E6  90D8               	bcf	status,0,c
  7741  0022E8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7742  0022EA                     u2454:
  7743  0022EA  2E05               	decfsz	??_digitalWrite^0,f,c
  7744  0022EC  EF73  F011         	goto	u2455
  7745  0022F0  5006               	movf	(??_digitalWrite+1)^0,w,c
  7746  0022F2  1281               	iorwf	129,f,c	;volatile
  7747  0022F4  EF3F  F012         	goto	l42
  7748  0022F8                     l2594:
  7749  0022F8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7750  0022FC  0E01               	movlw	1
  7751  0022FE  6E06               	movwf	(??_digitalWrite+1)^0,c
  7752  002300  2A05               	incf	??_digitalWrite^0,f,c
  7753  002302  EF85  F011         	goto	u2464
  7754  002306                     u2465:
  7755  002306  90D8               	bcf	status,0,c
  7756  002308  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7757  00230A                     u2464:
  7758  00230A  2E05               	decfsz	??_digitalWrite^0,f,c
  7759  00230C  EF83  F011         	goto	u2465
  7760  002310  5006               	movf	(??_digitalWrite+1)^0,w,c
  7761  002312  0AFF               	xorlw	255
  7762  002314  1681               	andwf	129,f,c	;volatile
  7763  002316  EF3F  F012         	goto	l42
  7764  00231A                     l2596:
  7765  00231A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7766  00231C  EF9B  F011         	goto	u2470
  7767  002320  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7768  002322  E107               	bnz	u2471
  7769  002324  0E18               	movlw	24
  7770  002326  5C01               	subwf	digitalWrite@pin^0,w,c
  7771  002328  B0D8               	btfsc	status,0,c
  7772  00232A  EF99  F011         	goto	u2471
  7773  00232E  EF9B  F011         	goto	u2470
  7774  002332                     u2471:
  7775  002332  EFC9  F011         	goto	l2604
  7776  002336                     u2470:
  7777  002336                     
  7778                           ;io.c: 24:         pin -=16;
  7779  002336  0EF0               	movlw	240
  7780  002338  2601               	addwf	digitalWrite@pin^0,f,c
  7781  00233A  0EFF               	movlw	255
  7782  00233C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7783                           
  7784                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  7785  00233E  5003               	movf	digitalWrite@value^0,w,c
  7786  002340  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7787  002342  B4D8               	btfsc	status,2,c
  7788  002344  EFA6  F011         	goto	u2481
  7789  002348  EFA8  F011         	goto	u2480
  7790  00234C                     u2481:
  7791  00234C  EFB8  F011         	goto	l2602
  7792  002350                     u2480:
  7793  002350  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7794  002354  0E01               	movlw	1
  7795  002356  6E06               	movwf	(??_digitalWrite+1)^0,c
  7796  002358  2A05               	incf	??_digitalWrite^0,f,c
  7797  00235A  EFB1  F011         	goto	u2494
  7798  00235E                     u2495:
  7799  00235E  90D8               	bcf	status,0,c
  7800  002360  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7801  002362                     u2494:
  7802  002362  2E05               	decfsz	??_digitalWrite^0,f,c
  7803  002364  EFAF  F011         	goto	u2495
  7804  002368  5006               	movf	(??_digitalWrite+1)^0,w,c
  7805  00236A  1282               	iorwf	130,f,c	;volatile
  7806  00236C  EF3F  F012         	goto	l42
  7807  002370                     l2602:
  7808  002370  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7809  002374  0E01               	movlw	1
  7810  002376  6E06               	movwf	(??_digitalWrite+1)^0,c
  7811  002378  2A05               	incf	??_digitalWrite^0,f,c
  7812  00237A  EFC1  F011         	goto	u2504
  7813  00237E                     u2505:
  7814  00237E  90D8               	bcf	status,0,c
  7815  002380  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7816  002382                     u2504:
  7817  002382  2E05               	decfsz	??_digitalWrite^0,f,c
  7818  002384  EFBF  F011         	goto	u2505
  7819  002388  5006               	movf	(??_digitalWrite+1)^0,w,c
  7820  00238A  0AFF               	xorlw	255
  7821  00238C  1682               	andwf	130,f,c	;volatile
  7822  00238E  EF3F  F012         	goto	l42
  7823  002392                     l2604:
  7824  002392  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7825  002394  EFD7  F011         	goto	u2510
  7826  002398  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7827  00239A  E107               	bnz	u2511
  7828  00239C  0E20               	movlw	32
  7829  00239E  5C01               	subwf	digitalWrite@pin^0,w,c
  7830  0023A0  B0D8               	btfsc	status,0,c
  7831  0023A2  EFD5  F011         	goto	u2511
  7832  0023A6  EFD7  F011         	goto	u2510
  7833  0023AA                     u2511:
  7834  0023AA  EF05  F012         	goto	l2612
  7835  0023AE                     u2510:
  7836  0023AE                     
  7837                           ;io.c: 28:         pin -=24;
  7838  0023AE  0EE8               	movlw	232
  7839  0023B0  2601               	addwf	digitalWrite@pin^0,f,c
  7840  0023B2  0EFF               	movlw	255
  7841  0023B4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7842                           
  7843                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  7844  0023B6  5003               	movf	digitalWrite@value^0,w,c
  7845  0023B8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7846  0023BA  B4D8               	btfsc	status,2,c
  7847  0023BC  EFE2  F011         	goto	u2521
  7848  0023C0  EFE4  F011         	goto	u2520
  7849  0023C4                     u2521:
  7850  0023C4  EFF4  F011         	goto	l2610
  7851  0023C8                     u2520:
  7852  0023C8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7853  0023CC  0E01               	movlw	1
  7854  0023CE  6E06               	movwf	(??_digitalWrite+1)^0,c
  7855  0023D0  2A05               	incf	??_digitalWrite^0,f,c
  7856  0023D2  EFED  F011         	goto	u2534
  7857  0023D6                     u2535:
  7858  0023D6  90D8               	bcf	status,0,c
  7859  0023D8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7860  0023DA                     u2534:
  7861  0023DA  2E05               	decfsz	??_digitalWrite^0,f,c
  7862  0023DC  EFEB  F011         	goto	u2535
  7863  0023E0  5006               	movf	(??_digitalWrite+1)^0,w,c
  7864  0023E2  1283               	iorwf	131,f,c	;volatile
  7865  0023E4  EF3F  F012         	goto	l42
  7866  0023E8                     l2610:
  7867  0023E8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7868  0023EC  0E01               	movlw	1
  7869  0023EE  6E06               	movwf	(??_digitalWrite+1)^0,c
  7870  0023F0  2A05               	incf	??_digitalWrite^0,f,c
  7871  0023F2  EFFD  F011         	goto	u2544
  7872  0023F6                     u2545:
  7873  0023F6  90D8               	bcf	status,0,c
  7874  0023F8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7875  0023FA                     u2544:
  7876  0023FA  2E05               	decfsz	??_digitalWrite^0,f,c
  7877  0023FC  EFFB  F011         	goto	u2545
  7878  002400  5006               	movf	(??_digitalWrite+1)^0,w,c
  7879  002402  0AFF               	xorlw	255
  7880  002404  1683               	andwf	131,f,c	;volatile
  7881  002406  EF3F  F012         	goto	l42
  7882  00240A                     l2612:
  7883  00240A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7884  00240C  EF13  F012         	goto	u2550
  7885  002410  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7886  002412  E107               	bnz	u2551
  7887  002414  0E28               	movlw	40
  7888  002416  5C01               	subwf	digitalWrite@pin^0,w,c
  7889  002418  B0D8               	btfsc	status,0,c
  7890  00241A  EF11  F012         	goto	u2551
  7891  00241E  EF13  F012         	goto	u2550
  7892  002422                     u2551:
  7893  002422  EF3F  F012         	goto	l42
  7894  002426                     u2550:
  7895  002426                     
  7896                           ;io.c: 32:         pin -=32;
  7897  002426  0EE0               	movlw	224
  7898  002428  2601               	addwf	digitalWrite@pin^0,f,c
  7899  00242A  0EFF               	movlw	255
  7900  00242C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7901                           
  7902                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  7903  00242E  5003               	movf	digitalWrite@value^0,w,c
  7904  002430  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7905  002432  B4D8               	btfsc	status,2,c
  7906  002434  EF1E  F012         	goto	u2561
  7907  002438  EF20  F012         	goto	u2560
  7908  00243C                     u2561:
  7909  00243C  EF30  F012         	goto	l2618
  7910  002440                     u2560:
  7911  002440  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7912  002444  0E01               	movlw	1
  7913  002446  6E06               	movwf	(??_digitalWrite+1)^0,c
  7914  002448  2A05               	incf	??_digitalWrite^0,f,c
  7915  00244A  EF29  F012         	goto	u2574
  7916  00244E                     u2575:
  7917  00244E  90D8               	bcf	status,0,c
  7918  002450  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7919  002452                     u2574:
  7920  002452  2E05               	decfsz	??_digitalWrite^0,f,c
  7921  002454  EF27  F012         	goto	u2575
  7922  002458  5006               	movf	(??_digitalWrite+1)^0,w,c
  7923  00245A  1284               	iorwf	132,f,c	;volatile
  7924  00245C  EF3F  F012         	goto	l42
  7925  002460                     l2618:
  7926  002460  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7927  002464  0E01               	movlw	1
  7928  002466  6E06               	movwf	(??_digitalWrite+1)^0,c
  7929  002468  2A05               	incf	??_digitalWrite^0,f,c
  7930  00246A  EF39  F012         	goto	u2584
  7931  00246E                     u2585:
  7932  00246E  90D8               	bcf	status,0,c
  7933  002470  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7934  002472                     u2584:
  7935  002472  2E05               	decfsz	??_digitalWrite^0,f,c
  7936  002474  EF37  F012         	goto	u2585
  7937  002478  5006               	movf	(??_digitalWrite+1)^0,w,c
  7938  00247A  0AFF               	xorlw	255
  7939  00247C  1684               	andwf	132,f,c	;volatile
  7940  00247E                     l42:
  7941  00247E  0012               	return		;funcret
  7942  002480                     __end_of_digitalWrite:
  7943                           	callstack 0
  7944                           
  7945 ;; *************** function _Delay2ms *****************
  7946 ;; Defined at:
  7947 ;;		line 38 in file "lcd.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;  i               1    1[COMRAM] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2, status,0, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7961 ;;      Params:         0       0       0       0       0       0       0
  7962 ;;      Locals:         1       0       0       0       0       0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0
  7964 ;;      Totals:         1       0       0       0       0       0       0
  7965 ;;Total ram usage:        1 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; Hardware stack levels required when called: 1
  7968 ;; This function calls:
  7969 ;;		_Delay40us
  7970 ;; This function is called by:
  7971 ;;		_lcdCommand
  7972 ;;		_lcdInit
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text26
  7977  003258                     __ptext26:
  7978                           	callstack 0
  7979  003258                     _Delay2ms:
  7980                           	callstack 27
  7981  003258                     
  7982                           ;lcd.c: 40:  unsigned char i;;lcd.c: 41:  for(i=0; i < 50; i++)
  7983  003258  0E00               	movlw	0
  7984  00325A  6E02               	movwf	Delay2ms@i^0,c
  7985  00325C                     l2626:
  7986                           
  7987                           ;lcd.c: 42:  {;lcd.c: 43:   Delay40us();
  7988  00325C  EC3A  F019         	call	_Delay40us	;wreg free
  7989  003260                     
  7990                           ;lcd.c: 44:  }
  7991  003260  2A02               	incf	Delay2ms@i^0,f,c
  7992  003262  0E31               	movlw	49
  7993  003264  6402               	cpfsgt	Delay2ms@i^0,c
  7994  003266  EF37  F019         	goto	u2591
  7995  00326A  EF39  F019         	goto	u2590
  7996  00326E                     u2591:
  7997  00326E  EF2E  F019         	goto	l2626
  7998  003272                     u2590:
  7999  003272  0012               	return		;funcret
  8000  003274                     __end_of_Delay2ms:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _Delay40us *****************
  8004 ;; Defined at:
  8005 ;;		line 32 in file "lcd.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  i               1    0[COMRAM] unsigned char 
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8019 ;;      Params:         0       0       0       0       0       0       0
  8020 ;;      Locals:         1       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0
  8022 ;;      Totals:         1       0       0       0       0       0       0
  8023 ;;Total ram usage:        1 bytes
  8024 ;; Hardware stack levels used: 1
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_Delay2ms
  8029 ;;		_lcdCommand
  8030 ;;		_lcdData
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text27
  8035  003274                     __ptext27:
  8036                           	callstack 0
  8037  003274                     _Delay40us:
  8038                           	callstack 28
  8039  003274                     
  8040                           ;lcd.c: 34:  unsigned char i;;lcd.c: 35:  for(i=0; i < 25; i++);
  8041  003274  0E00               	movlw	0
  8042  003276  6E01               	movwf	Delay40us@i^0,c
  8043  003278                     l2576:
  8044  003278  2A01               	incf	Delay40us@i^0,f,c
  8045  00327A  0E18               	movlw	24
  8046  00327C  6401               	cpfsgt	Delay40us@i^0,c
  8047  00327E  EF43  F019         	goto	u2381
  8048  003282  EF45  F019         	goto	u2380
  8049  003286                     u2381:
  8050  003286  EF3C  F019         	goto	l2576
  8051  00328A                     u2380:
  8052  00328A  0012               	return		;funcret
  8053  00328C                     __end_of_Delay40us:
  8054                           	callstack 0
  8055                           
  8056 ;; *************** function _atraso_ms *****************
  8057 ;; Defined at:
  8058 ;;		line 3 in file "delay.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  t               2    0[COMRAM] unsigned int 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  i               2    2[COMRAM] volatile unsigned int 
  8063 ;;  k               1    5[COMRAM] volatile unsigned char 
  8064 ;;  j               1    4[COMRAM] volatile unsigned char 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  1    wreg      void 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8074 ;;      Params:         2       0       0       0       0       0       0
  8075 ;;      Locals:         4       0       0       0       0       0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0
  8077 ;;      Totals:         6       0       0       0       0       0       0
  8078 ;;Total ram usage:        6 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_main
  8084 ;;		_abreTampa
  8085 ;;		_escolheTempo
  8086 ;;		_escolheComida
  8087 ;;		_lcd_cmd
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text28
  8092  002F90                     __ptext28:
  8093                           	callstack 0
  8094  002F90                     _atraso_ms:
  8095                           	callstack 29
  8096  002F90                     
  8097                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 6:     for (i = 0; i < t; i++) {
  8098  002F90  0E00               	movlw	0
  8099  002F92  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  8100  002F94  0E00               	movlw	0
  8101  002F96  6E03               	movwf	atraso_ms@i^0,c	;volatile
  8102  002F98  EFEE  F017         	goto	l2912
  8103  002F9C                     l2890:
  8104                           
  8105                           ;delay.c: 7:         for (j = 0; j < 41; j++) {
  8106  002F9C  0E00               	movlw	0
  8107  002F9E  6E05               	movwf	atraso_ms@j^0,c	;volatile
  8108  002FA0                     l2892:
  8109  002FA0  0E28               	movlw	40
  8110  002FA2  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  8111  002FA4  EFD6  F017         	goto	u3061
  8112  002FA8  EFD8  F017         	goto	u3060
  8113  002FAC                     u3061:
  8114  002FAC  EFDA  F017         	goto	l2896
  8115  002FB0                     u3060:
  8116  002FB0  EFEC  F017         	goto	l2910
  8117  002FB4                     l2896:
  8118                           
  8119                           ;delay.c: 8:             for (k = 0; k < 3; k++);
  8120  002FB4  0E00               	movlw	0
  8121  002FB6  6E06               	movwf	atraso_ms@k^0,c	;volatile
  8122  002FB8                     l2898:
  8123  002FB8  0E02               	movlw	2
  8124  002FBA  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  8125  002FBC  EFE2  F017         	goto	u3071
  8126  002FC0  EFE4  F017         	goto	u3070
  8127  002FC4                     u3071:
  8128  002FC4  EFE6  F017         	goto	l2902
  8129  002FC8                     u3070:
  8130  002FC8  EFE9  F017         	goto	l2906
  8131  002FCC                     l2902:
  8132  002FCC  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  8133  002FCE  EFDC  F017         	goto	l2898
  8134  002FD2                     l2906:
  8135                           
  8136                           ;delay.c: 9:         }
  8137  002FD2  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  8138  002FD4  EFD0  F017         	goto	l2892
  8139  002FD8                     l2910:
  8140                           
  8141                           ;delay.c: 10:     }
  8142  002FD8  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  8143  002FDA  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  8144  002FDC                     l2912:
  8145  002FDC  5001               	movf	atraso_ms@t^0,w,c
  8146  002FDE  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  8147  002FE0  5002               	movf	(atraso_ms@t+1)^0,w,c
  8148  002FE2  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  8149  002FE4  A0D8               	btfss	status,0,c
  8150  002FE6  EFF7  F017         	goto	u3081
  8151  002FEA  EFF9  F017         	goto	u3080
  8152  002FEE                     u3081:
  8153  002FEE  EFCE  F017         	goto	l2890
  8154  002FF2                     u3080:
  8155  002FF2  0012               	return		;funcret
  8156  002FF4                     __end_of_atraso_ms:
  8157                           	callstack 0
  8158                           
  8159                           	psect	text29
  8160  000000                     __ptext29:
  8161                           	callstack 0
  8162  000000                     
  8163                           	psect	rparam
  8164  0000                     
  8165                           	psect	idloc
  8166                           
  8167                           ;Config register IDLOC0 @ 0x200000
  8168                           ;	unspecified, using default values
  8169  200000                     	org	2097152
  8170  200000  FF                 	db	255
  8171                           
  8172                           ;Config register IDLOC1 @ 0x200001
  8173                           ;	unspecified, using default values
  8174  200001                     	org	2097153
  8175  200001  FF                 	db	255
  8176                           
  8177                           ;Config register IDLOC2 @ 0x200002
  8178                           ;	unspecified, using default values
  8179  200002                     	org	2097154
  8180  200002  FF                 	db	255
  8181                           
  8182                           ;Config register IDLOC3 @ 0x200003
  8183                           ;	unspecified, using default values
  8184  200003                     	org	2097155
  8185  200003  FF                 	db	255
  8186                           
  8187                           ;Config register IDLOC4 @ 0x200004
  8188                           ;	unspecified, using default values
  8189  200004                     	org	2097156
  8190  200004  FF                 	db	255
  8191                           
  8192                           ;Config register IDLOC5 @ 0x200005
  8193                           ;	unspecified, using default values
  8194  200005                     	org	2097157
  8195  200005  FF                 	db	255
  8196                           
  8197                           ;Config register IDLOC6 @ 0x200006
  8198                           ;	unspecified, using default values
  8199  200006                     	org	2097158
  8200  200006  FF                 	db	255
  8201                           
  8202                           ;Config register IDLOC7 @ 0x200007
  8203                           ;	unspecified, using default values
  8204  200007                     	org	2097159
  8205  200007  FF                 	db	255
  8206                           
  8207                           	psect	config
  8208                           
  8209                           ; Padding undefined space
  8210  300000                     	org	3145728
  8211  300000  FF                 	db	255
  8212                           
  8213                           ;Config register CONFIG1H @ 0x300001
  8214                           ;	Oscillator Selection bits
  8215                           ;	OSC = HS, HS oscillator
  8216                           ;	Fail-Safe Clock Monitor Enable bit
  8217                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8218                           ;	Internal/External Oscillator Switchover bit
  8219                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8220  300001                     	org	3145729
  8221  300001  02                 	db	2
  8222                           
  8223                           ;Config register CONFIG2L @ 0x300002
  8224                           ;	Power-up Timer Enable bit
  8225                           ;	PWRT = OFF, PWRT disabled
  8226                           ;	Brown-out Reset Enable bits
  8227                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8228                           ;	Brown Out Reset Voltage bits
  8229                           ;	BORV = 0x2E, user specified literal
  8230  300002                     	org	3145730
  8231  300002  71                 	db	369
  8232                           
  8233                           ;Config register CONFIG2H @ 0x300003
  8234                           ;	Watchdog Timer Enable bit
  8235                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8236                           ;	Watchdog Timer Postscale Select bits
  8237                           ;	WDTPS = 1, 1:1
  8238  300003                     	org	3145731
  8239  300003  00                 	db	0
  8240                           
  8241                           ; Padding undefined space
  8242  300004                     	org	3145732
  8243  300004  FF                 	db	255
  8244                           
  8245                           ;Config register CONFIG3H @ 0x300005
  8246                           ;	CCP2 MUX bit
  8247                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8248                           ;	PORTB A/D Enable bit
  8249                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8250                           ;	Low-Power Timer1 Oscillator Enable bit
  8251                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8252                           ;	MCLR Pin Enable bit
  8253                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8254  300005                     	org	3145733
  8255  300005  83                 	db	131
  8256                           
  8257                           ;Config register CONFIG4L @ 0x300006
  8258                           ;	Stack Full/Underflow Reset Enable bit
  8259                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8260                           ;	Single-Supply ICSP Enable bit
  8261                           ;	LVP = OFF, Single-Supply ICSP disabled
  8262                           ;	Extended Instruction Set Enable bit
  8263                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8264                           ;	Background Debugger Enable bit
  8265                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8266  300006                     	org	3145734
  8267  300006  80                 	db	128
  8268                           
  8269                           ; Padding undefined space
  8270  300007                     	org	3145735
  8271  300007  FF                 	db	255
  8272                           
  8273                           ;Config register CONFIG5L @ 0x300008
  8274                           ;	Code Protection bit
  8275                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8276                           ;	Code Protection bit
  8277                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8278                           ;	Code Protection bit
  8279                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8280                           ;	Code Protection bit
  8281                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8282  300008                     	org	3145736
  8283  300008  0F                 	db	15
  8284                           
  8285                           ;Config register CONFIG5H @ 0x300009
  8286                           ;	Boot Block Code Protection bit
  8287                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8288                           ;	Data EEPROM Code Protection bit
  8289                           ;	CPD = OFF, Data EEPROM not code-protected
  8290  300009                     	org	3145737
  8291  300009  C0                 	db	192
  8292                           
  8293                           ;Config register CONFIG6L @ 0x30000A
  8294                           ;	Write Protection bit
  8295                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8296                           ;	Write Protection bit
  8297                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8298                           ;	Write Protection bit
  8299                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8300                           ;	Write Protection bit
  8301                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8302  30000A                     	org	3145738
  8303  30000A  0F                 	db	15
  8304                           
  8305                           ;Config register CONFIG6H @ 0x30000B
  8306                           ;	Configuration Register Write Protection bit
  8307                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8308                           ;	Boot Block Write Protection bit
  8309                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8310                           ;	Data EEPROM Write Protection bit
  8311                           ;	WRTD = OFF, Data EEPROM not write-protected
  8312  30000B                     	org	3145739
  8313  30000B  E0                 	db	224
  8314                           
  8315                           ;Config register CONFIG7L @ 0x30000C
  8316                           ;	Table Read Protection bit
  8317                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8318                           ;	Table Read Protection bit
  8319                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8320                           ;	Table Read Protection bit
  8321                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8322                           ;	Table Read Protection bit
  8323                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8324  30000C                     	org	3145740
  8325  30000C  0F                 	db	15
  8326                           
  8327                           ;Config register CONFIG7H @ 0x30000D
  8328                           ;	Boot Block Table Read Protection bit
  8329                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8330  30000D                     	org	3145741
  8331  30000D  40                 	db	64
  8332                           tosu	equ	0xFFF
  8333                           tosh	equ	0xFFE
  8334                           tosl	equ	0xFFD
  8335                           stkptr	equ	0xFFC
  8336                           pclatu	equ	0xFFB
  8337                           pclath	equ	0xFFA
  8338                           pcl	equ	0xFF9
  8339                           tblptru	equ	0xFF8
  8340                           tblptrh	equ	0xFF7
  8341                           tblptrl	equ	0xFF6
  8342                           tablat	equ	0xFF5
  8343                           prodh	equ	0xFF4
  8344                           prodl	equ	0xFF3
  8345                           indf0	equ	0xFEF
  8346                           postinc0	equ	0xFEE
  8347                           postdec0	equ	0xFED
  8348                           preinc0	equ	0xFEC
  8349                           plusw0	equ	0xFEB
  8350                           fsr0h	equ	0xFEA
  8351                           fsr0l	equ	0xFE9
  8352                           wreg	equ	0xFE8
  8353                           indf1	equ	0xFE7
  8354                           postinc1	equ	0xFE6
  8355                           postdec1	equ	0xFE5
  8356                           preinc1	equ	0xFE4
  8357                           plusw1	equ	0xFE3
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           bsr	equ	0xFE0
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           preinc2	equ	0xFDC
  8365                           plusw2	equ	0xFDB
  8366                           fsr2h	equ	0xFDA
  8367                           fsr2l	equ	0xFD9
  8368                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        403
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    110     122
    BANK0           128      0     125
    BANK1           256    146     236
    BANK2           256    163     256
    BANK3           256      0      95
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    strcmp@l	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 


Critical Paths under _main in COMRAM

    _main->_escolheComida
    _escolheTempo->_ssdDigit
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___almod
    _lcdInit->_lcdCommand
    ___almod->___aldiv
    _escolheComida->_lcdPosition
    _lcdPosition->_lcdCommand
    _abreTampa->_pwmFrequency
    _pwmSet1->___lwdiv
    _pwmFrequency->___aldiv
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escolheTempo

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               170   170      0   83539
                                            107 COMRAM     3     3      0
                                              0 BANK2    163   163      0
                            ___fladd
                             ___flge
                          _abreTampa
                          _atraso_ms
                      _escolheComida
                       _escolheTempo
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _escolheTempo                                       149   149      0   35362
                                             26 COMRAM     3     3      0
                                              0 BANK1    146   146      0
                            ___aldiv
                            ___almod
                            ___fladd
                             ___flge
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                       _pwmFrequency
                            _pwmSet1
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     784
                                             24 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2310
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3300
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8    1512
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _escolheComida                                       96    96      0   13609
                                             11 COMRAM    96    96      0
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                        _lcdPosition
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               7     1      6    1632
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    3990
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _abreTampa                                           42    42      0   10488
                                             16 COMRAM    41    41      0
                          _atraso_ms
                         _lcdCommand
                            _lcdData
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
 ---------------------------------------------------------------------------------
 (2) _pwmSet1                                              5     5      0    1172
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2    2146
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1668
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2    1430
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
   ___flge
   _abreTampa
     _atraso_ms
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdData
       _Delay40us
       _digitalWrite
     _pwmFrequency
       ___aldiv
     _pwmInit
     _pwmSet1
       ___lwdiv
       ___wmul
   _atraso_ms
   _escolheComida
     _atraso_ms
     _kpDebounce
     _kpInit
     _kpRead
     _lcdCommand
     _lcdData
     _lcdPosition
       _lcdCommand
     _strcmp
   _escolheTempo
     ___aldiv
     ___almod
       ___aldiv (ARG)
     ___fladd
     ___flge
     _atraso_ms
     _kpDebounce
     _kpInit
     _kpRead
     _lcdCommand
     _lcdData
     _lcdInit
       _Delay2ms
       _lcdCommand
       _pinMode
     _lcdPosition
     _pwmFrequency
     _pwmSet1
     _ssdDigit
       ___aldiv (ARG)
       ___almod (ARG)
     _ssdInit
       _pinMode
     _ssdUpdate
       _digitalWrite
     _strcmp
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
   _lcdData
   _lcdInit
   _lcdPosition
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      5F      11       37.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     A3     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     92      EC       7       92.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7D       5       97.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6E      7A       1       96.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     342      15        0.0%
DATA                 0      0     342       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 15:31:51 2021

                     l42 247E                       l76 2230                       l89 32A8  
                     _v0 0078                       _v1 0077                       _v2 0076  
                     _v3 0075      ___wmul@multiplicand 0003                      l112 32B2  
                    l200 31B6                      l107 25D8                      l108 25F0  
                    l141 2D4E                      l109 25F8                      l301 1764  
                    l134 3272                      l150 2F42                      l151 2F58  
                    l144 320A                      l320 2752                      l152 2F70  
                    l129 328A                      l154 2F8E                      l147 2E44  
                    l406 2FF2                      l510 29AE                      l431 3230  
                    l352 0EE4                      l425 3256                      l419 2F24  
                    l523 2B9E                      l187 3160                      l428 329E  
                    l701 2AB2                      l197 28A2                      l365 0F82  
                    l396 1FE2                      l922 2EB0                      l960 1948  
                    l696 2A6C                      l929 2EB8                      l961 190E  
                    l959 195A                      l976 1A74                      l968 1C2A  
                    l985 1B44                      l986 1B32                      wreg 000FE8  
                   l1110 2C3A                     l3000 2EF6                     l3002 2EFE  
                   l3010 2AB8                     l3004 2F16                     l3020 2AF8  
                   l3012 2AC6                     l3100 1880                     l3006 3232  
                   l3030 2B4E                     l3022 2B0E                     l3014 2AD6  
                   l3110 1894                     l3102 1884                     l3040 2B8E  
                   l3032 2B5E                     l3024 2B16                     l3016 2ADA  
                   l3008 2AB4                     l3200 1AF2                     l3120 18A8  
                   l3112 1898                     l3104 1888                     l3034 2B68  
                   l3026 2B22                     l3018 2AE8                     l3210 1B2A  
                   l3202 1AF4                     l3130 1906                     l3114 189C  
                   l3106 188C                     l3122 18AC                     l3050 1788  
                   l3300 1D1C                     l3028 2B30                     l3036 2B6E  
                   l3220 1BA8                     l3204 1B02                     l3140 193C  
                   l3132 191C                     l3124 18B0                     l3116 18A0  
                   l3108 1890                     l3052 1798                     l3060 17C2  
                   l3044 176C                     l3310 1D60                     l3302 1D1E  
                   l3038 2B7E                     l3230 1BEE                     l3214 1B54  
                   l3222 1BAA                     l3206 1B06                     l3150 198C  
                   l3142 1946                     l3134 1928                     l3126 18DA  
                   l3118 18A4                     l3070 17F2                     l3062 17D2  
                   l3054 17A8                     l3046 1778                     l2600 2350  
                   l3400 2604                     l3312 1D72                     l3304 1D2E  
                   l3240 1C18                     l3232 1BFC                     l3224 1BBA  
                   l3216 1B60                     l3208 1B14                     l3160 19C8  
                   l3152 199C                     l3144 1968                     l3136 192C  
                   l3128 18F6                     l3080 1832                     l3072 1800  
                   l3064 17D8                     l3056 17B8                     l3048 1786  
                   l2610 23E8                     l2602 2370                     l3410 2626  
                   l3402 2610                     l3330 1DF0                     l3322 1D94  
                   l3314 1D7E                     l3306 1D4A                     l3242 1C1A  
                   l3234 1C02                     l3226 1BCA                     l3218 1B6E  
                   l3170 1A0E                     l3162 19D6                     l3154 19AA  
                   l3146 1978                     l3138 193A                     l3090 186C  
                   l3082 1834                     l3074 1802                     l3066 17EA  
                   l3058 17BA                     l3250 29EE                     l2620 3258  
                   l2612 240A                     l2604 2392                     l2700 28A4  
                   l3420 2654                     l3412 2638                     l3404 2622  
                   l3340 1E44                     l3332 1E00                     l3324 1DA6  
                   l3316 1D90                     l3308 1D52                     l3236 1C04  
                   l3228 1BEA                     l3180 1A8A                     l3172 1A42  
                   l3164 19D8                     l3156 19B8                     l3092 1870  
                   l3076 1812                     l3084 183C                     l3068 17EC  
                   l3260 2A5A                     l3252 2A1C                     l3500 073A  
                   l2630 3262                     l2614 2426                     l2606 23AE  
                   l2710 28D8                     l2702 28A8                     l3422 2660  
                   l3414 263A                     l3350 1E66                     l3342 1E50  
                   l3334 1E1C                     l3326 1DE8                     l3270 1C44  
                   l3238 1C0A                     l3190 1AC6                     l3182 1A9A  
                   l3174 1A44                     l3166 19E2                     l3158 19C4  
                   l3094 1874                     l3086 184C                     l3078 1822  
                   l3262 2AAA                     l3254 2A2C                     l3246 29B0  
                   l3510 077E                     l3502 0740                     l2616 2440  
                   l2608 23C8                     l2720 291A                     l2712 28E8  
                   l2704 28B6                     l3440 26CA                     l3424 266C  
                   l3416 264A                     l2800 2556                     l3360 1ED2  
                   l3352 1E78                     l3344 1E62                     l3328 1DEE  
                   l3336 1E24                     l3280 1C80                     l3272 1C48  
                   l3192 1AC8                     l3176 1A54                     l3168 19E8  
                   l3096 1878                     l3088 185E                     l3264 2AB0  
                   l3256 2A3A                     l3248 29DE                     l2640 2054  
                   l2632 1FE4                     l3600 0BE8                     l3520 07DE  
                   l3504 0746                     l2570 3274                     l2626 325C  
                   l2618 2460                     l2730 296C                     l2722 2926  
                   l2714 28EC                     l2706 28C6                     l3450 26F2  
                   l3442 26DC                     l3434 26A6                     l3426 2690  
                   l3418 264E                     l2810 25AE                     l2802 258A  
                   l3370 1F22                     l3362 1EEE                     l3354 1EBA  
                   l3338 1E32                     l3282 1C8E                     l3274 1C58  
                   l3194 1AD6                     l3186 1AAE                     l3178 1A64  
                   l3098 187C                     l3258 2A4C                     l2650 20E8  
                   l2642 2070                     l2634 2000                     l3610 0C26  
                   l3602 0BFE                     l3530 095A                     l3522 07E8  
                   l3506 0762                     l2628 3260                     l2580 2232  
                   l2740 299E                     l2732 296E                     l2724 2934  
                   l2716 28FC                     l2708 28CA                     l3460 2728  
                   l3452 2704                     l3444 26EE                     l3436 26B8  
                   l3428 26A2                     l2820 25F4                     l2812 25C6  
                   l2804 258C                     l3380 1F4A                     l3372 1F34  
                   l3356 1EC0                     l3364 1EF6                     l3284 1CA0  
                   l3276 1C5C                     l3268 1C2C                     l3196 1ADE  
                   l3188 1AB8                     l2660 2172                     l2652 20FA  
                   l2644 2082                     l2636 2012                     l3620 0D72  
                   l3612 0C78                     l3604 0C04                     l3540 0A0C  
                   l3532 096C                     l3524 07EE                     l3516 0788  
                   l3508 076C                     l3700 0F9E                     l2902 2FCC  
                   l2910 2FD8                     l2590 22BE                     l2582 224E  
                   l2830 31D6                     l2734 2978                     l2726 293E  
                   l2718 2912                     l2750 2E68                     l3462 273A  
                   l3454 2706                     l3438 26BA                     l2814 25CC  
                   l2806 259C                     l2822 32AA                     l3390 1FC0  
                   l3382 1F8C                     l3366 1F04                     l3358 1EC2  
                   l3294 1CC2                     l3286 1CAC                     l3278 1C74  
                   l3198 1AE2                     l2670 220E                     l2662 2196  
                   l2654 211E                     l2646 20A6                     l2638 2032  
                   l3630 0E3E                     l3622 0D84                     l3614 0CCA  
                   l3606 0C10                     l3550 0A5C                     l3542 0A10  
                   l3526 080E                     l3518 079A                     l3470 0658  
                   l3702 0FB0                     l2912 2FDC                     l2576 3278  
                   l2592 22D8                     l2584 2260                     l2680 2CF4  
                   l2672 2CD4                     l2832 31DA                     l2824 31BA  
                   l2728 295C                     l2736 297E                     l2760 2EA2  
                   l2752 2E70                     l2744 2E46                     l3464 2746  
                   l3456 2716                     l2816 25D0                     l2808 259E  
                   l3384 1F92                     l3368 1F16                     l3296 1CD4  
                   l3288 1CBE                     l3392 1FC8                     l2664 21BC  
                   l2656 2144                     l2648 20CC                     l2840 2DCE  
                   l2920 3130                     l3640 0E98                     l3632 0E4A  
                   l3616 0D1C                     l3608 0C14                     l3560 0ABA  
                   l3552 0A74                     l3544 0A2E                     l3536 09A2  
                   l3528 0956                     l3480 0678                     l3472 065C  
                   l3720 1026                     l3704 0FB4                     l2906 2FD2  
                   l2578 327A                     l2594 22F8                     l2586 2280  
                   l2690 2D42                     l2682 2D08                     l2674 2CD8  
                   l2834 31EE                     l2826 31BE                     l2738 298E  
                   l2762 2EA4                     l2754 2E7E                     l2746 2E4E  
                   l3458 271C                     l2818 25E8                     l2770 2484  
                   l3386 1F94                     l3378 1F38                     l3298 1D16  
                   l3394 1FD0                     l2666 21D8                     l2658 2160  
                   l2850 2E06                     l2842 2DF6                     l2922 3134  
                   l2914 310C                     l2930 2754                     l3650 0F18  
                   l3642 0EA6                     l3634 0E5A                     l3626 0DBA  
                   l3618 0D6E                     l3570 0B1C                     l3562 0ACC  
                   l3554 0A82                     l3546 0A3A                     l3538 0A08  
                   l3490 06DA                     l3482 068A                     l3474 066E  
                   l3466 0612                     l3810 13EA                     l3722 103A  
                   l3730 10E6                     l3714 0FCA                     l3706 0FBA  
                   l2596 231A                     l2588 22A2                     l2692 2D4A  
                   l2684 2D1C                     l2676 2CDC                     l2836 3202  
                   l2828 31C2                     l2764 2EAA                     l2756 2E84  
                   l2748 2E60                     l3396 25FA                     l2780 24CE  
                   l2772 2488                     l3388 1FA4                     l2668 21EA  
                   l2860 2E1C                     l2852 2E0A                     l2844 2DFA  
                   l2924 3146                     l2916 311C                     l2940 27B0  
                   l2932 2758                     l3652 0F1E                     l3644 0EBE  
                   l3636 0E72                     l3628 0E20                     l3580 0B5C  
                   l3572 0B2A                     l3564 0AE4                     l3556 0A94  
                   l3548 0A4A                     l3484 0690                     l3468 0654  
                   l3900 167A                     l3820 149C                     l3812 13FA  
                   l3804 13C4                     l3740 112A                     l3732 10EA  
                   l3724 104A                     l3716 100C                     l3708 0FC4  
                   l2598 2336                     l2686 2D20                     l2678 2CF0  
                   l2838 3206                     l2758 2E9A                     l2694 320C  
                   l3398 25FE                     l2790 24F6                     l2766 32A0  
                   l2870 2E38                     l2862 2E22                     l2854 2E0E  
                   l2846 2DFE                     l2926 314A                     l2918 3120  
                   l2950 2804                     l2942 27C2                     l2934 276C  
                   l3670 0F50                     l3662 0F3A                     l3654 0F24  
                   l3646 0ECC                     l3638 0E80                     l3590 0B72  
                   l3582 0B62                     l3574 0B3C                     l3566 0AF2  
                   l3558 0AAC                     l3486 06AC                     l3910 16CC  
                   l3902 168A                     l3830 14B8                     l3806 13D6  
                   l3750 1196                     l3742 113C                     l3734 10FA  
                   l3718 1012                     l2688 2D32                     l2696 3228  
                   l2768 2480                     l2880 2F52                     l2872 2E3E  
                   l2864 2E26                     l2856 2E14                     l2848 2E02  
                   l2928 315C                     l2960 284C                     l2952 280C  
                   l2944 27D6                     l2936 2780                     l3680 0F7C  
                   l3672 0F56                     l3664 0F3C                     l3656 0F30  
                   l3648 0F02                     l3592 0B84                     l3584 0B68  
                   l3576 0B44                     l3568 0B04                     l3496 06E4  
                   l3488 06C8                     l3912 16DE                     l3904 1698  
                   l3840 14DA                     l3832 14C8                     l3816 1430  
                   l3808 13DA                     l3760 1208                     l3752 11FC  
                   l3744 114E                     l3736 1106                     l3728 1080  
                   l2890 2F9C                     l2786 24D6                     l2778 248C  
                   l2882 2F6A                     l2874 2F28                     l2866 2E2C  
                   l2858 2E18                     l2962 2860                     l2954 281E  
                   l2946 27DE                     l2938 2794                     l3674 0F72  
                   l3666 0F40                     l3594 0B8A                     l3578 0B4A  
                   l3498 06F6                     l3930 1754                     l3922 16F4  
                   l3914 16E4                     l3906 16A8                     l3842 14E0  
                   l3834 14CC                     l3826 14A2                     l3818 1496  
                   l3762 121A                     l3754 1202                     l3746 1160  
                   l3738 1118                     l2892 2FA0                     l2796 24FA  
                   l2788 24DA                     l2884 2F82                     l2876 2F2C  
                   l2980 2BA4                     l2868 2E32                     l2956 2832  
                   l2948 27F0                     l3676 0F74                     l3668 0F44  
                   l3596 0BA6                     l3924 1706                     l3916 16EE  
                   l3860 1562                     l3852 1502                     l3844 14F2  
                   l3836 14D0                     l3828 14B4                     l3772 1274  
                   l3764 121E                     l3908 16BA                     l2990 328C  
                   l2798 2526                     l2886 2F88                     l2878 2F3C  
                   l2982 2BBC                     l2974 3162                     l2958 283A  
                   l3678 0F78                     l3598 0BDE                     l3926 174A  
                   l3862 1572                     l3854 1514                     l3846 14FC  
                   l3838 14D4                     l3790 131C                     l3782 12E6  
                   l3774 12DA                     l3766 122E                     l2896 2FB4  
                   l2888 2F90                     l2992 3290                     l2984 2BEE  
                   l2976 31B2                     l2968 2868                     l3928 1750  
                   l3880 1602                     l3864 1584                     l3856 1558  
                   l3784 12F8                     l3776 12E0                     l3768 123E  
                   l3696 0F84                     l2898 2FB8                     l2994 3294  
                   l2986 2C0E                     l2978 2BA0                     l3890 1630  
                   l3882 1606                     l3874 15A6                     l3866 1596  
                   l3858 155E                     l3794 1352                     l3786 12FC  
                   l3698 0F92                     l2996 2EBC                     l3892 163C  
                   l3884 1616                     l3876 15B8                     l3868 15A0  
                   l3796 13B8                     l3788 130C                     l2998 2EDA  
                   l3894 1640                     l3886 161A                     l3878 15FC  
                   l3798 13BE                     l3896 165E                     l3888 1626  
                   l3898 166A                     l3988 287C                     u3000 25C6  
                   u3001 25C2                     u3010 25E8                     u3011 25E4  
                   u3020 2F3C                     u3100 3130                     u3021 2F38  
                   u3101 312C                     u3030 2F52                     u3110 3146  
                   u3031 2F4E                     u3111 3142                     u2400 2260  
                   u3040 2F6A                     u3200 2B7E                     u3120 315C  
                   u4000 080A                     u2401 225C                     u3041 2F66  
                   u3201 2B7A                     u3121 3158                     u4001 0806  
                   u3050 2F82                     u3130 2BEE                     u3210 1786  
                   u4010 099E                     u3051 2F7E                     u3131 2BEA  
                   u3211 1782                     u4011 099A                     u3060 2FB0  
                   u3140 2C0E                     u3300 18DA                     u3220 1798  
                   u4100 0AF2                     u4020 0A08                     u3061 2FAC  
                   u3141 2C0A                     u3301 18D6                     u3221 1794  
                   u4101 0AEE                     u4021 0A04                     u3070 2FC8  
                   u2510 23AE                     u2430 22BE                     u2414 2272  
                   u3150 2AC6                     u3310 18F2                     u3230 17A8  
                   u4110 0B04                     u4030 0A2E                     u3071 2FC4  
                   u2511 23AA                     u2431 22BA                     u2415 226E  
                   u3151 2AC2                     u3311 18EC                     u3231 17A4  
                   u4111 0B00                     u4031 0A2A                     u3080 2FF2  
                   u2520 23C8                     u2504 2382                     u2440 22D8  
                   u2424 2292                     u3160 2AE8                     u3400 19D6  
                   u3320 18F4                     u3240 17EA                     u2600 2000  
                   u4200 0E5A                     u4120 0B2A                     u4040 0A4A  
                   u3081 2FEE                     u2521 23C4                     u2505 237E  
                   u2441 22D4                     u2425 228E                     u3161 2AE4  
                   u3401 19D2                     u3241 17E6                     u2601 1FFC  
                   u4201 0E56                     u4121 0B26                     u4041 0A46  
                   u3170 2B0E                     u3410 1A0E                     u3330 191C  
                   u3250 1800                     u2610 2012                     u3090 311C  
                   u4210 0E80                     u4130 0B3C                     u4050 0A5C  
                   u3171 2B0A                     u3411 1A0A                     u3331 1918  
                   u3251 17FC                     u2611 200E                     u3091 3118  
                   u4211 0E7C                     u4131 0B38                     u4051 0A58  
                   u2380 328A                     u3180 2B30                     u3500 1B2A  
                   u3420 1A54                     u3340 193A                     u3260 1812  
                   u4220 0EA6                     u4060 0A82                     u4300 107C  
                   u2381 3286                     u3181 2B2C                     u3501 1B26  
                   u3421 1A50                     u3341 1936                     u3261 180E  
                   u4221 0EA2                     u4141 0B54                     u4061 0A7E  
                   u4301 1078                     u2550 2426                     u2534 23DA  
                   u2470 2336                     u2454 22EA                     u2390 224E  
                   u3190 2B4E                     u3510 1B40                     u3430 1A8A  
                   u3350 195A                     u3270 1822                     u4230 0ECC  
                   u4150 0BA6                     u4070 0A94                     u4310 10E6  
                   u2551 2422                     u2535 23D6                     u2471 2332  
                   u2455 22E6                     u2391 224A                     u3191 2B4A  
                   u3511 1B3C                     u3431 1A86                     u3351 1956  
                   u3271 181E                     u4231 0EC8                     u4151 0BA2  
                   u4071 0A90                     u4311 10E2                     u2560 2440  
                   u2544 23FA                     u2480 2350                     u2464 230A  
                   u2800 2D32                     u3520 1B54                     u3440 1A9A  
                   u3360 1968                     u3280 185E                     u3600 29DE  
                   u2720 2160                     u2704 2110                     u2640 2070  
                   u2624 2024                     u4240 0F02                     u4160 0BFA  
                   u4080 0ABA                     u4400 1270                     u4320 10FA  
                   u2561 243C                     u2545 23F6                     u2481 234C  
                   u2465 2306                     u2801 2D2E                     u3521 1B50  
                   u3441 1A96                     u3361 1964                     u3281 185A  
                   u3601 29DA                     u2721 215C                     u2705 210C  
                   u2641 206C                     u2625 2020                     u4241 0EFE  
                   u4161 0BF6                     u4081 0AB6                     u4401 126C  
                   u4321 10F6                     u2810 2D42                     u3530 1B6E  
                   u3450 1AC6                     u3370 1978                     u3290 186C  
                   u3610 2A1C                     u2730 2172                     u2714 2134  
                   u2650 2082                     u2634 2044                     u4250 0F18  
                   u4170 0DB6                     u4090 0ACC                     u4410 12DA  
                   u2811 2D3E                     u3531 1B6A                     u3451 1AC2  
                   u3371 1974                     u3291 1868                     u3611 2A18  
                   u2731 216E                     u2715 2130                     u2651 207E  
                   u2635 2040                     u4251 0F14                     u4171 0DB2  
                   u4091 0AC8                     u4411 12D6                     u4331 1110  
                   u2820 28B6                     u2900 2E9A                     u3700 1D2E  
                   u3540 1BA8                     u3460 1AD6                     u3380 19AA  
                   u3620 2A3A                     u4260 0F72                     u4180 0E20  
                   u4500 1558                     u4420 130C                     u2821 28B2  
                   u2901 2E96                     u3701 1D2A                     u3541 1BA4  
                   u3461 1AD2                     u3381 19A6                     u3621 2A36  
                   u4261 0F6E                     u4181 0E1C                     u4501 1554  
                   u4421 1308                     u4341 1122                     u2590 3272  
                   u2574 2452                     u2494 2362                     u2830 28D8  
                   u3710 1D60                     u3550 1BBA                     u3470 1AF2  
                   u3390 19B8                     u3630 2A5A                     u4190 0E3E  
                   u4510 1572                     u4430 134E                     u2591 326E  
                   u2575 244E                     u2495 235E                     u2831 28D4  
                   u3711 1D5C                     u3551 1BB6                     u3471 1AEE  
                   u3391 19B4                     u3631 2A56                     u4191 0E3A  
                   u4511 156E                     u4431 134A                     u4351 1134  
                   u4271 0FA8                     u2584 2472                     u2840 2912  
                   u3800 1ED2                     u3720 1D72                     u3560 1BCA  
                   u3480 1B02                     u3640 2AAA                     u2760 21D8  
                   u2744 2188                     u2680 20E8                     u2664 2098  
                   u4440 13B8                     u4280 100C                     u2585 246E  
                   u2841 290E                     u3801 1ECE                     u3721 1D6E  
                   u3561 1BC6                     u3481 1AFE                     u3641 2AA6  
                   u2761 21D4                     u2745 2184                     u2681 20E4  
                   u2665 2094                     u4601 16D6                     u4521 158E  
                   u4441 13B4                     u4361 1146                     u4281 1008  
                   u2850 2934                     u2930 24F6                     u2914 24A2  
                   u3810 1F04                     u3650 1C74                     u3570 1BEA  
                   u3490 1B14                     u2770 21EA                     u2754 21AC  
                   u2690 20FA                     u2674 20BC                     u4610 174A  
                   u4530 15FC                     u4450 13EA                     u4370 1192  
                   u4290 103A                     u2851 2930                     u2931 24F2  
                   u2915 249E                     u3811 1F00                     u3731 1D88  
                   u3651 1C70                     u3571 1BE6                     u3491 1B10  
                   u2771 21E6                     u2755 21A8                     u2691 20F6  
                   u2675 20B8                     u4611 1746                     u4531 15F8  
                   u4451 13E6                     u4371 118E                     u4291 1036  
                   u2860 295C                     u3900 26CA                     u2924 24C2  
                   u3820 1F16                     u3740 1DE8                     u3660 1C8E  
                   u3580 1BFC                     u4620 1764                     u4540 1616  
                   u4460 142C                     u4380 11FC                     u2861 2958  
                   u3901 26C6                     u2925 24BE                     u3821 1F12  
                   u3741 1DE4                     u3661 1C8A                     u3581 1BF8  
                   u4621 1760                     u4541 1612                     u4461 1428  
                   u4381 11F8                     u2870 298E                     u2950 2526  
                   u3750 1E00                     u3670 1CA0                     u3590 1C18  
                   u4550 165E                     u4470 1496                     u4390 122E  
                   u2871 298A                     u3911 26E6                     u2951 2522  
                   u3831 1F2C                     u3751 1DFC                     u3671 1C9C  
                   u3591 1C14                     u4551 165A                     u4471 1492  
                   u4391 122A                     u2880 2E60                     u3920 2716  
                   u2944 250C                     u3840 1F8C                     u3760 1E32  
                   u2784 2200                     u4560 167A                     u4480 14C8  
                   u2881 2E5C                     u3921 2712                     u2945 2508  
                   u3841 1F88                     u3761 1E2E                     u3681 1CB6  
                   u2785 21FC                     u4561 1676                     u4481 14C4  
                   u2890 2E7E                     u3850 1FA4                     u3770 1E44  
                   u3690 1D16                     u2794 2224                     u4570 1698  
                   u2891 2E7A                     u3851 1FA0                     u3771 1E40  
                   u3691 1D12                     u2795 2220                     u3931 0666  
                   u4571 1694                     u4491 14EA                     u2980 259C  
                   u2964 2544                     u3860 1FE2                     u3940 06AC  
                   u4580 16BA                     u2981 2598                     u2965 253E  
                   u3861 1FDE                     u3781 1E5A                     u3941 06A8  
                   u4581 16B6                     u2990 25AE                     u2974 2574  
                   u3790 1EBA                     u4590 16CC                     u3871 261A  
                   u2991 25AA                     u2975 256E                     u3791 1EB6  
                   u3951 06D2                     u4591 16C8                     u3880 264A  
                   u3960 073A                     u3881 2646                     u3961 0736  
                   u3970 0762                     u3891 269A                     u3971 075E  
                   u3981 0776                     u3990 07DE                     u3991 07DA  
                   _main 0F84                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000             main@agradece 027D  
          ?_escolheTempo 0001     escolheTempo@foguinho 0100          __end_of___aldiv 29B0  
        __end_of___almod 2BA0          __end_of___fladd 1C2C                    ?_main 0001  
          _escolheComida 1C2C          __end_of___lwdiv 2EBA                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 320C          __end_of_lcdInit 2E46          __end_of_pinMode 2232  
                  _valor 0073                    main@b 0230                    main@f 0241  
                  main@i 02A2                    main@k 029E                    main@s 0252  
                  tablat 000FF5          __end_of_ssdInit 31B8          __end_of_pwmSet1 2F26  
        __end_of_pwmInit 32A0                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8         __end_of_Delay2ms 3274     __end_of_digitalWrite 2480  
        __initialization 2C3C             __end_of_main 176C       __size_of_Delay40us 0018  
         ??_escolheTempo 001B           ?_escolheComida 0001                   ??_main 006C  
          __activetblptr 000002        escolheComida@flag 0067        escolheComida@msg3 003E  
   __size_of_lcdPosition 006A        lcdPosition@coluna 0009                   ___flge 29B0  
              ??___aldiv 0009                ??___almod 0017                ??___fladd 0009  
                 ___wmul 320C                ??___lwdiv 0005                   _kpInit 32AA  
                 _kpRead 32A0                   clear_0 2CC2                ??_lcdData 0007  
                 isa$std 000001                ??_lcdInit 0009                   main@fr 021F  
                 main@op 0298                   _strcmp 2BA0         __end_of_ssdDigit 3162  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 0007  
              ??_pwmSet1 0008                ??_pwmInit 0001        __end_of_Delay40us 328C  
             ___flge@ff1 0001               ___flge@ff2 0005               __accesstop 0080  
__end_of__initialization 2CC8            ___rparam_used 000001       __size_of_abreTampa 015A  
            pinMode@type 0003           __pcstackCOMRAM 0001             __pidataBANK0 2D50  
           __pidataBANK1 30B0             __pidataBANK2 3053             __pidataBANK3 2FF4  
        ??_escolheComida 000C                ?_Delay2ms 0001       escolheComida@F2980 00C2  
     escolheComida@F2982 0080       escolheComida@F2984 00AF       escolheComida@F2986 0098  
     __size_of_atraso_ms 0064     __end_of_escolheTempo 0F84    __size_of_digitalWrite 024E  
     escolheComida@tecla 0069                  ?___flge 0001               _lcdCommand 2CD2  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
             _kpDebounce 2480                  ?_strcmp 0001       __size_of_ssdUpdate 0150  
             ??_Delay2ms 0002        escolheTempo@F2970 0300        escolheTempo@F2964 01DD  
      escolheTempo@F2966 01C8        escolheTempo@F2968 0192               abreTampa@i 0039  
      __end_of_abreTampa 2754             _digitalWrite 2232        escolheTempo@tecla 018A  
      escolheTempo@tempo 0186                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 0019          kpDebounce@old_D 0006       lcdPosition@comando 000A  
        kpDebounce@tempo 007A                  ___aldiv 28A4          __size_of___flge 0104  
                ___almod 2AB4                  ___fladd 176C          __size_of___wmul 0026  
                ___lwdiv 2E46        __end_of_atraso_ms 2FF4             __psmallconst 0600  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 001A  
            ssdDigit@pos 0019                  __pcinit 2C3C                  _lcdData 31B8  
                __ramtop 0600                  _lcdInit 2DCE                  __ptext0 0F84  
                __ptext1 0612                  __ptext2 2754                  __ptext3 3162  
                __ptext4 310A                  __ptext5 2DCE                  __ptext6 1FE4  
                __ptext7 29B0                  __ptext8 176C                  __ptext9 2AB4  
                _display 0079          __size_of_strcmp 009C                  _pinMode 1FE4  
       ___aldiv@dividend 0001                  _ssdInit 3162                  _pwmSet1 2EBA  
                _pwmInit 328C                Delay2ms@i 0002                  main@msg 0200  
    kpDebounce@valorNovo 0071     end_of_initialization 2CC8            __Lmediumconst 0000  
           abreTampa@msg 001F            ?_pwmFrequency 000F            escolheTempo@i 0190  
          escolheTempo@k 0180        __end_of_ssdUpdate 28A4               ??_ssdDigit 001A  
       ___aldiv@quotient 000B                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE                  strcmp@l 0001                  strcmp@r 0004  
            ?_kpDebounce 0001           _valor@ssd$F178 0601              ___fladd@grs 0010  
  __size_of_escolheTempo 0972            ??_lcdPosition 000A           ??_pwmFrequency 0011  
             main@final2 028A                _Delay40us 3274           __end_of___flge 2AB4  
             atraso_ms@i 0003               atraso_ms@j 0005               atraso_ms@k 0006  
             atraso_ms@t 0001           __end_of___wmul 3232             _escolheTempo 0612  
         __end_of_kpInit 32B4           __end_of_kpRead 32AA   __end_of_valor@ssd$F178 0611  
         __end_of_strcmp 2C3C      start_initialization 2C3C        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E         escolheComida@aux 0065      __size_of_kpDebounce 017A  
             ?_Delay40us 0001    escolheComida@msg3_312 000F    escolheComida@msg3_314 0051  
  escolheComida@msg3_316 0027      __end_of_lcdPosition 2F90         lcdPosition@linha 000B  
               ??___flge 0009                 ??___wmul 0005                 ??_kpInit 0001  
               ??_kpRead 0003              __pdataBANK0 0080              __pdataBANK1 0192  
            __pdataBANK2 02A3              __pdataBANK3 0300    __end_of_escolheComida 1FE4  
               ??_strcmp 0007                ___fladd@a 0005                ___fladd@b 0001  
            __pbssCOMRAM 006F            __pcstackBANK1 0100            __pcstackBANK2 0200  
             pinMode@pin 0001                _abreTampa 25FA         ___lwdiv@dividend 0001  
               ?___aldiv 0001                 ?___almod 000F                 ?___fladd 0001  
      __size_of_ssdDigit 0058                 ?___lwdiv 0001                 ?_lcdData 0001  
       ___almod@dividend 000F                 ?_lcdInit 0001     __end_of_pwmFrequency 3258  
          lcdCommand@cmd 0008                _atraso_ms 2F90              __smallconst 0600  
       escolheTempo@flag 0184         escolheTempo@cont 018C         escolheTempo@msg2 016B  
       escolheTempo@msg3 0140                 ?_pinMode 0001                 ?_ssdInit 0001  
               ?_pwmSet1 0001                 ?_pwmInit 0001         ___lwdiv@quotient 0005  
            _lcdPosition 2F26               ?_abreTampa 0001         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009              ??_Delay40us 0001  
         ___wmul@product 0005             ??_lcdCommand 0007                main@F2931 02D6  
              main@F2941 02F4                main@F2933 02C5                main@F2935 02B4  
              main@F2929 0340                main@F2945 02E7                main@F2937 02A3  
              main@F2939 01AE                _ssdUpdate 2754               pwmSet1@val 000B  
           ??_kpDebounce 0001                fp__kpRead 0000        ___wmul@multiplier 0001  
             ?_atraso_ms 0001          lcdCommand@old_D 0007    kpDebounce@valorAntigo 006F  
              main@final 0263                 _Delay2ms 3258                main@tecla 029C  
              copy_data0 2C50                copy_data1 2C70                copy_data2 2C90  
              copy_data3 2CB0       __end_of_lcdCommand 2D50             lcdData@old_D 0008  
           lcdData@valor 0007       __end_of_kpDebounce 25FA           abreTampa@F2950 00F0  
         abreTampa@F2952 00E3           abreTampa@F2954 00D5                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 0001         __size_of___aldiv 010C  
       __size_of___almod 00EC         __size_of___fladd 04C0         __size_of___lwdiv 0074  
        pwmSet1@porcento 000A         __size_of_lcdData 0054         __size_of_lcdInit 0078  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 1C2C                 __ptext11 2BA0                 __ptext20 328C  
               __ptext12 2F26                 __ptext21 3232                 __ptext13 32A0  
               __ptext22 28A4                 __ptext14 32AA                 __ptext23 31B8  
               __ptext15 2480                 __ptext24 2CD2                 __ptext16 25FA  
               __ptext25 2232                 __ptext17 2EBA                 __ptext26 3258  
               __ptext18 320C                 __ptext27 3274                 __ptext19 2E46  
               __ptext28 2F90                 __ptext29 0000         __size_of_ssdInit 0056  
       __size_of_pwmSet1 006C         __size_of_pwmInit 0014          ___almod@divisor 0013  
            ??_abreTampa 0011          ___almod@counter 0017          escolheTempo@aux 0182  
        escolheTempo@msg 015C            __size_of_main 07E8               Delay40us@i 0001  
               _ssdDigit 310A                 isa$xinst 000000    __size_of_pwmFrequency 0026  
               main@aux2 0296                 main@aux3 029A              ??_atraso_ms 0003  
         escolheComida@i 006B           escolheComida@k 0064            ?_digitalWrite 0001  
          abreTampa@msg2 002C            abreTampa@msg3 0011        digitalWrite@value 0003  
           _pwmFrequency 3232              ??_ssdUpdate 0007              kpDebounce@i 000A  
            kpDebounce@j 0009              kpDebounce@k 0007           ??_digitalWrite 0005  
           ___aldiv@sign 000A            ___fladd@signs 000D             ?_lcdPosition 0009  
        digitalWrite@pin 0001             ___almod@sign 0018             ___fladd@aexp 000E  
           ___fladd@bexp 000F   __size_of_escolheComida 03B8  
